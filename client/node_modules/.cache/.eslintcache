[{"/Users/likhitha/Documents/cms/client/src/index.js":"1","/Users/likhitha/Documents/cms/client/src/App.js":"2","/Users/likhitha/Documents/cms/client/src/serviceWorker.js":"3","/Users/likhitha/Documents/cms/client/src/store.js":"4","/Users/likhitha/Documents/cms/client/src/actions/authActions.js":"5","/Users/likhitha/Documents/cms/client/src/utils/setAuthToken.js":"6","/Users/likhitha/Documents/cms/client/src/components/dashboard/Map1.js":"7","/Users/likhitha/Documents/cms/client/src/components/dashboard/FloorMap.js":"8","/Users/likhitha/Documents/cms/client/src/components/dashboard/ModalTemplate.js":"9","/Users/likhitha/Documents/cms/client/src/components/private-route/PrivateRoute.js":"10","/Users/likhitha/Documents/cms/client/src/components/dashboard/ViewBuilding.js":"11","/Users/likhitha/Documents/cms/client/src/components/layout/Navbar.js":"12","/Users/likhitha/Documents/cms/client/src/components/dashboard/EditBuilding.js":"13","/Users/likhitha/Documents/cms/client/src/components/dashboard/EditFloormap.js":"14","/Users/likhitha/Documents/cms/client/src/components/auth/Register.js":"15","/Users/likhitha/Documents/cms/client/src/components/auth/Login.js":"16","/Users/likhitha/Documents/cms/client/src/components/dashboard/services.js":"17","/Users/likhitha/Documents/cms/client/src/actions/types.js":"18","/Users/likhitha/Documents/cms/client/src/components/dashboard/history.js":"19","/Users/likhitha/Documents/cms/client/src/components/dashboard/DisplayEntries.js":"20","/Users/likhitha/Documents/cms/client/src/components/dashboard/Dashboard.js":"21","/Users/likhitha/Documents/cms/client/src/components/dashboard/Tabs.js":"22","/Users/likhitha/Documents/cms/client/src/components/dashboard/LayerControl2.js":"23","/Users/likhitha/Documents/cms/client/src/components/dashboard/SlickSliderStyle1.js":"24","/Users/likhitha/Documents/cms/client/src/reducers/index.js":"25","/Users/likhitha/Documents/cms/client/src/components/dashboard/Tab.js":"26","/Users/likhitha/Documents/cms/client/src/reducers/errorReducer.js":"27","/Users/likhitha/Documents/cms/client/src/reducers/authReducer.js":"28","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/index.js":"29","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/serviceWorker.js":"30","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/App.js":"31","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/store.js":"32","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/actions/authActions.js":"33","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/utils/setAuthToken.js":"34","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/auth/Login.js":"35","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/Map1.js":"36","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/ModalTemplate.js":"37","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/auth/Register.js":"38","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/FloorMap.js":"39","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/private-route/PrivateRoute.js":"40","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/ViewBuilding.js":"41","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/EditBuilding.js":"42","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/EditFloormap.js":"43","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/layout/Navbar.js":"44","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/services.js":"45","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/actions/types.js":"46","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/Tabs.js":"47","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/DisplayEntries.js":"48","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/history.js":"49","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/Dashboard.js":"50","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/SlickSliderStyle1.js":"51","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/LayerControl2.js":"52","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/reducers/index.js":"53","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/Tab.js":"54","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/reducers/errorReducer.js":"55","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/reducers/authReducer.js":"56","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/index.js":"57","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/App.js":"58","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/serviceWorker.js":"59","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/store.js":"60","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/actions/authActions.js":"61","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/utils/setAuthToken.js":"62","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/auth/Register.js":"63","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/layout/Navbar.js":"64","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/ModalTemplate.js":"65","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/auth/Login.js":"66","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/FloorMap.js":"67","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/Map1.js":"68","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/EditBuilding.js":"69","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/ViewBuilding.js":"70","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/private-route/PrivateRoute.js":"71","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/EditFloormap.js":"72","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/services.js":"73","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/actions/types.js":"74","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/history.js":"75","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/Dashboard.js":"76","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/SlickSliderStyle1.js":"77","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/DisplayEntries.js":"78","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/Tabs.js":"79","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/LayerControl2.js":"80","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/reducers/index.js":"81","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/Tab.js":"82","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/reducers/errorReducer.js":"83","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/reducers/authReducer.js":"84"},{"size":451,"mtime":1606829565698,"results":"85","hashOfConfig":"86"},{"size":3278,"mtime":1619638875712,"results":"87","hashOfConfig":"86"},{"size":4948,"mtime":1606829565699,"results":"88","hashOfConfig":"86"},{"size":447,"mtime":1606829565699,"results":"89","hashOfConfig":"86"},{"size":1650,"mtime":1606829565695,"results":"90","hashOfConfig":"86"},{"size":331,"mtime":1606829565700,"results":"91","hashOfConfig":"86"},{"size":30929,"mtime":1620331218386,"results":"92","hashOfConfig":"86"},{"size":7066,"mtime":1613423317034,"results":"93","hashOfConfig":"86"},{"size":2072,"mtime":1613637516765,"results":"94","hashOfConfig":"86"},{"size":590,"mtime":1606829565698,"results":"95","hashOfConfig":"86"},{"size":25747,"mtime":1619783544566,"results":"96","hashOfConfig":"86"},{"size":1025,"mtime":1618164080366,"results":"97","hashOfConfig":"86"},{"size":35125,"mtime":1620330381360,"results":"98","hashOfConfig":"86"},{"size":32182,"mtime":1618164080336,"results":"99","hashOfConfig":"86"},{"size":5883,"mtime":1619678152006,"results":"100","hashOfConfig":"86"},{"size":5184,"mtime":1619679113097,"results":"101","hashOfConfig":"86"},{"size":957,"mtime":1618164080363,"results":"102","hashOfConfig":"86"},{"size":136,"mtime":1606829565696,"results":"103","hashOfConfig":"86"},{"size":84,"mtime":1608888543686,"results":"104","hashOfConfig":"86"},{"size":5264,"mtime":1608157034026,"results":"105","hashOfConfig":"86"},{"size":1960,"mtime":1619676209011,"results":"106","hashOfConfig":"86"},{"size":1190,"mtime":1608158026388,"results":"107","hashOfConfig":"86"},{"size":9010,"mtime":1618164080340,"results":"108","hashOfConfig":"86"},{"size":1616,"mtime":1609282261354,"results":"109","hashOfConfig":"86"},{"size":207,"mtime":1606829565699,"results":"110","hashOfConfig":"86"},{"size":682,"mtime":1607637539256,"results":"111","hashOfConfig":"86"},{"size":248,"mtime":1607375463843,"results":"112","hashOfConfig":"86"},{"size":702,"mtime":1607375421322,"results":"113","hashOfConfig":"86"},{"size":451,"mtime":1606829565698,"results":"114","hashOfConfig":"115"},{"size":4948,"mtime":1606829565699,"results":"116","hashOfConfig":"115"},{"size":3278,"mtime":1619638875712,"results":"117","hashOfConfig":"115"},{"size":447,"mtime":1606829565699,"results":"118","hashOfConfig":"115"},{"size":1650,"mtime":1606829565695,"results":"119","hashOfConfig":"115"},{"size":331,"mtime":1606829565700,"results":"120","hashOfConfig":"115"},{"size":5184,"mtime":1619679113097,"results":"121","hashOfConfig":"115"},{"size":30929,"mtime":1620331218386,"results":"122","hashOfConfig":"115"},{"size":2072,"mtime":1613637516765,"results":"123","hashOfConfig":"115"},{"size":5976,"mtime":1623148933563,"results":"124","hashOfConfig":"115"},{"size":7066,"mtime":1613423317034,"results":"125","hashOfConfig":"115"},{"size":590,"mtime":1606829565698,"results":"126","hashOfConfig":"115"},{"size":25747,"mtime":1619783544566,"results":"127","hashOfConfig":"115"},{"size":35125,"mtime":1620330381360,"results":"128","hashOfConfig":"115"},{"size":32182,"mtime":1618164080336,"results":"129","hashOfConfig":"115"},{"size":1025,"mtime":1618164080366,"results":"130","hashOfConfig":"115"},{"size":957,"mtime":1618164080363,"results":"131","hashOfConfig":"115"},{"size":136,"mtime":1606829565696,"results":"132","hashOfConfig":"115"},{"size":1190,"mtime":1608158026388,"results":"133","hashOfConfig":"115"},{"size":5264,"mtime":1608157034026,"results":"134","hashOfConfig":"115"},{"size":84,"mtime":1608888543686,"results":"135","hashOfConfig":"115"},{"size":1997,"mtime":1623147249399,"results":"136","hashOfConfig":"115"},{"size":1616,"mtime":1609282261354,"results":"137","hashOfConfig":"115"},{"size":9010,"mtime":1618164080340,"results":"138","hashOfConfig":"115"},{"size":207,"mtime":1606829565699,"results":"139","hashOfConfig":"115"},{"size":682,"mtime":1607637539256,"results":"140","hashOfConfig":"115"},{"size":248,"mtime":1607375463843,"results":"141","hashOfConfig":"115"},{"size":702,"mtime":1607375421322,"results":"142","hashOfConfig":"115"},{"size":451,"mtime":1606829565698,"results":"143","hashOfConfig":"144"},{"size":3278,"mtime":1619638875712,"results":"145","hashOfConfig":"144"},{"size":4948,"mtime":1606829565699,"results":"146","hashOfConfig":"144"},{"size":447,"mtime":1606829565699,"results":"147","hashOfConfig":"144"},{"size":1650,"mtime":1606829565695,"results":"148","hashOfConfig":"144"},{"size":331,"mtime":1606829565700,"results":"149","hashOfConfig":"144"},{"size":5976,"mtime":1623148933563,"results":"150","hashOfConfig":"144"},{"size":1025,"mtime":1618164080366,"results":"151","hashOfConfig":"144"},{"size":2072,"mtime":1613637516765,"results":"152","hashOfConfig":"144"},{"size":5184,"mtime":1619679113097,"results":"153","hashOfConfig":"144"},{"size":7066,"mtime":1613423317034,"results":"154","hashOfConfig":"144"},{"size":30929,"mtime":1620331218386,"results":"155","hashOfConfig":"144"},{"size":35149,"mtime":1623658098295,"results":"156","hashOfConfig":"144"},{"size":25747,"mtime":1619783544566,"results":"157","hashOfConfig":"144"},{"size":590,"mtime":1606829565698,"results":"158","hashOfConfig":"144"},{"size":32182,"mtime":1623657997699,"results":"159","hashOfConfig":"144"},{"size":957,"mtime":1618164080363,"results":"160","hashOfConfig":"144"},{"size":136,"mtime":1606829565696,"results":"161","hashOfConfig":"144"},{"size":84,"mtime":1608888543686,"results":"162","hashOfConfig":"144"},{"size":1997,"mtime":1623147249399,"results":"163","hashOfConfig":"144"},{"size":1616,"mtime":1609282261354,"results":"164","hashOfConfig":"144"},{"size":5264,"mtime":1608157034026,"results":"165","hashOfConfig":"144"},{"size":1190,"mtime":1608158026388,"results":"166","hashOfConfig":"144"},{"size":9010,"mtime":1618164080340,"results":"167","hashOfConfig":"144"},{"size":207,"mtime":1606829565699,"results":"168","hashOfConfig":"144"},{"size":682,"mtime":1607637539256,"results":"169","hashOfConfig":"144"},{"size":248,"mtime":1607375463843,"results":"170","hashOfConfig":"144"},{"size":702,"mtime":1607375421322,"results":"171","hashOfConfig":"144"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},"1q5fj1b",{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"174"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"174"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"174"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"174"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"174"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"174"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"174"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"174"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"174"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"174"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},"hhds93",{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"243"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"243"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"243"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"243"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"243"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"243"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"243"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"243"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"243"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"243"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"243"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},"1rrmnv6",{"filePath":"302","messages":"303","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"301"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"301"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"301"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"301"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"301"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":54,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"301"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"301"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"301"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"301"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"301"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},"/Users/likhitha/Documents/cms/client/src/index.js",[],["357","358"],"/Users/likhitha/Documents/cms/client/src/App.js",["359","360","361"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\n//import Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport ModalTemplate from \"./components/dashboard/ModalTemplate\"\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\n//import Dashboard from \"./components/dashboard/DashboardCms/index\";\n//import MapView from \"./components/dashboard/MapView\";\n\n\n\nimport \"./App.css\";\nimport Map1 from \"./components/dashboard/Map1\";\n//import FloorMap from \"./components/dashboard/FloorMap\";\nimport FloorMap from \"./components/dashboard/FloorMap\";\nimport ViewBuilding from \"./components/dashboard/ViewBuilding\";\nimport EditBuilding from \"./components/dashboard/EditBuilding\";\n\nimport EditFloormap from \"./components/dashboard/EditFloormap\";\n//import Routing from \"./components/dashboard/Routing\";\n\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n          \n\n           <Navbar /> \n            <Route exact path=\"/\" component={Login} />\n           \n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            <Route path=\"/FloorMap/:refnum\" component={FloorMap} /> \n            {/* <Route exact path=\"/EditFloormap/:refnum\" component={EditFloormap} /> */}\n            <Route exact path=\"/modaltemplate\" component={ModalTemplate} />\n            <Route exact path=\"/ViewBuilding/:refnum\" component={ViewBuilding} />\n            <Route exact path=\"/EditBuilding/:refnum\" component={EditBuilding} />\n\n\n            {/* <Route exact path=\"/routing\" component={Routing}/> */}\n            {/* <Route path=\"/MazeMap\" component={MazeMapWrapper} /> */}\n\n            <Switch>\n              {/* <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />  */}\n              <PrivateRoute exact path=\"/Map1\" component={Map1} /> \n              {/* <PrivateRoute exact path=\"/ViewBuilding\" component={ViewBuilding} /> */}\n              {/* <PrivateRoute exact path=\"/EditFloormap\" component={EditFloormap} /> */}\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","/Users/likhitha/Documents/cms/client/src/serviceWorker.js",[],"/Users/likhitha/Documents/cms/client/src/store.js",[],"/Users/likhitha/Documents/cms/client/src/actions/authActions.js",[],"/Users/likhitha/Documents/cms/client/src/utils/setAuthToken.js",[],"/Users/likhitha/Documents/cms/client/src/components/dashboard/Map1.js",["362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395"],"import React, { useEffect, useRef, useState } from \"react\";\n\nimport { Container, Table, Row, Col, Card, CardTitle, CardBody, Modal, ModalHeader, Button, ModalFooter, ModalBody, Label, Input, Form, FormGroup } from 'reactstrap';\n\nimport {v4 as uuidv4} from 'uuid';\nimport DisplayEntries from \"./DisplayEntries\"\nimport service from \"./services.js\";\n// import { CardBody, Card } from 'reactstrap';\nimport L from 'leaflet';\nimport { EditControl } from \"react-leaflet-draw\";\nimport { Polygon, Popup, Rectangle, Marker, TileLayer, FeatureGroup } from \"react-leaflet\";\nimport { Link } from \"react-router-dom\";\n// import { Table, Container, Col, Row, PopUp, Button } from \"reactstrap\";\nimport { Map } from \"react-leaflet\";\n\n// import { Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap';\nimport Tabs from \"./Tabs\";\nimport PropTypes from \"prop-types\";\nimport DashBoard from \"./Dashboard\";\n//import icon from \"./icon_building.png\";\nimport { Icon, marker } from \"leaflet\";\nimport { SelectionState } from \"@devexpress/dx-react-grid\";\n//import EditFloormap from \"./EditFloormap\";\nimport history from \"./history\"\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport { divIcon } from \"leaflet\";\n// import '../../../node_modules/leaflet/dist/leaflet.css';\nimport icon from '../../../node_modules/leaflet/dist/images/marker-icon.png';\nimport iconShadow from '../../../node_modules/leaflet/dist/images/marker-shadow.png';\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  map: ({\n    height: `calc(90vh - 90px)`,\n    width: '60%',\n    zIndex: 0\n  }),\n  buttonWrapper: {\n    zIndex: 1,\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    marginLeft: \"30%\",\n    marginBottom: \"8%\",\n    transform: \"translateX(-50%)\",\n  },\n  headerWrapper: {\n    zIndex: 1,\n    marginLeft: theme.spacing(3),\n    marginTop: theme.spacing(1),\n  }\n}));\n\n\n\nconst Map1 = (props) => {\n\n\n  let mapRef = useRef();\n  const [markers, setMarkers] = useState([])\n  const [newLat, setNewLat] = useState('')\n  const [newLng, setNewLng] = useState('')\n  const [newName, setNewName] = useState('')\n  const [delBuildingId, setDelBuildingId] = useState('')\n  const [addBBuildingId, setAddBBuildingId] = useState('')\n\n  const [displayPolygonControl, setdisplayPolygonControl] = useState(false);\n\n\n\n  const [mapLayers, setMapLayers] = useState([]);\n  const myIcon = L.icon({\n    iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.0.3/images/marker-icon.png',\n    iconSize: [64, 64],\n    iconAnchor: [32, 64],\n    popupAnchor: null,\n    shadowUrl: null,\n    shadowSize: null,\n    shadowAnchor: null\n  });\n  // delete start\n  const [modalDelete, setModalDelete] = useState(false);\n  const classes = useStyles(props)\n  const editRef = useRef();\n  const editRefPoly = useRef();\n\n  const [modalBoundaryError, setmodalBoundaryError] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [modal1, setModal1] = useState(false);\n  const [drawing, setDrawing] = useState(false);\n\n  const handleBoundary = () => {\n\n    //Edit this method to perform other actions\n\n    if (!drawing) {\n      editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.enable()\n    } else {\n      editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.completeShape()\n      editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.disable()\n    }\n    setDrawing(!drawing)\n  }\n\n  const handleManageBoundaries = (e) => {\n\n    const bId = e.target.getAttribute('value');\n\n    debugger;\n    editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.enable();\n    setAddBBuildingId(bId);\n\n  }\n\n\n\n  const onShapeDrawn = (e) => {\n    let boundaries = [];\n    const bId = addBBuildingId;\n    const { layerType, layer } = e;\n    let markersLcl = markers;\n\n    if (bId === \"\" && layerType === \"polygon\") {\n      editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.disable();\n      debugger;\n      editRef.current.leafletElement._toolbars.edit.options.featureGroup.removeLayer(layer);\n      toggleModalBoundaryError();\n\n    } else {\n      if (layerType === \"polygon\") {\n        const { _leaflet_id } = layer;\n        editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.disable();\n        for (var j = 0; j < markersLcl.length; j++) {\n          if (bId === markersLcl[j].id) {\n            for (var k = 0; k < layer._latlngs[0].length; k++) {\n              var point = [layer._latlngs[0][k].lat, layer._latlngs[0][k].lng];\n              boundaries.push(point);\n            }\n            markersLcl[j].boundaries = boundaries;\n            setMarkers(markersLcl);\n            service.updateBuilding(markersLcl[j].id,markersLcl[j]);\n          }\n\n        }\n        debugger;\n      } else if (layerType === \"marker\") {\n        setNewLat(layer.getLatLng().lat);\n        setNewLng(layer.getLatLng().lng);\n        toggleModal();\n      }\n    }\n\n\n    // e.layer.on('click', () => {\n    //   editRef.current.leafletElement._toolbars.edit._modes.edit.handler.enable()\n    // })\n    // e.layer.on('contextmenu', () => {\n    //   //do some contextmenu action here\n    // })\n    // e.layer.bindTooltip(\"Text\",\n    //   {\n    //     className: 'leaflet-draw-tooltip:before leaflet-draw-tooltip leaflet-draw-tooltip-visible',\n    //     sticky: true,\n    //     direction: 'right'\n    //   }\n    // );\n  }\n\n  const [defaultBoard] = useState(\n    {\n      id: 0,\n      title: '',\n      color: '',\n      list: [\n\n      ]\n    },\n  );\n  const [defaultTask] = useState(\n    {\n      id: 0,\n      name: '',\n      description: '',\n      status: 0\n    }\n  );\n  const [boards] = useState([\n    {\n      id: 1,\n      title: 'Todo',\n      color: 'bg-primary',\n      list: [\n        { id: 1, name: 'John', description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s', status: 0, date: '2020-01-1' },\n      ]\n    },\n    {\n      id: 2,\n      title: 'Planing',\n      color: 'bg-success',\n      list: [\n        { id: 1, name: 'Juan', description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s', status: 1, date: '2020-01-5' }\n      ]\n    },\n    {\n      id: 3,\n      title: 'Working',\n      color: 'bg-info',\n      list: [\n        { id: 1, name: 'Juan', description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s', status: 0, date: '2020-01-6' },\n      ]\n    },\n    {\n      id: 4,\n      title: 'Testing',\n      color: 'bg-warning',\n      list: [\n        { id: 1, name: 'Juan', description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s', status: 0, date: '2020-01-8' }\n\n      ]\n    },\n    {\n      id: 5,\n      title: 'Complete',\n      color: 'bg-danger',\n      list: [\n        { id: 5, name: 'Juan', description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s', status: 0, date: '02 jan 2020' }\n      ]\n    }\n  ]);\n  const [colors] = useState([\n    'bg-primary',\n    'bg-success',\n    'bg-warning',\n    'bg-info',\n    'bg-danger'\n  ]);\n\n\n  const toggleModal = () => setModal(!modal);\n  const toggleModalBoundaryError = () => setmodalBoundaryError(!modalBoundaryError);\n  \n  const toggleModalDelete = () => setModalDelete(!modalDelete);\n\n  const toggleModal1 = () => setModal1(!modal1);\n\n  const newNameChange = (e) => {\n    if (e.target.value.length < 20) {\n      setNewName(e.target.value);\n    }\n  };\n  const saveBoard = (item) => {\n    // window.location.reload();\n    const newBName = newName;\n    const newBLat = newLat;\n    const newBLng = newLng;\n    debugger;\n    if (newName === \"\") {\n      // toggleModal();\n    } else {\n      //const id = \"B-\" + new Date().getTime().toString();\n      let id = uuidv4();\n      const emptyBuilding = {\n        \"link\": \"/ViewBuilding/\" + id,\n        \"id\": id,\n        \"name\": newBName,\n        \"description\": newBName,\n        \"street\": \"\",\n        \"Apartment\": \"\",\n        \"doornum\": \"\",\n        \"pincode\": \"\",\n        \"region\": \"\",\n        \"country\": \"\",\n        \"latitude\": newBLat,\n        \"longitude\": newBLng,\n        \"floors\": [],\n        \"boundaries\":[]\n      };\n      setNewName(\"\");\n      setNewLat(0.0);\n      setNewLng(0.0);\n      // const markersLocal = markers;\n      // markers.push(emptyBuilding);\n      service.update(emptyBuilding);\n      window.location.reload();\n    }\n  };\n  const saveTask = (item) => {\n    // let index = boards.list.findIndex(task => task.id === item.id)\n    // if (index !== -1) {\n    //   boards.list[index] = item\n    // } else {\n    //     boards.list.push(item)\n    // }\n\n  };\n  const deleteBuilding = (e) => {\n\n    const id = e.target.getAttribute('value');\n    if (id !== null && id !== undefined && id !== \"\") {\n      setDelBuildingId(id);\n      toggleModalDelete();\n    }\n\n\n  }\n\n  const deleteBuildingConfirm = (e) => {\n\n    debugger;\n    const bid = delBuildingId;\n    service.deletion(bid);\n    window.location.reload();\n\n\n  }\n  // delete end\n\n  useEffect(() => {\n\n\n    service\n      .getAll()\n      .then(allEntries => {\n        console.log(\"returning\", allEntries)\n\n        setMarkers(allEntries)\n        debugger;\n\n      })\n  }, [])\n\n\n\n  // const changeHandler = (event) => setNewLat(event.target.value)\n  // const changeHandler1 = (event) => setNewLng(event.target.value)\n  // const changeHandler2 = (event) => setNewName(event.target.value)\n  //const changeHandlerFilter = (event) => setNewFilter(event.target.value)\n\n\n\n  const position = [60.21749913, 24.938379];\n  const position1 = [60.21749913, 24.806496774]\n  console.log(position)\n\n\n\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  //const [searchResults, setSearchResults] = React.useState([]);\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    // const results = markers.filter(marker =>\n    // (marker.name.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n\n\n    // )\n    // );\n\n    const results = markers.filter(marker =>\n      (JSON.stringify(marker).toLowerCase().includes(searchTerm.toLocaleLowerCase())\n  \n  \n      )\n      );\n    setMarkers(results);\n    if (searchTerm === \"\") {\n      service\n        .getAll()\n        .then(allEntries => {\n          console.log(\"returning\", allEntries)\n\n          setMarkers(allEntries)\n        })\n    }\n\n    console.log(results)\n  }, [searchTerm]);\n\n  // this.setState({\n  //   searchValue: search,\n  //   filteredPeople: this.state.people.filter(\n  //    item =>\n  //     (item.lastname && item.lastname.toLowerCase().includes(search)) ||\n  //     (item.name && item.name.toLowerCase().includes(search))\n  //   )\n  //  });\n  let DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow\n  });\n\n\n  const flyToMarker = (e) => {\n\n    const idx = e.target.getAttribute('value');\n    const markersLcl = markers;\n    const itemLcl = markersLcl[idx];\n\n\n\n\n\n    mapRef.current.leafletElement.flyTo([itemLcl.latitude, itemLcl.longitude], 16)\n  }\n  const handleDelete = (id, nameToBeDeleted, e) => {\n    if (window.confirm(`Delete ${nameToBeDeleted}?`)) {\n      service\n        .deletion(id)\n        .then(() => {\n          setMarkers(markers.filter(marker => marker.id !== id));\n          window.confirm(`Deleted ${nameToBeDeleted}`);\n        })\n        .catch(() => {\n          window.confirm(`Error: ${nameToBeDeleted} already deleted`, 'red');\n          setMarkers(markers.filter((marker) => marker.id !== id));\n        });\n    }\n  }\n\n  const handleUpdate = (id, nameToBeDeleted, e) => {\n\n  }\n\n  function renderPopup (item){\n  \n    return (\n      \n      <Popup >\n        {item.description}\n     \n         \n        {/* <Link  to={\"/ViewBuilding/\" + item.id} >{item.description}</Link> */}\n      </Popup>\n      \n    );\n  }\n\n\n\n  const handleClick = (e) => {\n    e.latlng()\n  }\n\n\n\n\n\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  }\n  const iconMarkup = renderToStaticMarkup(\n    <i class=\"fas fa-building\" />\n\n  );\n  const customMarkerIcon = divIcon({\n    html: iconMarkup\n  });\n\n  const _onCreate = (e) => {\n    let latlng = {}\n    if (e.layer !== undefined && e.layer !== null) {\n      latlng = e.layer.getLatLng();\n      setNewLat(latlng.lat);\n      setNewLng(latlng.lng);\n    }\n    if (isOpen === false) {\n\n      toggleModal();\n    }\n\n\n  };\n\n  const _onEdited = (e) => {\n    console.log(e);\n    const {\n      layers: { _layers },\n    } = e;\n\n    Object.values(_layers).map(({ _leaflet_id, editing }) => {\n      setMapLayers((layers) =>\n        layers.map((l) =>\n          l.id === _leaflet_id\n            ? { ...l, latlngs: { ...editing.latlngs[0] } }\n            : l\n        )\n      );\n    });\n  };\n  \n\n  const onChangeSearch = (e) => {\n\n    const val = e.target.value;\n\n    setSearchTerm(val);\n\n  }\n\n  return (\n\n\n\n    <div id=\"container\" >\n      <Card className=\"iq-card mb-4\" >\n        <Input type=\"text\" name=\"title\" id=\"exampleEmail\"\n          placeholder=\"Search building by name\"\n          className=\"form-control mb-8 font-weight-bold \" value={searchTerm} onChange={onChangeSearch} style={{ margin: \"1rem\" }}\n        />\n      </Card>\n\n      {/* edit start */}\n      <Row>\n        <Col sm=\"12\">\n          <Card className=\"iq-card\">\n            {/* <div className=\"iq-card-header d-flex justify-content-between\">\n              <CardTitle className=\"iq-header-title\">\n                Map\n               \n              </CardTitle>\n            </div> */}\n            <CardBody className=\"iq-card-body\">\n              <p></p>\n              <Map ref={mapRef}\n                style={{ height: \"500px\", width: \"100%\" }}\n\n                center={[60.21679719545689, 24.810291821854594]} zoom={16} maxZoom={100}\n\n              >\n\n                <TileLayer\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                />\n\n                {\n                  markers.map((item, index) => (\n\n                    <Marker key={item.id}\n                      position={[item.latitude, item.longitude]}\n                      onMouseOver={(e) => {\n                        e.target.openPopup();\n                      }}\n                      onMouseOut={(e) => {\n                        e.target.closePopup();\n                      }}\n                    >\n                      {/* <renderPopup item={item}></renderPopup> */}\n\n                      {renderPopup(item) }\n\n                    </Marker>\n                  ))\n                }\n\n\n                <FeatureGroup tyle={{ display: displayPolygonControl ? \"block\" : \"none\" }}>\n                  <EditControl\n                    ref={editRef}\n                    position=\"topright\"\n                    onCreated={onShapeDrawn}\n                    onEdited={_onEdited}\n                    // onDeleted={_onDeleted}\n                    draw={{\n                      rectangle: false,\n                      polyline: false,\n                      circle: false,\n                      circlemarker: false,\n                      polygon: true,\n                    }}\n                  >\n                    \n                      \n\n                  </EditControl>\n                 \n                  {/* <EditControl\n                  ref = {editRefPoly}\n                    position=\"topright\"\n                    onCreated={onShapeDrawn}\n                    // onEdited={_onEdited}\n                    // onDeleted={_onDeleted}\n                    showDrawControl=\"{displayPolygonControl}\"\n                    draw={{\n                      rectangle: false,\n                      polyline: false,\n                      circle: false,\n                      circlemarker: false,\n                      marker: false,\n                    }}\n                  /> */}\n                </FeatureGroup>\n                {\n                      markers.map((markerx,iidx)=>(\n                        <Polygon positions={markerx.boundaries}></Polygon>\n                        \n                      ))\n                    }\n\n              </Map>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n\n      <Container fluid={true}>\n        <Row>\n          <Col md={12}>\n            <Row>\n              <div className=\"col-12 text-right\">\n                {/* onSubmit={saveBoard(defaultBoard)} */}\n                <Form >\n                  <Modal isOpen={modal} fade={false} toggle={toggleModal}>\n                    <ModalHeader toggle={toggleModal} className={\"border-0\"}>\n                      <h5 className={\"text-primary card-title\"}>\n                        New Building\n                                                    </h5>\n                    </ModalHeader>\n                    <ModalBody>\n                      <Label>Please provide a name..</Label>\n                      <Input type=\"text\" name=\"title\" value={newName} onChange={newNameChange} />\n                    </ModalBody>\n                    <ModalFooter>\n                      {/* <Button color=\"secondary\" onClick={toggleModal}>\n                        Cancel\n                                                </Button> */}\n                      <Button color=\"primary\" onClick={saveBoard} active=\"false\">\n                        Save\n                                                </Button>\n                    </ModalFooter>\n                  </Modal>\n                </Form>\n              </div>\n\n            </Row>\n\n           \n                <Row>\n                  <div className=\"col-12 text-right\">\n                    {/* onSubmit={saveBoard(defaultBoard)} */}\n                    <Form >\n                      <Modal isOpen={modalBoundaryError} fade={false} toggle={toggleModalBoundaryError}>\n                        <ModalHeader toggle={toggleModalBoundaryError} className={\"border-0\"}>\n                          <h5 className={\"text-primary card-title\"}>\n                           Use differentOption\n                                                    </h5>\n                        </ModalHeader>\n                        <ModalBody>\n                          <Label>Please use Manage Boundaries Option.</Label>\n                          \n                        </ModalBody>\n                        <ModalFooter>\n                          <Button color=\"secondary\" onClick={toggleModalBoundaryError}>\n                        ok\n                                                </Button>\n                        \n                        </ModalFooter>\n                      </Modal>\n                    </Form>\n                  </div>\n\n                </Row>\n\n\n                <Row>\n                  <div className=\"col-12 text-right \">\n                    {/* onSubmit={saveBoard(defaultBoard)} */}\n                    <Form >\n                      <Modal isOpen={modalDelete} fade={false} toggle={toggleModalDelete}>\n                        <ModalHeader toggle={toggleModalDelete} className={\"border-0\"}>\n                          <h5 className={\"text-primary card-title\"}>\n                            Confirm Delete\n                                                    </h5>\n                        </ModalHeader>\n                        <ModalBody>\n                          <Label>Are you sure you want to dete Building?</Label>\n                          {/* <Input type=\"text\" name=\"title\" value={newName} onChange={newNameChange} /> */}\n                        </ModalBody>\n                        <ModalFooter>\n                          <Button color=\"secondary\" onClick={toggleModalDelete}>\n                            Cancel\n                                                </Button>\n                          <Button color=\"primary\" onClick={deleteBuildingConfirm}>\n                            Delete\n                                                </Button>\n                        </ModalFooter>\n                      </Modal>\n                    </Form>\n                  </div>\n\n                </Row>\n\n\n                <Row>\n                  <Col md={12} className=\"track\">\n                    {\n                      markers.map((item, index) => (\n                        <Card className=\"bg-transparent shadow-none mr-3 w-25 iq-card\" >\n                          <div className={\"iq-card-header d-flex justify-content-between bg-primary\"}>\n                            <div className=\"iq-header-title\">\n                              <h3 className=\"text-white\"><Link to={\"/ViewBuilding/\" + item.id} onMouseEnter={flyToMarker} value={index} className=\"nav-link font-weight-bold \">{item.name} </Link>\n                              </h3>\n                            </div>\n                            <div className=\"iq-card-header-toolbar d-flex align-items-center\">\n\n                              <i className=\"ri-delete-bin-fill mr-0 font-size-28\" role=\"button\" tabIndex=\"0\" onClick={deleteBuilding} value={item.id}>\n\n                              </i>\n\n                            </div>\n                          </div>\n                          <CardBody className=\"card-body iq-card-body pro-bg-card\">\n                            <div>\n\n\n                              <Card className=\"iq-card\">\n                                <div className=\"iq-card-header d-flex justify-content-between pro-task-bg-card\">\n                                  <div className=\"iq-header-title\">\n                                    {/* <Link to={item.link} onMouseEnter={flyToMarker} value={index} className=\"nav-link font-weight-bold \">{item.description} </Link> */}\n                                    <h3 className=\"text-blue\"><Link to={\"/ViewBuilding/\" + item.id} onMouseEnter={flyToMarker} value={index} className=\"nav-link font-weight-bold font-black\">{item.street}   {item.Apartment} {item.doornum} {item.region} {item.country} </Link>\n                                    </h3>\n\n\n                                  </div>\n                                  <div className=\"iq-card-header-toolbar d-flex align-items-center\">\n\n\n                                  </div>\n                                </div>\n                                <CardBody className=\"card-body iq-card-body pro-task-bg-card\">\n                                  <Link to={\"/EditBuilding/\" + item.id}>\n                                    <a className=\"badge iq-bg-primary mr-2 p-2 font-size-18\">Edit</a>\n                                  </Link>\n\n                                  <Link >\n                                    <a className=\"badge iq-bg-primary mr-2 p-2 font-size-18\" type=\"button\" value={item.id}\n                                      onClick={handleManageBoundaries}>Manage Boundary</a>\n                                  </Link>\n                                  {/* <Button\n                                    className=\"badge iq-bg-primary mr-2 p-2 font-size-18\"\n                                    onClick={handleManageBoundaries} value={item.id}>\n\n                                    Manage Boundary\n                               </Button> */}\n\n                                  {/* <p className=\"font-size-12\">{item.description}</p> */}\n                                  {/* <div className=\"d-flex justify-content-between\">\n                                <div>\n\n                                  <i className=\"ri-ball-pen-line font-size-18\" role=\"button\" tabIndex=\"0\"></i>\n                                  <i className=\"ri-attachment-line font-size-18 ml-2\"></i>\n                                  <i className=\"ri-eye-line font-size-18 ml-2\"></i>\n                                  <span>\n                                    <small>54</small>\n                                  </span>\n                                  <i className=\"ri-chat-4-line font-size-18 ml-2\"></i>\n                                  <span>\n                                    <small>36</small>\n                                  </span>\n                                  <i className=\"ri-close-circle-line font-size-18 ml-2\"></i>\n                                </div>\n                              </div> */}\n                                  <div className=\"mt-2 progress\" style={{ \"height\": \"4px\" }}>\n                                    <div role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=\"40\" className=\"progress-bar iq-border-radius-10 bg-success\" style={{ \"width\": \"40%\" }}>\n                                      <span> </span>\n                                    </div>\n                                    <div role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=\"80\" className=\"progress-bar iq-border-radius-10 bg-warning\" style={{ \"width\": \"80%\" }}>\n                                      <span> </span>\n                                    </div>\n                                    <div role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=\"50\" className=\"progress-bar iq-border-radius-10 bg-danger\" style={{ \"width\": \"50%\" }}>\n                                      <span> </span>\n                                    </div>\n                                  </div>\n                                </CardBody>\n                              </Card>\n\n\n\n                            </div>\n                            {/* <Button color=\"primary\" className=\"btn btn-lg btn-block\"  onClick={toggleModal1}>\n                                                        Add Item\n                                                    </Button> */}\n                          </CardBody>\n\n                        </Card>\n                      ))\n                    }\n\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n            <Form onSubmit={saveTask(defaultTask)}>\n              <Modal isOpen={modal1} fade={false} toggle={toggleModal1}>\n                <ModalHeader toggle={toggleModal1} className={\"border-0\"}>\n                  <h5 className={\"text-primary card-title\"}>\n                    New Task\n                                    </h5>\n                </ModalHeader>\n                <ModalBody>\n                  <FormGroup>\n                    <Label for=\"exampleEmail\">Name</Label>\n                    <Input type=\"text\" name=\"email\" id=\"exampleEmail\" placeholder=\"with a placeholder\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"examplePassword\">Description</Label>\n                    <Input type=\"text\" name=\"password\" id=\"examplePassword\" placeholder=\"password placeholder\" />\n                  </FormGroup>\n                  <FormGroup check>\n                    <Label check>\n                      <Input type=\"radio\" name=\"radio1\" />{' '}\n                                                Go\n                                        </Label>\n                  </FormGroup>\n                  <FormGroup check>\n                    <Label check>\n                      <Input type=\"radio\" name=\"radio1\" />{' '}\n                                           High\n                                        </Label>\n                  </FormGroup>\n                  <FormGroup check>\n                    <Label check>\n                      <Input type=\"radio\" name=\"radio1\" />{' '}\n                                           Critical\n                                        </Label>\n                  </FormGroup>\n                </ModalBody>\n                <ModalFooter>\n                  <Button color=\"secondary\" onClick={toggleModal1}>\n                    Close\n                                </Button>\n                  <Button color=\"primary\" >\n                    Save Changes\n                                </Button>\n                </ModalFooter>\n              </Modal>\n            </Form>\n      </Container>\n          {/* edit end */}\n          {/* <Container fluid={true}>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"iq-card \">\n              <div className=\"row d-flex align-items-center mb-2\">\n                <div className=\"col-md-9\"><div className=\"d-flex align-items-center\">\n                  <h4 className=\"mb-0 p-3 ml-2\">Buildings</h4>\n\n                </div>\n                </div>\n                <div className=\"text-right col-md-3\">\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container> */}\n\n\n\n          {/* <Container fluid={true}>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"iq-card \">\n              <div className=\"row d-flex align-items-center mb-2\">\n                <div className=\"col-md-9\"><div className=\"d-flex align-items-center\">\n                  <Card style={{ margin: \".1%\" }}>\n                    <CardBody>\n\n                      <Table className=\"table\" items={markers}>\n\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Address</th>\n                            <th scope=\"col\">Delete</th>\n                            <th scope=\"col\">Edit</th>\n\n                          </tr>\n                        </thead>\n                        <tbody>\n\n                          {\n\n                            markers.map((item, index) => (\n\n                              <tr key={index}>\n                                <th>{item.id} </th>\n                                <td> <Link to={item.link} onMouseEnter={flyToMarker} value={index} className=\"nav-link font-weight-bold \">{item.description} </Link></td>\n                                <td >{item.street}   {item.Apartment} {item.doornum} {item.region} {item.country}</td>\n                                <td><button type=\"button\"\n                                  onClick={() => handleDelete(item.id, item.description)}\n                                > Delete </button></td>\n\n                                <td><Link to=\"/EditBuilding/1\" className=\"nav-link font-weight-bold \">edit</Link></td>\n\n\n                                {<Link onClick={(e) => handleDelete(item.refnum, item.description, e)} className=\"nav-link font-weight-bold \">Delete</Link> }\n\n                              </tr>\n                            ))\n                          }\n\n\n\n                        </tbody>\n                      </Table>\n\n                    </CardBody>\n                  </Card>\n\n                </div>\n                </div>\n                <div className=\"text-right col-md-3\">\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container> */}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    </div>\n  );\n}\n\n\n\n\nexport default Map1\n\n","/Users/likhitha/Documents/cms/client/src/components/dashboard/FloorMap.js",["396","397","398","399","400","401","402","403","404","405"],"/* eslint-disable jsx-a11y/anchor-is-valid */\n //import React from 'react';\n //import { LayersControl as BaseLayersControl } from 'react-leaflet';\n import { CardBody,Card,ButtonGroup, Button,ButtonToolbar, Label } from 'reactstrap';\n import React, { useEffect, useState } from \"react\";\n \n import {Tooltip, Polygon, Popup, Rectangle, Marker, TileLayer , Map,LayersControl, LayerGroup} from 'react-leaflet';\nimport service from './services';\nimport Map1 from './Map1';\nimport { Link } from \"react-router-dom\";\nimport SlickSliderStyle1 from \"./SlickSliderStyle1\";\n\n\nconst FloorMap  = () => {\n  \n    \n\n    const [markers, setMarkers] = useState([])\n   \n\n      useEffect(()=>{\n        service\n        .getAll()\n        .then(latlng =>{\n          console.log(\"returning\", latlng)\n          setMarkers(latlng)\n        })\n      },[])\n\n\n\n     const refno=window.location.pathname.replace('/FloorMap/','');\n      \n     const handleClick = (e) => {\n       console.log(e.target.value)\n      debugger;\n    }\n\n  return (\n\n    <Card >\n    <CardBody>\n\n<div>\n\n\n{/* <div> <Link to=\"/Map1\" className=\"btn btn-primary\"><p class=\"ri-home-4-line\"> Home </p></Link></div> */}\n\n\n\n\n\n                        {markers.filter(item => item.id===refno).map(filteredName => (\n                            <div>\n                              \n                             {/* <h1 className=\"display-7\">#{filteredName.id}-{filteredName.description}</h1> */}\n                             <h1 className=\"display-9\">{filteredName.street}   {filteredName.Apartment} {filteredName.doornum} {filteredName.region} {filteredName.country}</h1>\n                             {/* <ButtonToolbar className=\"mt-3\">\n                             <ButtonGroup className=\"mr-2\">\n                                 {filteredName.floors.map((item2, index) => (\n                                       \n                                      <Button color=\"secondary\" data-key={index}\n                                      \n                                      onClick={handleClick}> {item2.description}</Button>\n\n  \n                                   ))}\n                                   </ButtonGroup></ButtonToolbar> */}\n                             </div>\n\n\n\n\n                        ))}\n                        \n                        \n                        </div>\n                        <div>\n                        \n                        {markers.filter(item => item.id===refno).map(filteredName => (\n                            <div>\n\n                         <Map\n                                    style={ { height: \"500px\", width: \"100%\"}}\n                                    \n                                    center={[filteredName.latitude, filteredName.longitude]} zoom={16} maxZoom={17}\n                                    \n                                >\n                                  \n\n                                        {/* <TileLayer\n                                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                    /> */}\n\n<LayersControl position=\"topright\">\n<LayersControl.BaseLayer checked name={filteredName.name}>\n  \n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {/* {filteredName.floors.map((floor, index) => (\n        <LayersControl.Overlay checked name={floor.description}>\n        <LayerGroup>\n          <Polygon positions={floor.boundaries} color={floor.color}\n                             />\n        </LayerGroup>\n        </LayersControl.Overlay>\n      \n      ))} */}\n       \n         {/* <Polygon positions={floor.boundaries} color={floor.color}\n                             />  */}\n      </LayersControl.BaseLayer>\n      <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {filteredName.floors.map((floor, index) => (\n        <LayersControl.BaseLayer checked name={floor.description}>\n        <LayerGroup>\n          <Polygon positions={floor.boundaries} color={floor.color}\n                             />\n{\n  floor.blocks.map((block, ind) => (\n    <Polygon positions={block.bounds}>\n          {/* <Tooltip sticky>        {block.text}</Tooltip> */}\n      {/* <Popup direction=\"center\" >\n        {block.text}\n      </Popup> */\n      \n      <Marker position={block.marker}>\n              <Popup>\n                    <span>{block.text}</span>\n                    {/* <div className=\"iq-card-body\" id={'post-slider'}>\n                              <SlickSliderStyle1 slidesToShow={2}>\n                              <li className=\"d-flex align-items-center\">\n                                {block.images.map((img, idx) => (\n                                  <div>\n                                  <div className=\"post-image\">\n                                  <a href=\"#\">\n                                      <img src={img} alt=\"post-image\" className=\"img-fluid rounded\" />\n                                  </a>\n                                  </div>\n                                  <div className=\"post-content pl-3\">\n\n                                  <div className=\"text-center d-flex align-items-center justify-content-between\">\n                                      \n                                  </div>\n                                  </div>\n                                  </div>\n                                ))}\n                                   \n                                 </li>\n                                 </SlickSliderStyle1>\n                                 </div> */}\n              </Popup>\n              \n      </Marker>\n\n      }\n    </Polygon> \n                             \n                             \n\n  ))\n}\n\n        </LayerGroup>\n        </LayersControl.BaseLayer>\n      \n      ))}\n\n\n     \n      \n      \n      \n      \n{/* {filteredName.floors.map((floor, index) => (\n      \n))} */}\n      \n      </LayersControl>\n\n                                    {/* {filteredName.floors.map((floor, index) => (\n                            //           <Polygon positions={floor.boundaries} color={floor.color}\n                            //  /> \n                            <LayersControl.Overlay name={floor.description} id={floor.floorno}>\n                            <LayerGroup>\n                            <Polygon positions={floor.boundaries} color={floor.color}\n                              /> \n                            </LayerGroup>\n                          </LayersControl.Overlay>\n\n                                    ))} */}\n\n\n\n                             </Map> \n                             </div>\n                        ))\n                        }\n                        </div>\n    </CardBody>\n    </Card>  \n\n  );\n}\n\nexport default FloorMap;\n","/Users/likhitha/Documents/cms/client/src/components/dashboard/ModalTemplate.js",["406","407","408","409","410","411","412"],"import React from 'react';\nimport { Row, Col, Card, div, CardTitle, CardBody, UncontrolledCollapse, Button, ModalHeader, Modal, ModalBody, ModalFooter } from 'reactstrap';\n\n\n\nclass ModalTemplate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modelAddFloorModal: false\n            // model2: false,\n            // model3: false,\n            // model4: false,\n            // model5: false,\n            // model6: false,\n            // model7: false,\n            // model8: false,\n            // model9: false,\n        };\n    }\n\n    // componentDidMount() {\n    //     setTimeout(function () {\n    //         index();\n    //     }, 800);\n    // }\n\n    toggle = (model_id) => {\n        this.setState({\n            [model_id]: !this.state[model_id]\n        });\n    };\n\n    render() {\n\n        return (\n            <>\n                \n\n\n                                {/*Small modal*/}\n                                <Button color=\"primary\" onClick={() => this.toggle(\"modelAddFloorModal\")}> AddFloor </Button>{' '}\n\n                                {/*Modal*/}\n                                <Modal isOpen={this.state.modelAddFloorModal} toggle={() => this.toggle(\"modelAddFloorModal\")} className=\"modal-sm\">\n                                    <ModalHeader toggle={() => this.toggle(\"modelAddFloorModal\")}>Modal title</ModalHeader>\n                                    <ModalBody>\n                                        <p>Modal body text goes here.</p>\n                                    </ModalBody>\n                                    <ModalFooter>\n                                        <Button color=\"primary\" onClick={() => this.toggle(\"modelAddFloorModal\")}>Save changes</Button>{' '}\n                                        <Button color=\"secondary\" onClick={() => this.toggle(\"modelAddFloorModal\")}>Cancel</Button>\n                                    </ModalFooter>\n                                </Modal>\n                            \n            </>\n        );\n    }\n}\n\nexport default ModalTemplate;\n","/Users/likhitha/Documents/cms/client/src/components/private-route/PrivateRoute.js",[],"/Users/likhitha/Documents/cms/client/src/components/dashboard/ViewBuilding.js",["413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478"],"import React, { useRef, useEffect, useState, useMap } from \"react\";\nimport service from './services';\nimport { EditControl } from \"react-leaflet-draw\";\nimport LayersControl2, { ControlledLayerItem } from \"./LayerControl2\";\n// import \"./assets/leaflet.css\"\n// import \"./assets/leaflet.draw.css\"\nimport {\n  Map, TileLayer, FeatureGroup, useLeaflet, LayersControl, Marker, Polygon,\n  Popup, LayerGroup, Circle, GeoJSON\n} from \"react-leaflet\";\nimport Control from 'react-leaflet-control';\n\nimport L from \"leaflet\";\n\nimport { CardBody, Card,Breadcrumb, BreadcrumbItem, ButtonGroup, ButtonToolbar, Form, FormGroup, Label, Input, ModalHeader, Modal, ModalBody, ModalFooter } from 'reactstrap';\n// Material components\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport { set } from \"mongoose\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ReactTooltip from \"react-tooltip\";\n\n\n\nconst useStyles = makeStyles(theme => ({\n  map: ({\n    height: `calc(90vh - 90px)`,\n    width: '60%',\n    zIndex: 0\n  }),\n  buttonWrapper: {\n    zIndex: 1,\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    marginLeft: \"30%\",\n    marginBottom: \"8%\",\n    transform: \"translateX(-50%)\",\n  },\n  headerWrapper: {\n    zIndex: 1,\n    marginLeft: theme.spacing(3),\n    marginTop: theme.spacing(1),\n  }\n}));\n\n\nfunction EditableLayer(props) {\n  const leaflet = useLeaflet();\n  const editLayerRef = React.useRef();\n  let drawControlRef = React.useRef();\n  let { map } = leaflet;\n\n  useEffect(() => {\n\n    if (!props.showDrawControl) {\n      map.removeControl(drawControlRef.current);\n    } else {\n      map.addControl(drawControlRef.current);\n    }\n\n    editLayerRef.current.leafletElement.clearLayers();\n\n    editLayerRef.current.leafletElement.addLayer(props.layer);\n    props.layer.on(\"click\", function (e) {\n      props.onLayerClicked(e, drawControlRef.current);\n    });\n  }, [props, map]);\n\n  function onMounted(ctl) {\n    drawControlRef.current = ctl;\n  }\n\n  return (\n    <div>\n      <FeatureGroup ref={editLayerRef}>\n        <EditControl\n          position=\"topright\"\n          onMounted={onMounted}\n          {...props}\n        />\n      </FeatureGroup>\n    </div>\n  );\n}\n\nfunction EditableGroup(props) {\n  const [selectedLayerIndex, setSelectedLayerIndex] = useState(0);\n\n  function handleLayerClick(e, drawControl) {\n    setSelectedLayerIndex(e.target.feature.properties.editLayerId);\n  }\n\n  let dataLayer = new L.GeoJSON(props.data);\n  let layers = [];\n  let i = 0;\n  dataLayer.eachLayer((layer) => {\n    layer.feature.properties.editLayerId = i;\n    if(layer.feature.properties.name!==undefined){\n      layer.bindTooltip(layer.feature.properties.name, {permanent: true, opacity: 0.7, direction:\"center\"}).openTooltip();\n    }\n    layers.push(layer);\n    i++;\n  });\n\n  return (\n    <div>\n      {layers.map((layer, i) => {\n        return (\n          <EditableLayer\n            key={i}\n            layer={layer}\n\n            onLayerClicked={handleLayerClick}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nconst ViewBuilding = (props) => {\n  const editRef = useRef();\n  const [drawing, setDrawing] = useState(false);\n  const [markers, setMarkers] = useState([])\n  const [details, setDetails] = useState('')\n  const [boundary, setBoundary] = useState([]);\n  const [newPosition, setNewPosition] = useState([])\n\n  const [mapLayers, setMapLayers] = useState('');\n  const [customLayer, setCustomLayer] = useState([]);\n\n  const [activeFloorPolygons, setActiveFloorPolygons] = useState([]);\n  const [activeFloorBoundary, setActiveFloorBoundary] = useState([]);\n  const [activeFloor, setActiveFloor] = useState('');\n  const [newDesc, setNewDesc] = useState('');\n  const [isEdit, setIsEdit] = useState('');\n  const [boundaryid, setBoundaryid] = useState(0);\n  const [selectedFloorGeoData, setselectedFloorGeoData] = useState('');\n\n\n  //const purpleOptions = { color: 'purple' }\n  const mapRef = useRef();\n  const fgRef = useRef();\n  const refno = window.location.pathname.replace('/ViewBuilding/', '');\n  const leaflet = useLeaflet();\n  const [buildingCenter, setBuildingCenter] = useState({lat:null,lng:null})\n\n\n\n\n  const polygon = [\n\n  ]\n  const center = [51.505, -0.09]\n  const rectangle = [\n    [51.49, -0.08],\n    [51.5, -0.06],\n  ]\n  const [selectedLayerIndex, setSelectedLayerIndex] = useState(0);\n\n\n\n\n\n  const updateFloor = {\n\n    floorno: markers.length + 1,\n    description: \"newDesc\",\n    color: '#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6),\n    blocks: [],\n    boundaries: []\n  }\n\n  //const [selectedLayerIndex, setSelectedLayerIndex] = useState(0);\n  const [addFloor, setAddFloor] = useState(false);\n\n  const _onFeatureGroupReady = (ref) => {\n    if (ref !== undefined && ref !== null) {\n      let leafletFG = ref.leafletElement;\n      if (customLayer.length > 0) {\n        customLayer.eachLayer(layer => leafletFG.addLayer(layer));\n      }\n    }\n  }\n  const handleDrawPolygonClick = (e) => {\n    const activeFloorLcl = activeFloor;\n    const polygonType = e.target.value;\n    debugger;\n    switch (polygonType) {\n      case \"BO\":\n\n        break;\n\n      case \"BL\":\n\n        break;\n\n      default:\n        break;\n    }\n    if (activeFloorLcl !== undefined && activeFloorLcl !== null) {\n      if (activeFloorLcl.boundaries.length > 3) {\n        const { layerType, layer } = e;\n        if (layerType === \"polygon\") {\n          const { _leaflet_id } = layer;\n          setMapLayers((layers) => [\n            ...layers,\n            { id: _leaflet_id, latlngs: layer.getLatLngs()[0] },\n\n            // [ id: _leaflet_id, latlng:layer.getLatLngs()[0] ]  ,\n          ]);\n        }\n        //Edit this method to perform other actions\n\n        if (!drawing) {\n          editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.enable()\n        } else {\n          editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.completeShape()\n          editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.disable()\n        }\n\n        setDrawing(!drawing)\n\n      }\n\n    }\n\n\n\n  }\n  //let dataLayer = new L.GeoJSON(props.data);\n\n\n\n  const onShapeDrawn = (e) => {\n    debugger;\n    setDrawing(false)\n    const { layerType, layer } = e;\n    if (layerType === \"polygon\") {\n      const { _leaflet_id } = layer;\n\n    }\n    debugger;\n\n    const mar = markers;\n\n    for (var k = 0; k < mar.length; k++) {\n\n      let boundary_id = boundaryid;\n\n      boundary_id = layer._leaflet_id;\n\n\n      setBoundaryid(boundary_id);\n      console.log(boundaryid);\n\n\n      debugger;\n    }\n\n\n\n\n\n\n\n    // e.layer.on('click', () => {\n    //     debugger;\n    //     setDrawing(layer);\n    //     //setSelectedLayerIndex(e.target.boundaryid);\n    //     console.log(selectedLayerIndex);\n    //     debugger;\n    //   editRef.current.leafletElement._toolbars.edit._modes.edit.handler.enable()\n    // })\n    e.layer.on('contextmenu', () => {\n      //do some contextmenu action here\n    })\n    e.layer.bindTooltip(\"Text\",\n      {\n        className: 'leaflet-draw-tooltip:before leaflet-draw-tooltip leaflet-draw-tooltip-visible',\n        sticky: true,\n        direction: 'right'\n      }\n    );\n  }\n  function handleLayerClick(e, drawControl) {\n\n    debugger;\n    const { layerType, layer } = e;\n    if (layerType === \"polygon\") {\n      const { _leaflet_id } = layer;\n\n    }\n\n    let drawingLcl = drawing;\n    drawingLcl = layer;\n    setDrawing(drawingLcl);\n    //   setSelectedLayerIndex(e.target.boundaryid);\n    //     console.log(selectedLayerIndex);\n\n\n\n\n\n    debugger;\n    //editRef.current.leafletElement._toolbars.edit._modes.edit.handler.enable()\n\n  }\n\n  //   e.layer.on('click', () => {\n  //     debugger;\n  //     setSelectedLayerIndex(e.target.boundaryid);\n  //     console.log(selectedLayerIndex);\n  //     debugger;\n  //   editRef.current.leafletElement._toolbars.edit._modes.edit.handler.enable()\n  // })\n\n  function onEditPath() {\n    debugger;\n  }\n  function onCreate() {\n    debugger;\n  }\n\n  function onDeleted() {\n    debugger;\n  }\n  function reverseCoordinate(coor) {\n    let retCoor = [];\n    if (coor !== undefined && coor !== null) {\n      if (coor.length > 0) {\n        for (let coorIdx = 0; coorIdx < coor.length; coorIdx++) {\n          const bound = coor[coorIdx];\n          let row = [];\n          if (bound.length === 2) {\n            row.push(bound[1]);\n            row.push(bound[0]);\n            retCoor.push(row);\n          }\n        }\n\n      }\n    }\n    return retCoor;\n  }\n  function block2Layer(iBlock, floorIndex, floorColor) {\n\n\n    return {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"id\": iBlock.blockId,\n        \"ground\": floorIndex,\n\n      },\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"color\": floorColor,\n        \"coordinates\": [reverseCoordinate(iBlock.bounds)]\n      }\n    }\n\n\n\n  }\n\n  function onFloorSelect(e, data) {\n    const index = e.target.value;\n    let selectedFloorPolygonLayers = [];\n    let activeFloorSel = markers[index];\n    const floorColor = '#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6);\n\n    for (let blockIdx = 0; blockIdx < activeFloorSel.blocks.length; blockIdx++) {\n      const blockPolygon = activeFloorSel.blocks[blockIdx];\n      const geoJsonObj = block2Layer(blockPolygon, index, floorColor);\n\n\n      selectedFloorPolygonLayers.push(geoJsonObj);\n      if(blockPolygon.centre!==undefined){\n        \n        // label = String(feature.properties.name) \n        let pointLayer = { \"type\": \"Feature\", \"properties\": { \"name\": blockPolygon.text  }, \n        \"geometry\": { \"type\": \"Point\", \n        \"coordinates\": [blockPolygon.centre[0].lng ,blockPolygon.centre[0].lat  ] } ,\n        \n        \n      };\n     \n        selectedFloorPolygonLayers.push(pointLayer)\n        \n        \n      }\n      \n\n    }\n    debugger;\n    const featureCollection = {\n      \"type\": \"FeatureCollection\",\n      \"name\": activeFloorSel.description,\n      \"crs\": {\n        \"type\": \"name\",\n        \"properties\": {\n          \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\"\n        }\n      },\n      \"features\": selectedFloorPolygonLayers\n    };\n    // const floorLayers = new L.GeoJSON(featureCollection);\n\n    // setActiveFloorPolygons(floorLayers.getLayers());\n    setselectedFloorGeoData(featureCollection);\n    setActiveFloorBoundary(activeFloorSel.boundaries);\n    setActiveFloor(activeFloorSel);\n\n  }\n\n\n\n  const addressCardStyle = {\n    backgroundImage: `url(${require('./33.png')})`,\n\n    backgroundSize: 'cover',\n\n    height: \"423px\",\n\n  }\n\n  let floor = {};\n  useEffect(() => {\n\n    var refTemp = refno.replace(\"/EditBuilding/\", \"\");\n    service\n      .getBuilding(refTemp)\n      .then(selBuilding => {\n        console.log(\"returning\", selBuilding)\n\n        debugger;\n        setMarkers(selBuilding[0].floors);\n        const emptyFloor = {\n          \"floorno\": \"1\",\n          \"description\": \"\",\n          \"color\": \"#f18d00\",\n          \"blocks\": [],\n          \"boundaries\": []\n        };\n        if (selBuilding[0].floors.length > 0) {\n          setActiveFloor(selBuilding[0].floors[0]);\n          setActiveFloorBoundary(selBuilding[0].floors[0].boundaries);\n          setActiveFloorPolygons(selBuilding[0].floors[0].blocks);\n\n        } else {\n\n          setActiveFloor(emptyFloor);\n          setActiveFloorBoundary(emptyFloor.boundaries);\n          setActiveFloorPolygons(emptyFloor.blocks);\n\n\n        }\n\n        //mapRef.current.leafletElement.flyTo([selBuilding[0].latitude, selBuilding[0].longitude], 16)\n        setDetails(selBuilding[0]);\n        // setBoundary(selBuilding[0].boundary.geometry.coordinates[0]);\n        const buildingLatLng = {\n          lat: selBuilding[0].latitude,\n          lng: selBuilding[0].longitude,\n        }\n        setBuildingCenter(buildingLatLng)\n        let ml = mapLayers;\n\n\n\n\n      })\n\n  }, [])\n\n  function toggle() {\n    setAddFloor(!addFloor);\n  }\n\n  const moveActiveFloor = () => {\n    const markersLcl = markers;\n    debugger;\n    if (activeFloor !== undefined && activeFloor !== null) {\n      for (let i = 0; i < markersLcl.length; i++) {\n\n        if (activeFloor.floorno === markersLcl[i].floorno) {\n          markersLcl[i].description = activeFloor.description;\n          markersLcl[i].blocks = activeFloor.blocks;\n          markersLcl[i].boundaries = activeFloor.boundaries;\n\n        }\n      }\n      setMarkers(markersLcl);\n    }\n\n  }\n  const _onCreate = (e) => {\n    console.log(e);\n\n    const { layerType, layer } = e;\n    if (layerType === \"polygon\") {\n      const { _leaflet_id } = layer;\n\n      setMapLayers((layers) => [\n        ...layers,\n        { id: _leaflet_id, latlngs: layer.getLatLngs()[0] },\n      ]);\n    }\n  };\n\n  function Boundary() {\n    const detailLcl = details;\n    if (details !== null && details !== undefined && details !== \"\") {\n      if (details.boundaries !== null && details.boundaries !== undefined\n        && details.boundaries !== \"\") {\n        if (details.boundaries.length > 0) {\n            return(<Polygon positions={details.boundaries}></Polygon>);\n        } else {\n          return (<div></div>)\n        }\n      } else {\n        return (<div></div>)\n      }\n\n    } else {\n      return (<div></div>)\n    }\n\n\n\n  }\n\n  const _onEdited = (e) => {\n    debugger;\n    // console.log(e);\n    // const {\n    //   layers: { _layers },\n    // } = e;\n\n    // Object.values(_layers).map(({ _leaflet_id, editing }) => {\n    //   setMapLayers((layers) =>\n    //     layers.map((l) =>\n    //       l.id === _leaflet_id\n    //         ? { ...l, latlngs: { ...editing.latlngs[0] } }\n    //         : l\n    //     )\n    //   );\n    // });\n  };\n\n  const _onDeleted = (e) => {\n    console.log(e);\n    const {\n      layers: { _layers },\n    } = e;\n\n    Object.values(_layers).map(({ _leaflet_id }) => {\n      setMapLayers((layers) => layers.filter((l) => l.id !== _leaflet_id));\n    });\n  };\n\n  const deleteActiveFloor = () => {\n    debugger;\n    const activeFloorLocal = activeFloor;\n    const markersL = markers;\n    const markersAfterDeletion = [];\n    for (let j = 0; j < markersL.length; j++) {\n      const marker = markersL[j];\n      if (marker.floorno !== activeFloorLocal.floorno) {\n        markersAfterDeletion.push(marker);\n      }\n\n    }\n    setMarkers(markersAfterDeletion);\n    setActiveFloorPolygons(markersAfterDeletion[0].blocks);\n    setActiveFloorBoundary(markersAfterDeletion[0].boundaries);\n    setActiveFloor(markersAfterDeletion[0]);\n\n  }\n\n\n  const handleAddFloor = () => {\n    debugger;\n    const newFloor = {\n      \"floorno\": markers.length + 1,\n      \"description\": newDesc,\n      \"color\": \"#f18d00\",\n      \"blocks\": [],\n      \"boundaries\": []\n    }\n    setActiveFloor(newFloor);\n    setActiveFloorBoundary(newFloor.boundaries);\n    setActiveFloorPolygons(newFloor.blocks);\n    const markersLocal = markers;\n    markersLocal.push(newFloor);\n    setMarkers(markersLocal);\n\n    setNewDesc(\"\");\n  }\n\n\n  const changeHandlerDesc = (event) => setNewDesc(event.target.value);\n  const updateIsEdit = (e, value) => setIsEdit(value);\n\n  const handleSaveFloor = (e) => {\n    e.preventDefault()\n    debugger;\n\n    service\n      .updateBuilding(markers[0].id, markers[0])\n\n  }\n\n  const handleEditPolygonClick = (e) => {\n    const drawingLocal = drawing;\n    debugger;\n\n  }\n\n\n\n  return (\n\n    <div>\n      \n     \n        <div class=\"row\">\n          <Breadcrumb class=\"mb-4\">\n            <BreadcrumbItem><a href=\"/map1\"><i\n              className=\"ri-home-4-line mr-1 float-left\" />Home</a></BreadcrumbItem>\n            <BreadcrumbItem active>{details.name}</BreadcrumbItem>\n          </Breadcrumb>\n\n        </div>\n\n        <div></div>\n        <Card className=\"iq-card\">\n          <CardBody className=\"iq-card-body\">\n         <div className=\"row\" style={{ margin: \".6%\" }}>\n         <div className=\"col-lg-4\">\n          <div className=\"iq-card iq-card-block iq-card-stretch iq-card-height bg-transparent\">\n            <div className=\"iq-card-body rounded p-0\" style={addressCardStyle} >\n              <div className=\"iq-caption\">\n                <h1>{details.name}</h1>\n                <h3>{details.description}</h3>\n                <h3>{details.Apartment} {markers.street}</h3>\n                <h3>{details.region} {markers.pincode}</h3>\n                <h3>{details.country}</h3>\n              </div>\n            </div>\n          </div>\n        </div>\n\n          {/*<div className=\"col-lg-4\">\n            <div className=\"iq-card iq-card-block iq-card-stretch iq-card-height bg-transparent\">\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                  readOnly=\"\" defaultValue={details.id} disabled />\n              </FormGroup>\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Building Name</Label>\n                <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                  readOnly=\"\" defaultValue={details.description} />\n              </FormGroup>\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Street</Label>\n                <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                  readOnly=\"\" defaultValue={details.street} />\n              </FormGroup>\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Apartment</Label>\n                <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                  readOnly=\"\" defaultValue={details.Apartment} />\n              </FormGroup>\n\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Doornum</Label>\n                <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                  readOnly=\"\" defaultValue={details.doornum} />\n              </FormGroup>\n\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Region</Label>\n                <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                  readOnly=\"\" defaultValue={details.region} />\n              </FormGroup>\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Country</Label>\n                <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                  readOnly=\"\" defaultValue={details.country} />\n\n              </FormGroup>\n\n            </div> */}\n          {/* </div> */}\n\n\n          <div className=\"col-lg-8\">\n            <div className=\"iq-card overflow-hidden\" >\n              <h6 className=\"display-4\" >{activeFloor.description}</h6>\n\n              <div id=\"home-chart-02\">\n              {/* {details.map((building) => ( */}\n                {buildingCenter.lat && buildingCenter.lng && <Map center={buildingCenter} zoom={16} ref={mapRef} >\n                  {/* <Control position=\"topright\">\n                    <button class=\"primary\" onClick={handleDrawPolygonClick} value=\"BO\"\n                    style={{ \"font-size\": \"1.5rem\", \"margin-left\": \".05rem\" ,\"margin-right\": \".05rem\" }}>\n                    Add Floor\n                        </button>\n                    <Button className=\"btn btn-primary\"\n                      style={{ \"font-size\": \"1.0rem\", \"margin-left\": \".05rem\", \"margin-right\": \".05rem\" }} color=\"primary\" onClick={handleSaveFloor}> SaveBuilding </Button>\n\n\n                    <Button className=\"btn btn-primary\" style={{ \"font-size\": \"1.0rem\", \"margin-left\": \".05rem\", \"margin-right\": \".05rem\" }} color=\"primary\" onClick={() => toggle(\"addFloor\")}> AddFloor </Button>{' '}\n\n\n                    <Modal isOpen={addFloor} toggle={() => toggle(\"addFloor\")} className=\"modal-sm\">\n                      <ModalHeader className=\"btn btn-primary\" toggle={() => toggle(\"addFloor\")}>Add Floor</ModalHeader>\n                      <ModalBody>\n\n\n                        <p>Floor: {markers.length + 1}</p>\n\n                        <p>Enter Floor Description</p>\n                        <input type=\"text\" onChange={changeHandlerDesc} value={newDesc}\n                          lur={updateIsEdit} />\n\n                      </ModalBody>\n                      <ModalFooter>\n\n                        <Button color=\"primary\" onClick={() => {\n                          toggle(\"addFloor\");\n                          // handleAddFloor(); \n                          handleAddFloor();\n\n                        }}>OK</Button>{' '}\n                        <Button color=\"secondary\" onClick={() => toggle(\"addFloor\")}>Cancel</Button>\n                      </ModalFooter>\n                    </Modal>\n\n                    <button class=\"btn btn-primary\" onClick={deleteActiveFloor} value=\"BO\"\n                      style={{ \"font-size\": \"1.0rem\", \"margin-left\": \".05rem\", \"margin-right\": \".05rem\" }}>\n                      Delete Floor\n                        </button>\n                    <button class=\"btn btn-primary\" onClick={handleDrawPolygonClick} value=\"BO\"\n                      style={{ \"font-size\": \"1.0rem\", \"margin-left\": \".05rem\", \"margin-right\": \".05rem\" }}>\n                      Manage Boundary\n                        </button>\n\n                    <button class=\"btn btn-primary\" onClick={handleDrawPolygonClick} value=\"BL\"\n                      style={{ \"font-size\": \"1.0rem\", \"margin-left\": \".05rem\" }}>\n                      AddBlock\n                        </button>\n\n                    <button class=\"btn btn-primary\" onClick={handleEditPolygonClick}\n                      style={{ \"font-size\": \"1.0rem\", \"margin-left\": \".05rem\" }}>\n                      EditBlock\n                        </button>\n                  </Control> */}\n                  <LayersControl position=\"topright\">\n                    <LayersControl.BaseLayer\n                      checked={false}\n                      name=\"Esri WorldImagery\"\n                      group=\"BaseLayers\"\n                    >\n                      <TileLayer\n                        url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}.png\"\n                        attribution='&copy; <a href=\"Esri &mdash\">Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community</a> contributors'\n                      />\n                    </LayersControl.BaseLayer >\n                    <LayersControl.BaseLayer\n                      checked={true}\n                      name=\"OpenStreetMap\"\n                      group=\"BaseLayers\"\n                    >\n                      <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                      />\n                    </LayersControl.BaseLayer >\n\n                  </LayersControl>\n\n                  <EditableGroup data={selectedFloorGeoData} />\n\n\n                  {/* <FeatureGroup>\n                  \n                  {activeFloorPolygons.map((polygonObjLayer,polyIdx)=>(\n                      <div>\n                      <EditControl\n                      layer={polygonObjLayer}\n                      position='topleft'\n                      onCreated={onShapeDrawn}\n                      onEdited = {_onEdited}\n                      onDeleted = {_onDeleted}\n                      \n                      \n                      \n                      //here you can specify your shape options and which handler you want to enable\n                      draw={{\n                        rectangle: false,\n                        polygon: true,\n                        circle: false,\n                        polyline: false,\n                        circlemarker: false,\n                        marker: false\n  \n                      }}\n\n                    >\n  \n  \n  \n  \n                    </EditControl>\n\n                    <Polygon positions={polygonObj.bounds} ></Polygon>\n                    </div>\n                    \n                  ))}\n                <Polygon positions={activeFloorBoundary} onClick={handleLayerClick}> </Polygon>\n\n                \n\n                </FeatureGroup> */}\n\n{/* <div className=\"App\">\n      <button data-tip data-for=\"registerTip\">\n        Register\n      </button>\n\n      <ReactTooltip id=\"registerTip\" place=\"top\" effect=\"solid\">\n        Tooltip for the register button\n      </ReactTooltip>\n    </div> */}\n\n                  <Control position=\"topright\" >\n                    <div>\n                      {\n                        markers.map((mLr, didx) => (\n\n\n\n                          <div>\n                            {/* <Tooltip\n                            style={{fontSize:\"20px\"}}\n                         title=   {<h3 style={{ color: \"lightblue\" }}>{mLr.description}</h3>}\n       \n        placement=\"left\"\n      > */}\n\n                            <button variant=\"contained\" class=\"primary\" value={didx} onClick={onFloorSelect} style={{ \"font-size\": \"1.5rem\", \"margin-left\": \".05rem\" }}>\n                              {mLr.description}\n                            </button>\n                            {/* </Tooltip> */}\n                            {/* <ReactTooltip id=\"registerTip\" place=\"top\" effect=\"solid\">\n        {mLr.description}\n      </ReactTooltip> */}\n\n\n                          </div>\n                        ))\n\n                      }\n\n                    </div>\n                  </Control>\n\n\n                  <Boundary></Boundary>\n\n\n\n                </Map>\n}\n              {/* ))} */}\n              </div>\n            </div>\n          </div>\n        </div>\n        </CardBody>\n        </Card>\n\n\n\n\n      </div>\n  )\n}\n\n\nexport default ViewBuilding;","/Users/likhitha/Documents/cms/client/src/components/layout/Navbar.js",["479"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DashBoard from \"../dashboard/Dashboard\";\n//import HomePage from \"../dashboard/HomePage\";\n\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div className=\"navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"centered\">\n           {/* <Link to=\"/Map1\" className=\"btn btn-primary\" class=\"ri-home-4-line\" style={{fontSize: '20px', color: 'white', paddingBottom: '50px'}}> Home </Link> */}\n            <p\n              \n              style={{\n                fontFamily: \"monospace\"\n                \n              }}\n              className=\"col s5 brand-logo center black-text\"\n            >\n              <h1>\n              <b>Welcome to CMSIndoor</b>\n              {/* <div><HomePage /></div> */}\n              <div class = \"logout\">\n   <DashBoard />\n   </div>\n              </h1>\n              \n            </p>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","/Users/likhitha/Documents/cms/client/src/components/dashboard/EditBuilding.js",["480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532"],"import React, { useRef, useEffect, useState, useMap } from \"react\";\nimport service from './services';\nimport { EditControl } from \"react-leaflet-draw\";\nimport LayersControl2, { ControlledLayerItem } from \"./LayerControl2\";\n// import \"./assets/leaflet.css\"\n// import \"./assets/leaflet.draw.css\"\nimport {\n  Map, TileLayer, FeatureGroup, useLeaflet, LayersControl, Marker, Polygon,\n  Popup, LayerGroup, Circle, GeoJSON,CircleMarker\n} from \"react-leaflet\";\nimport Control from 'react-leaflet-control';\n\nimport L, { circleMarker, tooltip } from \"leaflet\";\n\nimport { CardBody, Card, Breadcrumb, BreadcrumbItem, ButtonGroup, ButtonToolbar, Form, FormGroup, Label, Input, ModalHeader, Modal, ModalBody, ModalFooter } from 'reactstrap';\n// Material components\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport { set } from \"mongoose\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {v4 as uuidv4} from 'uuid';\n\nlet addFloorCounter = 0;\n\n\nconst useStyles = makeStyles(theme => ({\n  map: ({\n    height: `calc(90vh - 90px)`,\n    width: '60%',\n    zIndex: 0\n  }),\n  buttonWrapper: {\n    zIndex: 1,\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    marginLeft: \"30%\",\n    marginBottom: \"8%\",\n    transform: \"translateX(-50%)\",\n  },\n  headerWrapper: {\n    zIndex: 1,\n    marginLeft: theme.spacing(3),\n    marginTop: theme.spacing(1),\n  }\n}));\n\nconst modalStyles = {\n  width   :    500,\n  height  :    500\n}\n\n\n\n\nconst EditBuilding = (props) => {\n  const editRef = useRef();\n  const [drawing, setDrawing] = useState(false);\n  const [markers, setMarkers] = useState([])\n  const [details, setDetails] = useState('')\n  const [boundary, setBoundary] = useState([]);\n  const [newPosition, setNewPosition] = useState([])\n\n  const [mapLayers, setMapLayers] = useState('');\n  const [customLayer, setCustomLayer] = useState([]);\n\n  const [activeFloorPolygons, setActiveFloorPolygons] = useState([]);\n  const [activeFloorBoundary, setActiveFloorBoundary] = useState([]);\n  const [activeFloor, setActiveFloor] = useState('');\n  const [newDesc, setNewDesc] = useState('');\n  const [isEdit, setIsEdit] = useState('');\n  const [boundaryid, setBoundaryid] = useState(0);\n  const [selectedFloorGeoData, setselectedFloorGeoData] = useState('');\n  const [blockDescription, setBlockDescription] = useState(false);\n  const [draftBlock, setDraftBlock] = useState('');\n \n  // const [addCounter,setAddCounter] = React.useState(0);\n\n\n  //const purpleOptions = { color: 'purple' }\n  const mapRef = useRef();\n  const fgRef = useRef();\n  const refno = window.location.pathname.replace('/ViewBuilding/', '');\n  const leaflet = useLeaflet();\n  const [blockName, setBlockName] = useState('')\n  const [FloorIdx, setFloorIdx] = useState(0)\n  const [buildingCenter, setBuildingCenter] = useState({lat:null,lng:null})\n\n  let FloorId = uuidv4();\n\n  const polygon = [\n\n  ]\n  const center = [51.505, -0.09]\n  const rectangle = [\n    [51.49, -0.08],\n    [51.5, -0.06],\n  ]\n  const [selectedLayerIndex, setSelectedLayerIndex] = useState(0);\n\n  function Boundary() {\n    const detailLcl = details;\n    if (details !== null && details !== undefined && details !== \"\") {\n      if (details.boundaries !== null && details.boundaries !== undefined\n        && details.boundaries !== \"\") {\n        if (details.boundaries.length > 0) {\n            return(<Polygon positions={details.boundaries}></Polygon>);\n        } else {\n          return (<div></div>)\n        }\n      } else {\n        return (<div></div>)\n      }\n\n    } else {\n      return (<div></div>)\n    }\n\n\n\n  }\n  function EditableLayer(props) {\n    const leaflet = useLeaflet();\n    const editLayerRef = React.useRef();\n    let drawControlRef = React.useRef();\n    let { map } = leaflet;\n\n\n    useEffect(() => {\n\n      if (!props.showDrawControl) {\n        map.removeControl(drawControlRef.current);\n      } else {\n        map.addControl(drawControlRef.current);\n      }\n\n      editLayerRef.current.leafletElement.clearLayers();\n\n      editLayerRef.current.leafletElement.addLayer(props.layer);\n      props.layer.on(\"click\", function (e) {\n        props.onLayerClicked(e, drawControlRef.current);\n      });\n    }, [props, map]);\n\n    function onMounted(ctl) {\n      drawControlRef.current = ctl;\n    }\n\n    function onEditPath(e) {\n\n\n      const layerObj = e.layers._layers;\n\n      const layer = layerObj[Object.keys(layerObj)[0]];\n      const center = [layer._bounds.getCenter()];\n      if (layer !== undefined && layer !== null) {\n        const props = layer.feature.properties;\n        if (props.hasOwnProperty('id') && props.hasOwnProperty('ground')) {\n          const polygonId = props.id;\n          const floorIndex = props.ground;\n          let latlngs = layer.getLatLngs();\n          latlngs = latlngs.length > 0 ? latlngs[0] : latlngs;\n          crupdateLayer2ActiveFloor(latlngs, polygonId, floorIndex,center)\n\n        }\n      }\n\n\n\n    }\n    function onPolygonDeleted(e) {\n      console.log(e);\n\n      const {\n        layers: { _layers },\n      } = e;\n\n      Object.values(_layers).map(({ _leaflet_id }) => {\n        //setMapLayers((layers) => layers.filter((l) => l.id !== _leaflet_id));\n      });\n\n    }\n\n  \n  \n    \n   \n    \n    \n\n  \n    function onPolygonCreated(e) {\n      \n      // toggleBlockDescription();\n      debugger;\n\n      //addFloorCounter++;\n     \n      setDraftBlock(e.layer);\n      toggleBlockDescription();\n\n      // if (addFloorCounter === activeFloor.blocks.length) {\n        \n        debugger;\n      //}\n     \n\n    }\n\n    function onDeleted() {\n\n    }\n    \n\n\n    return (\n      <div>\n        <FeatureGroup ref={editLayerRef}>\n          <EditControl\n            position=\"topright\"\n            onMounted={onMounted}\n            onCreated={onPolygonCreated}\n            onEdited={onEditPath}\n            onDeleted={onPolygonDeleted}\n            draw={{\n              polygon: true,\n              circle: false,\n              polyline: false,\n              marker: false,\n              rectangle: false,\n              circlemarker: false\n            }}\n\n\n            {...props}\n          />\n          {/* <Polygon positions={activeFloorBoundary} onClick={handleLayerClick}> </Polygon> */}\n          <Marker \n                      position={[60.21846434365596, 24.811831922452843]}\n                      \n                    >\n                      {/* <renderPopup item={item}></renderPopup> */}\n\n                     \n\n                    </Marker>\n        </FeatureGroup>\n      </div>\n    );\n  }\n\n  function EditableGroup(props) {\n    const [selectedLayerIndex, setSelectedLayerIndex] = useState(0);\n\n    function handleLayerClick(e, drawControl) {\n      setSelectedLayerIndex(e.target.feature.properties.editLayerId);\n    }\n    debugger;\n    let dataLayer = new L.GeoJSON(props.data);\n    let layers = [];\n    let i = 0;\n    dataLayer.eachLayer((layer) => {\n      layer.feature.properties.editLayerId = i;\n     \n      if(layer.feature.properties.name!==undefined){\n      layer.bindTooltip(layer.feature.properties.name, {permanent: true, opacity: 0.7, direction:\"center\"}).openTooltip();\n    }\n      layers.push(layer);\n      \n      i++;\n    });\n\n    return (\n      <div>\n<div>\n\n        {layers.map((layer, i) => {\n          return (\n            <EditableLayer\n              key={i}\n              layer={layer}\n              showDrawControl={i === selectedLayerIndex}\n              onLayerClicked={handleLayerClick}\n            >\n                  \n\n            </EditableLayer>\n          );\n          \n\n        })}\n        \n      </div>\n\n      <div>\n\n\n      </div>\n      </div>\n    );\n  }\n\n\n\n  const updateFloor = {\n    id:FloorIdx.length+1,\n\n    // floorno: markers.length + 1,\n    description: \"newDesc\",\n    color: '#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6),\n    blocks: [],\n    boundaries: []\n  }\n\n  //const [selectedLayerIndex, setSelectedLayerIndex] = useState(0);\n  const [addFloor, setAddFloor] = useState(false);\n\n  const _onFeatureGroupReady = (ref) => {\n    if (ref !== undefined && ref !== null) {\n      let leafletFG = ref.leafletElement;\n      if (customLayer.length > 0) {\n        customLayer.eachLayer(layer => leafletFG.addLayer(layer));\n      }\n    }\n  }\n  const handleDrawPolygonClick = (e) => {\n    const activeFloorLcl = activeFloor;\n    const polygonType = e.target.value;\n\n    switch (polygonType) {\n      case \"BO\":\n\n        break;\n\n      case \"BL\":\n\n        break;\n\n      default:\n        break;\n    }\n    if (activeFloorLcl !== undefined && activeFloorLcl !== null) {\n      if (activeFloorLcl.boundaries.length > 3) {\n        const { layerType, layer } = e;\n        if (layerType === \"polygon\") {\n          const { _leaflet_id } = layer;\n          setMapLayers((layers) => [\n            ...layers,\n            { id: _leaflet_id, latlngs: layer.getLatLngs()[0] },\n\n            // [ id: _leaflet_id, latlng:layer.getLatLngs()[0] ]  ,\n          ]);\n        }\n        //Edit this method to perform other actions\n\n        if (!drawing) {\n          editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.enable()\n        } else {\n          editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.completeShape()\n          editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.disable()\n        }\n\n        setDrawing(!drawing)\n\n      }\n\n    }\n\n\n\n  }\n  //let dataLayer = new L.GeoJSON(props.data);\n\n\n\n  const onShapeDrawn = (e) => {\n\n    setDrawing(false)\n\n    const { layerType, layer } = e;\n    if (layerType === \"polygon\") {\n      const { _leaflet_id } = layer;\n\n    }\n\n    const mar = markers;\n\n    for (var k = 0; k < mar.length; k++) {\n\n      let boundary_id = boundaryid;\n\n      boundary_id = layer._leaflet_id;\n\n\n      setBoundaryid(boundary_id);\n      console.log(boundaryid);\n\n\n\n    }\n\n\n\n\n\n\n\n    // e.layer.on('click', () => {\n    //     \n    //     setDrawing(layer);\n    //     //setSelectedLayerIndex(e.target.boundaryid);\n    //     console.log(selectedLayerIndex);\n    //     \n    //   editRef.current.leafletElement._toolbars.edit._modes.edit.handler.enable()\n    // })\n    e.layer.on('contextmenu', () => {\n      //do some contextmenu action here\n    })\n    e.layer.bindTooltip(\"Text\",\n      {\n        className: 'leaflet-draw-tooltip:before leaflet-draw-tooltip leaflet-draw-tooltip-visible',\n        sticky: true,\n        direction: 'right'\n      }\n    );\n  }\n  function handleLayerClick(e, drawControl) {\n\n\n    const { layerType, layer } = e;\n    if (layerType === \"polygon\") {\n      const { _leaflet_id } = layer;\n\n    }\n\n    let drawingLcl = drawing;\n    drawingLcl = layer;\n    setDrawing(drawingLcl);\n    //   setSelectedLayerIndex(e.target.boundaryid);\n    //     console.log(selectedLayerIndex);\n\n\n\n\n\n\n    //editRef.current.leafletElement._toolbars.edit._modes.edit.handler.enable()\n\n  }\n\n  //   e.layer.on('click', () => {\n  //     \n  //     setSelectedLayerIndex(e.target.boundaryid);\n  //     console.log(selectedLayerIndex);\n  //     \n  //   editRef.current.leafletElement._toolbars.edit._modes.edit.handler.enable()\n  // })\n  function crupdateLayer2ActiveFloor(latlngs, polygonId, floorIndex,center) {\n  \n    let coordinates = []\n    for (let latlngsIdx = 0; latlngsIdx < latlngs.length; latlngsIdx++) {\n\n      const latlng = latlngs[latlngsIdx];\n      let coor1 = []\n      const lat = latlng.hasOwnProperty('lat') ? latlng.lat : false;\n      const lng = latlng.hasOwnProperty('lng') ? latlng.lng : false;\n\n      if (!(lat === false || lng === false)) {\n\n        coor1.push(lat);\n        coor1.push(lng);\n        coordinates.push(coor1);\n\n      }\n    }\n    debugger;\n    let activeFloor4crup = activeFloor;\n    if (polygonId === null) {\n      toggleBlockDescription();\n      //console.log(blockName);\n      debugger;\n      \n\n      //  toggleBlockDescription()\n      //ask description\n      //const blName = blockName;\n\n      activeFloor4crup.blocks.push({  blockId: new Date().getTime().toString(), text: blockName, bounds: coordinates,centre: center });\n      debugger;\n\n    } else {\n      for (let flindex = 0; flindex < activeFloor4crup.blocks.length; flindex++) {\n        const block = activeFloor4crup.blocks[flindex];\n        if (block.blockId === polygonId) {\n\n          activeFloor4crup.blocks[flindex].bounds = coordinates\n          // toggleBlockDescription()\n        }\n\n      }\n    }\n    updateBuildingFromActiveFloor(floorIndex)\n\n\n  }\n  function updateBuildingFromActiveFloor(floorIndex) {\n\n    let detailsLocal = details;\n    let markerLcl = markers;\n    if (markerLcl !== undefined && markerLcl !== null) {\n      if (markers.length >= 1 && floorIndex >= 0) {\n        markerLcl[floorIndex] = activeFloor;\n        detailsLocal.floors = markerLcl;\n        setDetails(detailsLocal);\n      }\n    }\n\n  }\n  function reverseCoordinate(coor) {\n    let retCoor = [];\n    if (coor !== undefined && coor !== null) {\n      if (coor.length > 0) {\n        for (let coorIdx = 0; coorIdx < coor.length; coorIdx++) {\n          const bound = coor[coorIdx];\n          let row = [];\n          if (bound.length === 2) {\n            row.push(bound[1]);\n            row.push(bound[0]);\n            retCoor.push(row);\n          }\n        }\n\n      }\n    }\n    return retCoor;\n  }\n\n\n  const ondetailChange = (e) => {\n    debugger;\n    let detailLcl = details;\n    const value = e.target.value;\n    const property = e.target.getAttribute('property');\n    if (property !== undefined && property !== null && property !== '') {\n      detailLcl[property] = value;\n      setDetails(detailLcl);\n\n\n    }\n\n\n  }\n  const handleSaveFloor = (e, polygonId) => {\n    debugger;\n    let detailsLocal = details;\n    const markersLocal = markers;\n    details.floors = markersLocal\n\n    service\n      .updateBuilding(details.id, details)\n      window.location.reload();\n\n  }\n  \n  \n  function block2Layer(iBlock, floorIndex, floorColor) {\n\n\n    return {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"id\": iBlock.blockId,\n        \"text\": blockName,\n        \"ground\": floorIndex,\n\n      },\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"color\": floorColor,\n        \"coordinates\": [reverseCoordinate(iBlock.bounds)]\n      }\n    }\n\n\n\n  }\n\n  \n\n  function toggleBlockDescription () {\n    setBlockDescription(!blockDescription)\n  }\n  const onChangeIndex = e => {\n    e.preventDefault();\n    setFloorIdx(e.target.value);\n    \n  };\n  const onChangeName = e => {\n    e.preventDefault();\n    setBlockName(e.target.value);\n    \n  };\n\n  function onFloorSelect(e, data) {\n    debugger;\n   \n    const index = e.target.value;\n    let selectedFloorPolygonLayers = [];\n    let activeFloorSel = markers[index];\n    const floorColor = '#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6);\n\n    for (let blockIdx = 0; blockIdx < activeFloorSel.blocks.length; blockIdx++) {\n      const blockPolygon = activeFloorSel.blocks[blockIdx];\n      //const center = [activeFloorSel.blocks.bounds.getCenter()];\n     \n      const geoJsonObj = block2Layer(blockPolygon, index, floorColor);\n     \n  \n      // blockPolygon.push({centre: center});\n      selectedFloorPolygonLayers.push(geoJsonObj);\n      if(blockPolygon.centre!==undefined){\n        \n        // label = String(feature.properties.name) \n        let pointLayer = { \"type\": \"Feature\", \"properties\": { \"name\": blockPolygon.text  }, \n        \"geometry\": { \"type\": \"Point\", \n        \"coordinates\": [blockPolygon.centre[0].lng ,blockPolygon.centre[0].lat  ] } ,\n        \n        \n      };\n     \n        selectedFloorPolygonLayers.push(pointLayer)\n        \n        \n      }\n      \n      // create layer for marker \n\n    }\n    // var data_points = {\n    //   \"type\": \"FeatureCollection\",\n    //   \"name\": \"test-points-short-named\",\n    //   \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\n    //   \"features\": [\n    //   { \"type\": \"Feature\", \"properties\": { \"name\": \"1\" }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ -135.02507178240552, 60.672508785052223 ] } },\n    //   { \"type\": \"Feature\", \"properties\": { \"name\": \"6\"}, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ -135.02480935075292, 60.672888247036376 ] } },\n    //   { \"type\": \"Feature\", \"properties\": { \"name\": \"12\"}, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ -135.02449372349508, 60.672615176262731 ] } },\n    //   { \"type\": \"Feature\", \"properties\": { \"name\": \"25\"}, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ -135.0240752514004, 60.673313811878423 ] } }\n    //   ]};\n    // var pointLayer = L.geoJSON(null, {\n    //   pointToLayer: function(feature,latlng){\n    //     label = String(feature.properties.name) // Must convert to string, .bindTooltip can't use straight 'feature.properties.attribute'\n    //     return new L.CircleMarker(latlng, {\n    //       radius: 1,\n    //     }).bindTooltip(label, {permanent: true, opacity: 0.7}).openTooltip();\n    //     }\n    //   });\n\n    // pointLayer.addData(data_points);\n    const featureCollection = {\n      \"type\": \"FeatureCollection\",\n      \"name\": \"\",\n      \"crs\": {\n        \"type\": \"name\",\n        \"properties\": {\n          \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\"\n        }\n      },\n      \"features\": selectedFloorPolygonLayers\n    };\n    // const floorLayers = new L.GeoJSON(featureCollection);\n\n\n    // setActiveFloorPolygons(floorLayers.getLayers());\n    setselectedFloorGeoData(featureCollection);\n    setActiveFloorBoundary(activeFloorSel.boundaries);\n    setActiveFloor(activeFloorSel);\n    \n\n  }\n\n\n\n  const addressCardStyle = {\n    backgroundImage: `url(${require('./33.png')})`,\n\n    backgroundSize: 'cover',\n\n    height: \"423px\",\n\n  }\n\n  let floor = {};\n  useEffect(() => {\n \n\n    var refTemp = refno.replace(\"/EditBuilding/\", \"\");\n    service\n      .getBuilding(refTemp)\n      .then(selBuilding => {\n        console.log(\"returning\", selBuilding)\n\n        setMarkers(selBuilding[0].floors);\n        if (selBuilding[0].floors.length > 0) {\n          setActiveFloor(selBuilding[0].floors[0]);\n        } else {\n          setActiveFloor(\n            {\n              \"id\":FloorId,\n              // \"floorno\": \"1\",\n              \"description\": \"\",\n              \"color\": \"#f18d00\",\n              \"blocks\": []\n            }\n\n          );\n        }\n\n\n\n        setDetails(selBuilding[0]);\n        \n       \n        \n        const buildingLatLng = {\n          lat: selBuilding[0].latitude,\n          lng: selBuilding[0].longitude,\n        }\n        setBuildingCenter(buildingLatLng)\n      console.log(buildingCenter)\n\n        //mapRef.current.leafletElement.flyTo([selBuilding[0].latitude, selBuilding[0].longitude], 16)\n\n        // setBoundary(selBuilding[0].boundary.geometry.coordinates[0]);\n\n        let ml = mapLayers;\n\n\n\n\n      })\n\n  }, [])\n\n  function toggle() {\n    setAddFloor(!addFloor);\n  }\n  \n\n  const moveActiveFloor = () => {\n    const markersLcl = markers;\n\n    if (activeFloor !== undefined && activeFloor !== null) {\n      for (let i = 0; i < markersLcl.length; i++) {\n\n        if (activeFloor.id === markersLcl[i].id) {\n          markersLcl[i].description = activeFloor.description;\n          markersLcl[i].blocks = activeFloor.blocks;\n          markersLcl[i].boundaries = activeFloor.boundaries;\n\n        }\n      }\n      setMarkers(markersLcl);\n    }\n\n  }\n  const _onCreate = (e) => {\n    console.log(e);\n\n    const { layerType, layer } = e;\n    if (layerType === \"polygon\") {\n      const { _leaflet_id } = layer;\n\n      setMapLayers((layers) => [\n        ...layers,\n        { id: _leaflet_id, latlngs: layer.getLatLngs()[0] },\n      ]);\n    }\n  };\n\n\n  const _onEdited = (e) => {\n\n    // console.log(e);\n    // const {\n    //   layers: { _layers },\n    // } = e;\n\n    // Object.values(_layers).map(({ _leaflet_id, editing }) => {\n    //   setMapLayers((layers) =>\n    //     layers.map((l) =>\n    //       l.id === _leaflet_id\n    //         ? { ...l, latlngs: { ...editing.latlngs[0] } }\n    //         : l\n    //     )\n    //   );\n    // });\n  };\n\n  const _onDeleted = (e) => {\n    console.log(e);\n    const {\n      layers: { _layers },\n    } = e;\n\n    Object.values(_layers).map(({ _leaflet_id }) => {\n      setMapLayers((layers) => layers.filter((l) => l.id !== _leaflet_id));\n    });\n  };\n\n  // const deleteBuildingConfirm = (e) => {\n\n  //   debugger;\n  //   const bid = delBuildingId;\n  //   service.deletion(bid);\n  //   window.location.reload();\n\n\n  // }\n\n  const deleteActiveFloor = () => {\n    debugger;\n    const activeFloorLocal = activeFloor;\n    const markersL = markers;\n    const markersAfterDeletion = [];\n    for (let j = 0; j < markersL.length; j++) {\n      const marker = markersL[j];\n      if (marker.id !== activeFloorLocal.id) {\n        markersAfterDeletion.push(marker);\n        \n      }\n\n    }\n\n    setMarkers(markersAfterDeletion);\n    // setActiveFloorPolygons(markersAfterDeletion[0].blocks);\n    // setActiveFloorBoundary(markersAfterDeletion[0].boundaries);\n    // setActiveFloor(markersAfterDeletion[0]);\n    // for (let y = 0; y < markersAfterDeletion.length; y++) {\n    if (markersAfterDeletion.length > 0) {\n      setActiveFloor(markersAfterDeletion);\n    } else {\n      setActiveFloor(\n        {\n          \"id\": FloorId,\n          // \"floorno\": \"1\",\n          \"description\": \"\",\n          \"color\": \"#f18d00\",\n          \"blocks\": []\n        }\n\n      );\n    }\n  //}\n  }\n\n  const createBlockWithDesc = () => {\n    \n    const draftBlockLocal = draftBlock;\n    const markersL1 =markers;\n    let floorIndex = null;\n    debugger;\n    for (var x=0; x<markersL1.length; x++){\n      if (activeFloor.id === markersL1[x].id){\n        floorIndex = x;\n        break;\n      }\n    }\n    \n    let latlngs =draftBlockLocal.getLatLngs();\n    let center = [draftBlockLocal._bounds.getCenter()];\n         latlngs = latlngs.length > 0 ? latlngs[0] : latlngs;\n      \n      \n       \n       debugger;\n        crupdateLayer2ActiveFloor(latlngs, null, floorIndex,center)\n\n        \n        \n        updateBuildingFromActiveFloor()\n\n    debugger;\n  }\n\n\n  const handleAddFloor = () => {\n    debugger;\n\n    const newFloor = {\n\"id\":FloorId,\n      // \"floorno\": markers.length + 1,\n      \"description\": newDesc,\n      \"color\": \"#f18d00\",\n      \"blocks\": [[0,0],[0,0],[0,0]]\n     \n    }\n    setActiveFloor(newFloor);\n    setActiveFloorBoundary(newFloor.boundaries);\n    setActiveFloorPolygons(newFloor.blocks);\n    const markersLocal = markers;\n    markersLocal.splice(FloorIdx-1, 0, newFloor )\n  //  markersLocal.push(newFloor);\n    setMarkers(markersLocal);\n\n    setNewDesc(\"\");\n    handleSaveFloor();\n    //window.location.reload();\n  }\n\n\n  const changeHandlerDesc = (event) => setNewDesc(event.target.value);\n  const updateIsEdit = (e, value) => setIsEdit(value);\n\n\n\n  const handleEditPolygonClick = (e) => {\n    const drawingLocal = drawing;\n\n\n  }\n  \n\n\n\n  return (\n    <div>\n      <div class=\"row\">\n        <Breadcrumb class=\"mb-4\">\n          <BreadcrumbItem><a href=\"/map1\"><i\n            className=\"ri-home-4-line mr-1 float-left\" />Home</a></BreadcrumbItem>\n          <BreadcrumbItem active>{details.name}</BreadcrumbItem>\n        </Breadcrumb>\n\n      </div>\n\n      <Card className=\"iq-card\">\n          <CardBody className=\"iq-card-body\">\n\n      <div>\n        \n\n\n\n        <div className=\"row\" style={{ margin: \".6%\" }}>\n\n          <div className=\"col-lg-4\">\n            <div className=\"iq-card iq-card-block iq-card-stretch iq-card-height bg-transparent\">\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                <Input type=\"text\" className=\"form-control\"\n                  defaultValue={details.id} disabled />\n              </FormGroup>\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Building Name</Label>\n                <Input type=\"text\" className=\"form-control\"\n                  defaultValue={details.name} property=\"name\" onChange={ondetailChange} />\n              </FormGroup>\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Street</Label>\n                <Input type=\"text\" className=\"form-control\"\n                  defaultValue={details.street} property=\"street\" onChange={ondetailChange} />\n              </FormGroup>\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Apartment</Label>\n                <Input type=\"text\" className=\"form-control\" property=\"Apartment\" onChange={ondetailChange}\n                  defaultValue={details.Apartment} />\n              </FormGroup>\n\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Doornum</Label>\n                <Input type=\"text\" className=\"form-control\" property=\"doornum\" onChange={ondetailChange}\n                  defaultValue={details.doornum} />\n              </FormGroup>\n\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Region</Label>\n                <Input type=\"text\" className=\"form-control\" property=\"region\" onChange={ondetailChange}\n                  defaultValue={details.region} />\n              </FormGroup>\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Country</Label>\n                <Input type=\"text\" className=\"form-control\" property=\"country\" onChange={ondetailChange}\n                  defaultValue={details.country} />\n\n              </FormGroup>\n\n              <Button className=\"btn btn-primary\"\n                style={{ \"font-size\": \"1.0rem\", \"margin-left\": \".05rem\", \"margin-right\": \".05rem\" }} color=\"primary\" onClick={handleSaveFloor}> SaveBuilding </Button>\n\n            </div>\n          </div>\n\n\n          <div className=\"col-lg-8\">\n            <div className=\"iq-card overflow-hidden\">\n              <h1 className=\"display-4\">{activeFloor.description}</h1>\n\n              <div id=\"home-chart-02\">\n              {buildingCenter.lat && buildingCenter.lng && <Map center={buildingCenter} zoom={16} ref={mapRef} >\n                {/* <Map center={[details.latitude, details.longitude]} zoom={19} ref={mapRef} > */}\n                  <Control position=\"topright\">\n                    {/* <button class=\"primary\" onClick={handleDrawPolygonClick} value=\"BO\"\n                    style={{ \"font-size\": \"1.5rem\", \"margin-left\": \".05rem\" ,\"margin-right\": \".05rem\" }}>\n                    Add Floor\n                        </button> */}\n\n\n\n                    <Button className=\"btn btn-primary\" color=\"primary\" onClick={() => toggle(\"addFloor\")}> AddFloor </Button>{' '}\n\n\n                    <Modal isOpen={addFloor} toggle={() => toggle(\"addFloor\")} className=\"modal-sm\">\n                      <ModalHeader className=\"btn btn-primary\" toggle={() => toggle(\"addFloor\")}>Add Floor</ModalHeader>\n                      <ModalBody>\n\n\n                        {/* <p>Floor: {markers.length + 1}</p> */}\n                        <p>Index:</p> <input\n            onChange={onChangeIndex}\n            value={FloorIdx}\n            type=\"number\"\n          \n          />\n\n                        <p>Enter Floor Description</p>\n                        <input type=\"text\" onChange={changeHandlerDesc} value={newDesc}\n                          lur={updateIsEdit} />\n\n                      </ModalBody>\n                      <ModalFooter>\n\n                        <Button color=\"btn btn-primary\" onClick={() => {\n                          toggle(\"addFloor\");\n                          // handleAddFloor(); \n                          handleAddFloor();\n\n                        }}>OK</Button>{' '}\n                        <Button color=\"btn btn-primary\" onClick={() => toggle(\"addFloor\")}>Cancel</Button>\n                      </ModalFooter>\n                    </Modal>\n\n                    <Button class=\"btn btn-primary\" onClick={deleteActiveFloor} value=\"BO\"\n                    >\n                      Delete Floor\n                        </Button>\n                    {/* <button class=\"btn btn-primary\" onClick={handleDrawPolygonClick} value=\"BO\"\n                    style={{ \"font-size\": \"1.0rem\", \"margin-left\": \".05rem\", \"margin-right\": \".05rem\" }}>\n                    Manage Boundary\n                        </button> */}\n\n                    <button class=\"btn btn-primary\" onClick={handleDrawPolygonClick} value=\"BL\"\n                      style={{ \"font-size\": \"1.0rem\", \"margin-left\": \".05rem\" }}>\n                      AddBlock\n                        </button>\n                    {/* \n                  <button class=\"btn btn-primary\" onClick={handleEditPolygonClick}\n                    style={{ \"font-size\": \"1.0rem\", \"margin-left\": \".05rem\" }}>\n                    EditBlock\n                        </button> */}\n                  </Control>\n                  <LayersControl position=\"topright\">\n                    <LayersControl.BaseLayer\n                      checked={false}\n                      name=\"Esri WorldImagery\"\n                      group=\"BaseLayers\"\n                    >\n                      <TileLayer\n                        url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}.png\"\n                        attribution='&copy; <a href=\"Esri &mdash\">Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community</a> contributors'\n                      />\n                    </LayersControl.BaseLayer >\n                    <LayersControl.BaseLayer\n                      checked={true}\n                      name=\"OpenStreetMap\"\n                      group=\"BaseLayers\"\n                    >\n                      <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                      />\n                    </LayersControl.BaseLayer >\n\n                  </LayersControl>\n\n                  <EditableGroup data={selectedFloorGeoData} >\n                    {/* {\n                      markers.map((marker, ind) => (\n                        marker.blocks.map((block, ind) => (\n\n                        <Marker position={block.centre}>\n\n                       \n           <Tooltip permanent direction=\"center\"> {block.text}</Tooltip> </Marker>\n\n)) ))\n                    } */}\n                  \n                  {/* <Tooltip\n                            style={{fontSize:\"20px\"}}\n                         title=   {<h3 style={{ color: \"lightblue\" }}>{mLr.description}</h3>}\n       \n        placement=\"left\"\n      >\n      </Tooltip> */}\n\n                  </EditableGroup>\n\n                  <div>\n                  <Modal isOpen={blockDescription} toggle={() => toggleBlockDescription(\"blockDescription\")} className=\"modal-sm\" style={modalStyles}>\n                  \n                  <ModalHeader className=\"btn btn-primary\" toggle={() => toggleBlockDescription(\"blockDescription\")}>Enter the block details</ModalHeader>\n                  <ModalBody>\n                  <Card className=\"iq-card\">\n              <CardBody className=\"iq-card-body\">\n              <form>\n             \n             \n                    Name: <input\n            onChange={onChangeName}\n            value={blockName}\n            type=\"text\"\n          \n          /><br/>\n                    {/* Description: <input\n            onChange={onChangeDesc}\n            value={blockDesc}\n            type=\"text\"\n          \n          /><br/>\n                    icon: <input\n            onChange={onChangeIcon}\n            value={icon}\n            type=\"url\"\n          \n          /><br/> */}\n                    </form>\n                   \n                    </CardBody>\n                    </Card>\n  \n                  </ModalBody>\n                  <ModalFooter>\n                 {/* <Button color=\"primary\" >submit</Button>  */}\n                  <Button color=\"secondary\" onClick={createBlockWithDesc}>Ok</Button>\n                  </ModalFooter>\n                  \n                  \n                  </Modal>\n                  </div>\n\n\n                  {/* <FeatureGroup>\n                  \n                  {activeFloorPolygons.map((polygonObjLayer,polyIdx)=>(\n                      <div>\n                      <EditControl\n                      layer={polygonObjLayer}\n                      position='topleft'\n                      onCreated={onShapeDrawn}\n                      onEdited = {_onEdited}\n                      onDeleted = {_onDeleted}\n                      \n                      \n                      \n                      //here you can specify your shape options and which handler you want to enable\n                      draw={{\n                        rectangle: false,\n                        polygon: true,\n                        circle: false,\n                        polyline: false,\n                        circlemarker: false,\n                        marker: false\n  \n                      }}\n\n                    >\n  \n  \n  \n  \n                    </EditControl>\n\n                    <Polygon positions={polygonObj.bounds} ></Polygon>\n                    </div>\n                    \n                  ))}*/}\n                  {/* <Polygon positions={activeFloorBoundary} onClick={handleLayerClick}> </Polygon> */}\n\n\n\n                  {/* </FeatureGroup>  */}\n                  {/* import React from \"react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport { Button, Popup } from \"semantic-ui-react\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Popup\n        trigger={<Button>Register</Button>}\n        position=\"top center\"\n      >\n        Tooltip for the register button\n      </Popup>\n    </div>\n  );\n} */}\n\n\n                  <Control position=\"topright\" >\n                    <div>\n                      {\n                        markers.map((mLr, didx) => (\n\n\n\n                          <div>\n                            {/* <Tooltip\n                            style={{fontSize:\"20px\"}}\n                         title=   {<h3 style={{ color: \"lightblue\" }}>{mLr.description}</h3>}\n       \n        placement=\"left\"\n      > */}\n\n                            <button variant=\"contained\" class=\"primary\" value={didx} onClick={onFloorSelect} style={{ \"font-size\": \"1.5rem\", \"margin-left\": \".05rem\" }}>\n                              {mLr.description}\n                            </button>\n                            {/* </Tooltip> */}\n                            {/* <ReactTooltip id=\"registerTip\" place=\"top\" effect=\"solid\">\n        {mLr.description}\n      </ReactTooltip> */}\n\n\n                          </div>\n                        ))\n\n                      }\n\n                    </div>\n                  </Control>\n                  {/* {if(details!==undefined&&details.boundaries.length>0)\n                    <Polygon positions={details.boundaries} ></Polygon>\n                  } */}\n\n                  <Boundary></Boundary>\n\n\n                </Map>}\n              </div>\n            </div>\n          </div>\n          \n        </div>\n        \n\n\n\n\n      </div>\n      \n      </CardBody>\n      </Card>\n      \n    </div>\n  )\n}\n\n\nexport default EditBuilding;","/Users/likhitha/Documents/cms/client/src/components/dashboard/EditFloormap.js",["533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578"],"import { CardBody,Card,ButtonGroup, ButtonToolbar,Form,FormGroup,Label,Input, ModalHeader, Modal, ModalBody, ModalFooter } from 'reactstrap';\nimport React, { useRef, useEffect, useState, useMap} from \"react\";\nimport { Col, Row } from \"reactstrap\";\nimport { EditControl } from \"react-leaflet-draw\";\n// import \"./assets/leaflet.css\"\n// import \"./assets/leaflet.draw.css\"\nimport {  Map, TileLayer, FeatureGroup, Marker,Polyline, Popup, Polygon, Tooltip, Rectangle,  LayersControl, LayerGroup,useMapEvents,useLeaflet} from 'react-leaflet';\nimport service from './services';\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport { popup } from 'leaflet';\nimport { text } from 'body-parser';\nimport { divIcon } from 'leaflet';\nimport { renderToStaticMarkup } from \"react-dom/server\";\n\n\nconst useStyles = makeStyles(theme => ({\n  map: ({\n      height: `calc(90vh - 90px)`,\n      width: '60%',\n      zIndex: 0\n  }),\n  buttonWrapper: {\n      zIndex: 1,\n      position: \"absolute\",\n      bottom: theme.spacing(2),\n      marginLeft: \"30%\",\n      marginBottom: \"8%\",\n      transform: \"translateX(-50%)\",\n  },\n  buttonStyle: {\n    margin:\"10px\",\n    \n  },\n  headerWrapper: {\n      zIndex: 1,\n      marginLeft: theme.spacing(3),\n      marginTop: theme.spacing(1),\n  }\n}));\n\nconst modalStyles = {\n  width   :    500,\n  height  :    500\n}\n\n\nconst EditFloorMap = (props) => \n{\n  const [addFloor, setAddFloor] = useState(false);\n  //const mapGlobal = useMap();\n  const classes = useStyles(props)\n  const editRef = useRef();\n  const [markers, setMarkers] = useState([])\n  const [newPosition, setNewPosition] = useState([])\n  //const [markers1, setMarkers1] = useState([]);\n  const [position, setPosition] = useState([]);\n  const [mapLayers, setMapLayers] = useState([]);\n  const [ newDesc, setNewDesc ] = useState('')\n  const [isEdit, setIsEdit] = useState('')\n  const [floors, setFloors ] = useState('')\n  const [blocks, setBlocks] = useState('')\n  const [newText, setNewText] = useState('')\n  const [drawing, setDrawing] = useState(false);\n  const [showDrawBlock, setShowDrawBlock] = useState(false);\n  const [polyFlag, setPolyFlag] = useState('');\n  const [activeFloor, setActiveFloor] = useState('')\n  const [buildingId, setBuildingId] =  useState('')\n  //const editRef = useRef();\n  //const [map, setMap] = useState(null);\n  const [editBoundaries, setEditBoundaries] = useState(false);\n  const [editBlock, setEditBlock] = useState(false);\n  const [blockDescription,setBlockDescription] = useState(false);\n  const [deleteFloor, setDeleteFloor] = useState(false);\n  const [blockName, setBlockName] = useState('')\n  const [blockDesc, setBlockDesc] = useState('')\n  const [icon, setIcon] = useState('')\n  const [activeLayer, setActiveLayer] = useState('')\n  const [selectedLayerIndex, setSelectedLayerIndex] = useState(0);\n  //const [selectedLayerIndex, setSelectedLayerIndex] = useState(0);\n\n  const leaflet = useLeaflet();\n  const editLayerRef = React.useRef();\n  let drawControlRef = React.useRef();\n  let {map} = leaflet;\n  \n \n  \n\n  const updateFloor = {\n\n    floorno: 0,\n    description: \"newDesc\",\n    color: '#'+(0x1000000+(Math.random())*0xffffff).toString(16).substr(1,6),\n    blocks: [],\n    boundaries: []\n  }\n  \n  function toggle() {\n    setAddFloor(!addFloor);\n  }\n  function toggleBlock() {\n    setEditBlock(!editBlock);\n  }\n  \n  function toggleBoundaries() {\n    setEditBoundaries(!editBoundaries);\n  }\n\n  function toggleBlockDescription() {\n    setBlockDescription(!blockDescription);\n  }\n\n  function toggleDeleteFloor() {\n    setDeleteFloor(!deleteFloor);\n  }\n\n  const onChangeName = e => {\n    e.preventDefault();\n    setBlockName(e.target.value);\n    \n  };\n  const onChangeDesc = e => {\n    e.preventDefault();\n    \n    setBlockDesc(e.target.value);\n    \n\n  };\n  const onChangeIcon = e => {\n    e.preventDefault();\n    \n    setIcon(e.target.value);\n\n  };\n  //const polygonCenter = markers[0].floors[0].blocks[0]._bounds.getCenter();\n\n  // const onSubmit = e => {\n  //   e.preventDefault();\n\n  //   const newUser = {\n  //     name: blockName,\n  //     description: blockDesc,\n  //     icon: icon\n      \n  //   };\n  // }\n  // function submitHandler(e) {\n  //   e.preventDefault();\n  //   setBlockName(e.target.value);\n  //   setBlockDesc(e.target.value);\n  //   setIcon(e.target.value);\n  // }\n\n  function GlobalMapComponent() {\n    const mapGlobal = useMap()\n    mapGlobal.on( 'baselayerchange', function (e) {\n      console.log('Layer name -> ', e.name);\n      //console.log('Layer URL -> ', e.layer.options.url);\n      //console.log('Layer attribution -> ', e.layer.options.attribution);\n  });\n    console.log('map center:', mapGlobal.getCenter())\n    return null\n  }\n   \n  \nconst handleEditFloor = (e) => {\n  setBuildingId(e.target.value)\n  setDrawing(true)\n  const { layerType, layer } = e;\n  debugger;\n  //  if (layerType === \"polygon\") {\n  //     const { _leaflet_id } = layer;\n  //     setMapLayers((layers) => [\n  //       ...layers,\n  //   { id: _leaflet_id, latlngs: layer.getLatLngs()[0] },\n\n  //     // [ id: _leaflet_id, latlng:layer.getLatLngs()[0] ]  ,\n  //     ]);\n  //   }\n    if (buildingId===markers[0].floors[0].boundaryLeaflet_id){\n    if (drawing) {\n            //editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.enable()\n           editRef.current.leafletElement._toolbars.edit._modes.edit.handler.enable()\n      \n        } else {\n          editRef.current.leafletElement._toolbars.edit._modes.edit.handler.save() \n           editRef.current.leafletElement._toolbars.edit._modes.edit.handler.disable()\n        }\n      }\n//     console.log(layer)\n// console.log(mapLayers)\n//         e.layer.on('click', () => {\n//           debugger;\n//             editRef.current.leafletElement._toolbars.edit._modes.edit.handler.enable()\n//         })\n//         e.layer.on('contextmenu', () => {\n//             //do some contextmenu action here\n//         })\n//         e.layer.bindTooltip(\"Text\", \n//             {\n//               className: 'leaflet-draw-tooltip:before leaflet-draw-tooltip leaflet-draw-tooltip-visible',\n//               sticky: true,\n//               direction: 'right'\n//             }\n//         );\n}\n\nconst handleReset = (e) => {\n  debugger;\n  \n  \n  for (var i = 0; i < markers[0].floors.length; i++) { \n    if(markers[0].floors[i].description===activeFloor.name){\n    \n      \n        markers[0].floors[i].boundaries= markers[0].floors[i].boundaries_backup;\n        markers[0].floors[i].boundaries_backup = [];\n        break;\n}\n}\n}\n// const handleFloorReset = (e) => {\n//   debugger;\n//   if(polyFlag==='B')\n//   for (var i = 0; i < markers[0].floors.length; i++) { \n//     if(markers[0].floors[i].description===activeFloor.name){\n    \n      \n//         markers[0].floors[i].blocks[i].bounds= markers[0].floors[i].blocks[i].bounds_backup;\n//         markers[0].floors[i].blocks[i].bounds_backup = [];\n//         break;\n// }\n// }\n// }\nconst handleBlock = (e) => {\n  setPolyFlag('L');\n  debugger;\n  for (var i = 0; i < markers[0].floors.length; i++) { \n    if(markers[0].floors[i].description===activeFloor.name){\n    \n      if(markers[0].floors[i].boundaries.length>0) {\n        \n\n\n        markers[0].floors[i].blocks[i].bound_backup = markers[0].floors[i].blocks[i].bounds;\n        markers[0].floors[i].blocks[i].bounds = [];\n        \n      }\nbreak;\n}\n}\n//toggleBlockDescription();\n//toggleBlockDescription();\nif (!drawing) {\n  editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.enable()\n} else {\n  editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.completeShape()\n  editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.disable()\n}\n\nsetDrawing(!drawing)\n}\n\nconst handleBoundaries = (e) => {\n  debugger;\n  for (var i = 0; i < markers[0].floors.length; i++) { \n    if(markers[0].floors[i].description===activeFloor.name){\n    \n      if(markers[0].floors[i].boundaries.length>0) {\n\n        markers[0].floors[i].boundaries_backup = markers[0].floors[i].boundaries;\n        markers[0].floors[i].boundaries = [];\n        }\nbreak;\n}\n}\nif (!drawing) {\n  editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.enable()\n} else {\n  editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.completeShape()\n  editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.disable()\n}\n\nsetDrawing(!drawing)\n\n}\n\nconst handleManageBoundaries = (e) => {\n    debugger;\n    console.log(activeFloor);\n    console.log(markers);\n    setPolyFlag('B')\n    for (var i = 0; i < markers[0].floors.length; i++) { \n      if(markers[0].floors[i].description===activeFloor.name){\n        debugger;\n        if(markers[0].floors[i].boundaries.length>0) {\n          debugger;\n          toggleBoundaries();\n         }\n\n     else {\n        const { layerType, layer } = e;\n    if (layerType === \"polygon\") {\n      const { _leaflet_id } = layer;\n      setMapLayers((layers) => [\n        ...layers,\n    { id: _leaflet_id, latlngs: layer.getLatLngs()[0] },\n\n      // [ id: _leaflet_id, latlng:layer.getLatLngs()[0] ]  ,\n      ]);\n    }\n    debugger;\n\n\n    if (!drawing) {\n      editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.enable()\n  } else {\n      editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.completeShape()\n      editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.disable()\n  }\n\n  setDrawing(!drawing)\n\n      }\n      }\n}\n    \n  \n    \ndebugger;\n  }\n   \n  const handleClick = () => {\n\n        \n    //Edit this method to perform other actions\n\n    if (!drawing) {\n        editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.enable()\n    } else {\n        editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.completeShape()\n        editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.disable()\n    }\n    setDrawing(!drawing)\n}\n\nconst handleAddFloor = () => {\n  debugger;\n}\n\n\nconst handleClickFloor = () => {\n  debugger;\n   service\n   .getBuilding(refno)\n   .then(building => {\n    console.log(\"returning\", building)\n   updateFloor.description=newDesc\n  building[0].floors.push(updateFloor)\n\n  setMarkers(building)\n\n  \n\n\n})\n}\n\nconst addBoundaries = (e) =>{\n  console.log(e);\n\n  const { layerType, layer } = e;\n  if (layerType === \"polygon\") {\n    const { _leaflet_id } = layer;\n    setMapLayers((layers) => [\n         ...layers,\n        {  latlngs: layer.getLatLngs()[0] },\n       ]);\n\n    // setMapLayers((layers) => [\n    //   ...layers,\n    //   { id: _leaflet_id, latlngs: layer.getLatLngs()[0] },\n    // ]);\n  }\n  setDrawing(false)\n\n  e.layer.on('click', () => {\n      editRef.current.leafletElement._toolbars.edit._modes.edit.handler.enable()\n  })\n  e.layer.on('contextmenu', () => {\n      //do some contextmenu action here\n  })\n  e.layer.bindTooltip(\"Text\", \n      {\n        className: 'leaflet-draw-tooltip:before leaflet-draw-tooltip leaflet-draw-tooltip-visiblecg4',\n        sticky: true, \n        direction: 'right'\n      }\n  );\n\n\n\n}\n\nconst handleMap = (e) =>\n{\n  debugger;\n  const map = editRef.current.leafletElement._map;\n  \n\n    \n  \n  map.on(\"baselayerchange\", (activeFloor, activeLayer) => {\n//     //do whatever\ndebugger;\n\n    console.log(activeFloor);\n    \n    \n   \n   \n     setActiveFloor(activeFloor);\n     \nconsole.log(map);\n\n})\n}\n\n\n\n\nconst addPolygon = (e) =>{\n  console.log(e);\n\n  const { layerType, layer } = e;\n  if (layerType === \"polygon\") {\n    const { _leaflet_id } = layer;\n    setMapLayers((layers) => [\n         ...layers,\n        {  latlngs: layer.getLatLngs()[0] },\n       ]);\n\n    \n  }\n  setDrawing(false)\n\n  \n \n\n\n\n}\nfunction handleLayerClick(e) {\n  setSelectedLayerIndex(e.target.activeFloor._leaflet_id);\n}\n\n\n\nconst onBlockDrawn = (e) => {\n  debugger;\n  setPolyFlag('L')\n  \n  console.log(e);\n\n  const { layerType, layer } = e;\n  toggleBlockDescription();\n\n  for (var j = 0; j < markers[0].floors.length; j++) { \n      if(markers[0].floors[j].description===activeFloor.name){\n        \n        if(markers[0].floors[j].boundaries.length>0) {\n          debugger;\n          \n          \n\n          if (!drawing) {\n            editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.enable()\n        } else {\n            editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.completeShape()\n            editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.disable()\n        }\n\n      \n        setDrawing(!drawing)\n          \n           \n           }\n          //   else {\n          //    debugger;\n          //    toggleBlock();\n          //  }\n          //  else{\n          //    <popup>Please add boundaries before adding blocks</popup>\n          //  }\n      }\n}\n  \n}\n\n\n\n\n\n\n\n\nconst onShapeDrawn = (e) => {\n  debugger;\n  \n  console.log(e);\n\n  const { layerType, layer } = e;\n  if (layerType === \"polygon\") {\n    const { _leaflet_id } = layer;\n    for (var j = 0; j < markers[0].floors.length; j++) { \n      if(markers[0].floors[j].description===activeFloor.name){\n        if(polyFlag==='B'){\n          // if(markers[0].floors[j].boundaries.length>0) {\n          //         debugger;\n          \n          //       }\n          \n          //    else{\n               \n               markers[0].floors[j].boundaries=[];\n               debugger;\n               for (var k=0; k < layer._latlngs[0].length; k++ )\n               \n               {\n\n                 \n                 var point = [layer._latlngs[0][k].lat, layer._latlngs[0][k].lng];\n                markers[0].floors[j].boundaries.push(point);\n                \n                //markers[0].floors[j].boundaryCenter.push(boundCenter);\n               }\n               //markers[0].floors[j].boundaries= layer._latlngs\n               markers[0].floors[j].boundaryLeaflet_id = layer._leaflet_id;\n               markers[0].floors[j].boundaryCenter = [layer._bounds.getCenter()];\n             //}\n        }\n         else if(polyFlag==='L'){\n          var tempArray = [];\n          //var tempCenter = [];\n\n          for (var n=0; n < layer._latlngs[0].length; n++){\n            \n            var pointBlock = [layer._latlngs[0][n].lat, layer._latlngs[0][n].lng];\n            \n            tempArray.push(pointBlock);\n            //tempCenter.push(polygonCenter);\n          }\n          var polygonCenter = [layer._bounds.getCenter()];\n          var polygonId = layer._leaflet_id;\n         \n          debugger;\n\n          var blockObj = {id:polygonId,name:blockName,description:blockDesc,icon:icon,bounds:tempArray,center:polygonCenter}\n       \n          markers[0].floors[j].blocks.push(blockObj);\n          \n          blockObj = {};\n          debugger;\n\n          editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.disable()\n\n        }\n      //}\n          \n       \n    }\n  }\n    // setMapLayers((layers) => [\n    //   ...layers,\n    //   [  _leaflet_id,  layer.getLatLngs()[0] ],\n    //   // { id: _leaflet_id, latlngs: layer.getLatLngs()[0] },\n    //  //[ layer.getLatLngs()[0] ]  ,\n    // ]);\n\n    // \n   \n   \n    return (\n    \n      <div>\n        {markers.map((name) => (\n          <p>{name.description}{polyFlag}\n         <GlobalMapComponent />\n         </p>\n        ))}\n      </div>\n    )\n     \n  }\n  setDrawing(false)\n\n  e.layer.on('click', () => {\n      editRef.current.leafletElement._toolbars.edit._modes.edit.handler.enable()\n  })\n \n  e.layer.on('contextmenu', () => {\n      //do some contextmenu action here\n  })\n  e.layer.bindTooltip(\"Text\", \n      {\n        className: 'leaflet-draw-tooltip:before leaflet-draw-tooltip leaflet-draw-tooltip-visible',\n        sticky: true,\n        direction: 'right'\n      }\n  );\n}\nfunction onMounted(ctl) {\n  drawControlRef.current = ctl;\n}\n\n\n\n  useEffect(()=>{\n    debugger;\n  \n    service\n    .getBuilding(refno)\n    .then(latlng =>{\n      //console.log(LayersControl.getActiveBaseLayer().name)\n      console.log(\"returning\", latlng)\n      debugger;\n      updateFloor.floorno = latlng[0].floors.length+1;\n      //setMarkers(...markers, latlng)\n      setMarkers(latlng)\n      debugger;\n    })\n    console.log(mapLayers)\n\n  },[])\n  \n  const refno=window.location.pathname.replace('/EditFloorMap/','');\n\n  const handleSaveFloor = (e) => {\n    e.preventDefault()\n    debugger;\n\n    service\n    .updateBuilding(markers[0].id, markers[0])\n    \n  }\n  const handleDeleteFloor = (e) => {\n    e.preventDefault()\n    debugger;\n\n  }\n\n  function handleLayerClick(e) {\n    setSelectedLayerIndex(e.target.markers.floors.blocks.id);\n  }\n\nconst _onCreate = (e) => {\n  console.log(e);\n\n  const { layerType, layer } = e;\n  if (layerType === \"polygon\") {\n    const { _leaflet_id } = layer;\n\n    setMapLayers((layers) => [\n      ...layers,\n      { id: _leaflet_id, latlngs: layer.getLatLngs()[0] },\n    ]);\n  }\n};\n\n\nconst _onEdited = (e) => {\n  console.log(e);\n  const {\n    layers: { _layers },\n  } = e;\n\n  Object.values(_layers).map(({ _leaflet_id, editing }) => {\n    setMapLayers((layers) =>\n      layers.map((l) =>\n        l.id === _leaflet_id\n          ? { ...l, latlngs: { ...editing.latlngs[0] } }\n          : l\n      )\n    );\n  });\n};\n\nconst _onDeleted = (e) => {\n  console.log(e);\n  const {\n    layers: { _layers },\n  } = e;\n\n  Object.values(_layers).map(({ _leaflet_id }) => {\n    setMapLayers((layers) => layers.filter((l) => l.id !== _leaflet_id));\n  });\n};\n\nconst changeHandlerDesc = (event) => setNewDesc(event.target.value)\nconst updateIsEdit = (e, value) => setIsEdit(value);\nconst changeHandlerText = (event) => setNewText(event.target.value)\n\n// const iconMarkup = renderToStaticMarkup(\n//   markers[0].floors[0].blocks[0].description\n//  );\n\n\n// const textDesc = divIcon  ({\n//   html: iconMarkup\n// });\n \n\n  return ( \n    \n          <div id=\"container\">\n                          \n<Card id=\"container\">\n  <CardBody>\n    \n                   {\n                     \n                   markers.filter(item => item.id===refno).map(filteredName => (\n                        <div>\n                          <Row className=\"iq-example-row\" id=\"container\">\n                        <Row className=\"row\">\n                        <Col className=\"col-4\">\n                                              \n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.id} disabled/>\n                                              </FormGroup>\n                                             \n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Name</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.description} />\n                                              </FormGroup>\n                                            \n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Street</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.street} />\n                                              </FormGroup>\n\n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Apartment</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.Apartment} />\n                                              </FormGroup>\n\n\n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Doornum</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.doornum} />\n                                              </FormGroup>\n\n\n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Region</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.region} />\n                                              </FormGroup>\n\n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Country</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.country} />\n\n\n{/* {filteredName.floors.map((floor) => (\n  <div>\n  <h4>Description:</h4>\n  <input onChange={changeHandlerDesc}\n  value={floor.newDesc}\n  /><br/>\n   \n  <button onClick={handleClickFloor}>AddFloor</button>\n\n\n\n\n  {floor.blocks.map((block) => (\n    <div>\n      <h4>Text:</h4>\n      <input onChange={changeHandlerText}\n  value={block.newText}\n  /><br/>\n  <button onClick= {handleClick}>AddPolygon</button><br/>\n  \n\n    </div>\n    \n\n    \n  ))} \n  \n  </div>\n  \n\n))} */}\n\n\n\n\n                                              </FormGroup>\n                                              \n\n                                              </Col>\n                        <Col className=\"col-8\">\n                        <Col lg={4}>\n                        <Button className=\"btn btn-success\" color=\"primary\" onClick={() => toggle(\"addFloor\")}> AddFloor </Button>{' '}\n\n                        {/*Modal*/}\n                        <Modal isOpen={addFloor} toggle={() => toggle(\"addFloor\")} className=\"modal-sm\">\n                        <ModalHeader className=\"btn btn-primary\" toggle={() => toggle(\"addFloor\")}>Add Floor</ModalHeader>\n                        <ModalBody>\n                        \n                          \n                          <p>Floor: {filteredName.floors.length+1}</p>\n                          \n                            <p>Enter Floor Description</p>\n                            <input type=\"text\" onChange={changeHandlerDesc} value={newDesc} \n                            lur={updateIsEdit}/>\n\n                        </ModalBody>\n                        <ModalFooter>\n\n                        <Button color=\"primary\" onClick={() => {\n                          toggle(\"addFloor\");\n                          // handleAddFloor(); \n                          handleClickFloor();\n                      \n                      }}>OK</Button>{' '}\n                        <Button color=\"secondary\" onClick={() => toggle(\"addFloor\")}>Cancel</Button>\n                        </ModalFooter>\n                        </Modal>\n           <Button className=\"btn btn-success\" color=\"primary\" onClick={handleSaveFloor}> SaveFloor </Button>\n           <Button className=\"btn btn-success\" color=\"primary\" onClick={() => toggleDeleteFloor(\"deleteFloor\")}> DeleteFloor </Button>{' '}\n\n{/*Modal*/}\n<Modal isOpen={deleteFloor} toggle={() => toggleDeleteFloor(\"deleteFloor\")} className=\"modal-sm\">\n                    <ModalHeader className=\"btn btn-primary\" toggle={() => toggleDeleteFloor(\"deleteFloor\")}>Delete Floor</ModalHeader>\n<ModalBody>\n                    <h5> Are you sure you want to delete the {activeFloor.name} floor?</h5>\n</ModalBody>\n<ModalFooter>\n\n<Button color=\"primary\" onClick={() => {\n  toggleDeleteFloor(\"deleteFloor\");\n  // handleAddFloor(); \n  handleDeleteFloor();\n\n}}>OK</Button>{' '}\n<Button color=\"secondary\" onClick={() => toggle(\"addFloor\")}>Cancel</Button>\n</ModalFooter>\n</Modal>\n                        \n            <Button className=\"btn btn-success\" color=\"primary\" onClick={handleReset}> reset </Button> \n\n                                                {/* < ModalTemplate /> */}\n                        {/* <Card className=\"card iq-mb-3\">\n                           \n                            <CardBody className=\"card-body\">\n                                <Button onClick={handleClickFloor} color={\"primary\"}>AddFloor</Button>\n                            </CardBody>\n                            \n                        </Card> */}\n                    </Col>\n                                              <Map \n                                              style={ { height: \"auto%\", width: \"auto\"}}\n            center={[filteredName.latitude, filteredName.longitude]} zoom={17.5} maxZoom={100}\n\n            zoomControl={true}  \n            className={classes.map} \n            ref={editRef}\n            onClick={handleMap}>\n\n\n\n\n<LayersControl position=\"topright\">\n<LayersControl.BaseLayer checked={true} name={filteredName.name}>\n  \n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        \n         \n      </LayersControl.BaseLayer>\n      <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n                <FeatureGroup ref={editRef}>\n                    <EditControl\n                    ref={editRef}\n                    position='bottomright'\n                   onCreated={onShapeDrawn}\n                   onMounted={onMounted}\n                    //onCreated={_onCreate}\n                  onEdited={_onEdited}\n                  onDeleted={_onDeleted}\n                  \n                    //here you can specify your shape options and which handler you want to enable\n                    draw={{\n                        rectangle: false,\n                        circle: false,\n                        polyline: false,\n                        circlemarker: false,\n                        marker: false,\n                        polygon:  {\n                             allowIntersection: false,\n                            shapeOptions: {\n                                color: \"#ff0000\"\n                            },\n                         }\n                    }}\n                    />\n                     \n                </FeatureGroup>\n                {filteredName.floors.map((floor, index) => (\n                 \n        <LayersControl.BaseLayer checked={false} name={floor.description}>\n\n        <LayerGroup>\n          <Polygon positions={floor.boundaries} color={floor.color} \n                             />\n{\n   floor.blocks.map((block, ind) => (\n    <Polygon positions={block.bounds}>\n    \n        <label position={block.center}>\n           <Tooltip permanent direction=\"center\" class=\"labelText\"> {block.description}</Tooltip> </label>\n       <Popup direction=\"center\" >\n       <Button\n                \n                className=\"btn btn-primary\"\n                onClick={() => toggleBlock(\"editBlock\")}\n\n                >\n                     Edit\n                </Button>\n                \n                <Modal isOpen={editBlock} toggle={() => toggleBlock(\"editBlock\")} className=\"modal-sm\">\n                        <ModalHeader className=\"btn btn-primary\" toggle={() => toggleBlock(\"editBlock\")}>Are you sure you want to edit the block</ModalHeader>\n                        <ModalBody>\n                        <Button color=\"primary\" onClick={handleBlock}>Yes</Button>\n                        <Button color=\"secondary\" onClick={() => toggleBlock(\"editBlock\")}>Cancel</Button>\n                        </ModalBody>\n                        \n                        </Modal>\n      </Popup>\n      \n     \n\n      \n    </Polygon> \n    \n                             \n                             \n\n  ))\n}\n\n        </LayerGroup>\n        </LayersControl.BaseLayer>\n             ))}\n              </LayersControl>\n                \n                \n            </Map>\n            <ButtonGroup className=\"btn-group\">\n           <div className={classes.buttonStyle}>\n           \n                <Button \n                className=\"btn btn-primary\"\n                \n                    // disabled={filteredName.floors.length>2}\n                    variant=\"contained\"\n                    onClick={onBlockDrawn}>\n                    \n                    AddBlock\n                </Button>\n                {/* <div className={classes.buttonWrapper}> */}\n                <Modal isOpen={blockDescription} toggle={() => toggleBlockDescription(\"blockDescription\")} className=\"modal-sm\" style={modalStyles}>\n                \n                        <ModalHeader className=\"btn btn-primary\" toggle={() => toggleBlockDescription(\"blockDescription\")}>Enter the block details</ModalHeader>\n                        <ModalBody>\n                        <Card className=\"iq-card\">\n                    <CardBody className=\"iq-card-body\">\n                    <form>\n                   \n                          Name: <input\n                  onChange={onChangeName}\n                  value={blockName}\n                  type=\"text\"\n                \n                /><br/>\n                          Description: <input\n                  onChange={onChangeDesc}\n                  value={blockDesc}\n                  type=\"text\"\n                \n                /><br/>\n                          icon: <input\n                  onChange={onChangeIcon}\n                  value={icon}\n                  type=\"url\"\n                \n                /><br/>\n                          </form>\n                         \n                          </CardBody>\n                          </Card>\n\n                        </ModalBody>\n                        <ModalFooter>\n                       {/* <Button color=\"primary\" >submit</Button>  */}\n                        <Button color=\"secondary\" onClick={() => toggleBlockDescription(\"blockDescription\")}>Ok</Button>\n                        </ModalFooter>\n                        \n                        \n                        </Modal>\n\n                <Button\n                \n                className=\"btn btn-primary\"\n                onClick={handleManageBoundaries}\n\n                >\n                      Manage Boundaries\n                </Button>\n                <Modal isOpen={editBoundaries} toggle={() => toggleBoundaries(\"editBoundaries\")} className=\"modal-sm\">\n                        <ModalHeader className=\"btn btn-primary\" toggle={() => toggleBoundaries(\"editBoundaries\")}>Are you sure you want to edit the Boundaries</ModalHeader>\n                        <ModalBody>\n                        <Button color=\"primary\" onClick={handleBoundaries}>Yes</Button>\n                        <Button color=\"secondary\" onClick={() => toggleBoundaries(\"editBoundaries\")}>Cancel</Button>\n                        </ModalBody>\n                        \n                        </Modal>\n                 </div> \n                 </ButtonGroup>\n                 \n            {/* </div> */}\n            {/* <div classname={classes.buttonWrapper}>\n              <Button\n                   >Save</Button>\n\n            </div> */}\n            {/* <pre className=\"text-left\">\n\n\n\n              { \n              \n              JSON.stringify(mapLayers, 0, 2)}</pre> */}\n            \n                             </Col> \n                             \n                             </Row>\n                             </Row>\n                             \n\n\n\n\n\n                                      </div>\n                                      \n  \n                  ))} \n                  \n                  \n                  </CardBody>\n\n</Card>\n                   \n                   </div>)\n}\n\n\nexport default EditFloorMap;\n","/Users/likhitha/Documents/cms/client/src/components/auth/Register.js",[],"/Users/likhitha/Documents/cms/client/src/components/auth/Login.js",[],"/Users/likhitha/Documents/cms/client/src/components/dashboard/services.js",["579"],"import axios from \"axios\"\n\nconst baseUrl = \"http://localhost:3010/data\"\n\n\nconst getAll = () =>{\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst getBuilding = bid => {\n    const request = axios.get(baseUrl + `/${bid}` )\n    return request.then(response => [response.data])\n}\n\n\nconst update = (newEntry) =>{\n    const request = axios.post(baseUrl, newEntry)\n    return request.then(response => response.data)\n}\n\nconst updateBuilding = (bid, entry) => {\n    const request = axios.put(baseUrl + `/${bid}`,entry)\n\n    return request.then(response => response.data)\n}\n\n\nconst deletion = entryId =>{\n    const request = axios.delete(baseUrl + `/${entryId}`)\n    return request.then(response => response.data)\n}\n\nconst deleteAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n\n}\n\nexport default {getAll, update, deletion, deleteAll, getBuilding, updateBuilding}","/Users/likhitha/Documents/cms/client/src/actions/types.js",[],"/Users/likhitha/Documents/cms/client/src/components/dashboard/history.js",[],"/Users/likhitha/Documents/cms/client/src/components/dashboard/DisplayEntries.js",["580","581","582","583","584","585","586","587","588","589","590"],"/*import React from \"react\"\n\nconst DisplayEntry = ({ name }) => {\n    return(\n        <div>\n            {name} \n        </div>\n    )\n}\n\nconst DisplayEntries = ({ names, regVal }) => {\n    const regExp = new RegExp(regVal, \"i\")\n    const filteredArray = names.filter((entry) => regExp.test(entry.name))\n    const namesArray = filteredArray.map((entry) => <DisplayEntry key={entry.id} name={entry.name} />)\n    return(\n    <div>\n        {namesArray}\n    </div>\n    )\n}\n\nexport default DisplayEntries*/\n\nimport React, {useState, useEffect} from \"react\"\nimport service from \"./services.js\"\nimport {Row, Col, Table, Card, CardBody} from 'reactstrap';\nimport { Grid,  TableHeaderRow, TableEditColumn, TableInlineCellEditing } from '@devexpress/dx-react-grid-bootstrap4';\nimport { Link } from \"react-router-dom\";\nconst getRowId = row => row.id;\n\nconst DisplayEntry = ({ name, street, apartment,doorno, region, country, id }) => {\n    const [ name1, setName ] = useState(name)\n    const [ street1, setStreet] = useState(street)\n    const [ apartment1, setApartment] = useState(apartment)\n    const [ doorno1, setDoorno] = useState(doorno)\n    const [ region1, setRegion] = useState(region)\n    const [ country1, setCountry] = useState(country)\n  //  const [ newNumber, setNumber ] = useState(number)\n    const [ buttonVal, setButtonVal ] = useState(\"\")\n    const [markers, setMarkers] = useState([])\n   \n\n      useEffect(()=>{\n        service\n        .getAll()\n        .then(latlng =>{\n          console.log(\"returning\", latlng)\n          setMarkers(latlng)\n        })\n      },[])\n\n    // const [columns] = useState([\n    //     {\n    //         title: \"Name\",\n    //         name: \"name\",\n    //     },\n    //     {\n    //         title: \"Lat\",\n    //         name: \"lat\",\n    //         sortable: true,\n    //     },\n    //     {\n    //         title: \"Lng\",\n    //         name: \"lng\",\n    //         sortable: true,\n    //     },\n    // ]);\n    // const [rows, setRows] = useState([\n    //     {newName},\n    //     {newLat},\n    //     {newLng}\n        \n    // ]);\n    // const [editingCells, setEditingCells] = useState([]);\n\n    // const deleteHandler = (id) =>{\n    //     const handler = () =>{\n    //         if(window.confirm(`Do you really want to delete ${name}\\'s Building details?`)){\n    //             service.deletion(id)\n    //             .then(response => {\n                    \n    //                 setName(\"\")\n    //                 setStreet(\"\")\n    //                 setApartment(\"\")\n    //               setDoorno(\"\")\n    //               setRegion(\"\")\n    //               setCountry(\"\")\n    //             setButtonVal(\"\")\n    //             })\n    //         }\n    //     }\n    //     return handler\n    // }\n    const deleteHandler = (id) => {\n        const handler = () =>{\n                   if(window.confirm(`Do you really want to delete ${name}\\'s Building details?`)){\n  \n        service\n        .deletion(id)\n          .then(response => {\n            setName(\"\")\n                    setStreet(\"\")\n                    setApartment(\"\")\n                  setDoorno(\"\")\n                  setRegion(\"\")\n                   setCountry(\"\")\n                setButtonVal(\"\")\n          })\n        }\n    }\n    return handler\n          \n      };\n\n    useEffect(()=>{\n        setButtonVal(<button onClick={deleteHandler(id)}>delete</button>)\n    },\n    [])\n\n    return(\n       \n        <div>\n            <Table hover className=\"table\" items={markers}>\n   <thead>\n      <tr>\n         <th scope=\"col\">#</th>\n         <th scope=\"col\">Name</th>\n         <th scope=\"col\">Address</th>\n         <th scope=\"col\">Delete</th>\n         \n      </tr>\n   </thead>\n   <tbody>\n     \n                                {\n                                    markers.map((item, index) => (\n                                       \n                                        <tr key={index}>\n                                            <td >{item.id} </td>\n                                           <td> <Link   to={item.link} className=\"nav-link font-weight-bold \">{name1} </Link></td>\n                                            <td >{street1}   {apartment1} {doorno1} {region1} {country1}</td>\n                                            {buttonVal} \n\n                                        </tr>\n                                    ))\n                                }\n\n\n   </tbody>\n   </Table>\n            {/* {newName}\n            {newLat}\n            {newLng}\n            {buttonVal} */}\n           \n\n            {/* <Table className=\"table\" items={{DisplayEntries}}>   \n      <thead>\n    \n    <th>Name</th>\n    <th>Lat</th>\n    <th>Lng</th>\n  \n          </thead>          \n \n<tbody>\n \n  <tr>\n    \n  </tr>\n  </tbody>\n  </Table> */}\n\n        </div> \n    )\n}\n\nconst DisplayEntries = ({ names, regVal }) => {\n    const regExp = new RegExp(regVal, \"i\")\n    const filteredArray = names.filter((entry) => regExp.test(entry.name))\n    const namesArray = filteredArray.map((entry) => <DisplayEntry key={entry.id} name={entry.description} street={entry.street} apartment={entry.Apartment} doorno={entry.doornum} region={entry.region} country={entry.country} id={entry.id} />)\n    \n    return(\n    <div>\n        {namesArray}\n    </div>\n    )\n}\n\nexport default DisplayEntries","/Users/likhitha/Documents/cms/client/src/components/dashboard/Dashboard.js",["591","592","593","594","595"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n//import MapView from \"./MapView.js\";\nimport Map1 from \"./Map1.js\";\nimport { Link } from 'react-router-dom';\n//import {MapContainer,  Marker, Popup,  TileLayer } from \"react-leaflet\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Path } from \"leaflet\";\n\n\n//import { useHistory } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  \n  state = {\n    isButtonDisabled: false\n  }\n  \n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n    \n  };\n  \n  \n  render() {\n    const { user } = this.props.auth;\n\n    return (\n      \n      <div >\n        {/* <span className=\"myClass\" style={{float : 'left', paddingRight : '5px'}} > </span> */}\n        {/* style=\"font-size: 20px; color:#4a54f1; text-align:center; padding-top:100px;\" */}\n        <p style={{fontSize: '20px', color: 'white'}}> Hi <i><b>{user.name}</b></i></p>\n               \n                {/* <MapView /> */}\n                \n            <div>\n           { user.name !== null && user.name !== undefined ?\n            <button\n            \n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\"\n                \n              }}\n              onClick={this.onLogoutClick}\n              \n              className=\"btn btn-primary float-left\"\n            >\n              Logout\n            </button>\n            :\n            null\n  }\n  \n           \n            </div>\n          </div>\n        \n        \n    );\n  }\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Dashboard);\n","/Users/likhitha/Documents/cms/client/src/components/dashboard/Tabs.js",[],"/Users/likhitha/Documents/cms/client/src/components/dashboard/LayerControl2.js",["596","597"],"import React, { Children, cloneElement, Component, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Control, DomUtil, DomEvent } from \"leaflet\";\nimport { withLeaflet, MapControl, LeafletProvider } from \"react-leaflet\";\nimport { IconButton } from \"@material-ui/core\";\nimport LayerIcon from \"@material-ui/icons/Layers\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport TerrainIcon from \"@material-ui/icons/Terrain\";\nimport RecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nconst icons = {\n  BaseLayers: <TerrainIcon />,\n  Rectangles: <StopIcon />,\n  Circles: <RecordIcon />\n};\n\nexport class ControlledLayer extends Component {\n  componentDidUpdate({ checked }) {\n    if (this.props.leaflet.map == null) {\n      return;\n    }\n    // Handle dynamically (un)checking the layer => adding/removing from the map\n    if (this.props.checked === true && (checked == null || checked === false)) {\n      this.props.leaflet.map.addLayer(this.layer);\n    } else if (\n      checked === true &&\n      (this.props.checked == null || this.props.checked === false)\n    ) {\n      this.props.leaflet.map.removeLayer(this.layer);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeLayerControl(this.layer);\n  }\n\n  addLayer() {\n    throw new Error(\"Must be implemented in extending class\");\n  }\n\n  removeLayer(layer) {\n    this.props.removeLayer(layer);\n  }\n\n  render() {\n    const { children } = this.props;\n    return children ? (\n      <LeafletProvider value={this.contextValue}>{children}</LeafletProvider>\n    ) : null;\n  }\n}\n\nexport class ControlledLayerItem extends ControlledLayer {\n  constructor(props) {\n\n    \n    super(props);\n    this.contextValue = {\n      ...props.leaflet,\n      layerContainer: {\n        addLayer: this.addLayer.bind(this),\n        removeLayer: this.removeLayer.bind(this)\n      }\n    };\n  }\nbackUpLayer = {};\n  addLayer = layer => {\n    this.layer = layer; // Keep layer reference to handle dynamic changes of props\n    const { addGroupedLayer, checked, name, group } = this.props;\n    addGroupedLayer(layer, name, checked, group);\n  };\n}\n\nclass LayerControl extends MapControl {\n  constructor(props, context) {\n    super(props);\n    this.controlProps = {\n      addGroupedLayer: this.addGroupedLayer.bind(this),\n      removeLayer: this.removeLayer.bind(this),\n      leaflet: props.leaflet\n    };\n    this._layers = {};\n\n    this.state = {\n      menuOpen: false,\n      layers: {},\n      menus: []\n    };\n  }\n\n  openMenu = () => {\n    this.setState({ menuOpen: true });\n  };\n  closeMenu = () => {\n    this.setState({ menuOpen: false });\n  };\n\n  addGroupedLayer = (layer, name, checked, group) => {\n    if (checked && this.props.leaflet.map != null) {\n      this.props.leaflet.map.addLayer(layer);\n    }\n\n    this.setState((prevState, props) => {\n      let currentLayers = { ...prevState.layers };\n      let currentGroup = currentLayers[group];\n\n      currentGroup = currentGroup\n        ? [\n            ...currentGroup.filter(x => x.name !== name),\n            { layer, name, checked, group }\n          ]\n        : [{ layer, name, checked, group }];\n      currentLayers[group] = currentGroup;\n      return {\n        layers: currentLayers\n      };\n    });\n\n    // bad implementation\n\n    let currentGroup = this._layers[group];\n\n    currentGroup = currentGroup\n      ? [\n          ...currentGroup.filter(x => x.name !== name),\n          { layer, name, checked, group }\n        ]\n      : [{ layer, name, checked, group }];\n\n    let layers = { ...this._layers };\n    layers[group] = currentGroup;\n\n    this._layers = layers;\n  };\n\n  removeLayer(layer) {\n    if (this.props.leaflet.map != null) {\n      this.props.leaflet.map.removeLayer(layer);\n    }\n  }\n  //create and return a leaflet object you want to extend\n  createLeafletElement(props) {\n    // extend control from leaflet\n    const MyControl = Control.extend({\n      // there are only two options we can have here for extending a control\n      // https://leafletjs.com/reference-1.5.0.html#control\n\n      // Should return the container DOM element for the control and add listeners on relevant map events\n      onAdd: map => {\n        this.container = DomUtil.create(\"div\");\n        this.map = map;\n        return this.container;\n      },\n      // this one is optional\n      onRemove: map => {}\n    });\n\n    // return new instance of our control and pass it all the props\n    return new MyControl(props);\n  }\n\n  updateLeafletElement(fromProps, toProps) {\n      \n    super.updateLeafletElement(fromProps, toProps);\n    console.log(fromProps, toProps);\n    // this.forceUpdate();\n  }\n\n  componentDidMount(props) {\n    super.componentDidMount();\n    this.forceUpdate();\n    // render react component\n  }\n\n  toggleLayer = layerInput => {\n    const { layer, name, checked, group } = layerInput;\n    console.log(layer, name, checked, group);\n    let layers = { ...this.state.layers };\n\n    layers[group] = layers[group].map(l => {\n    \n        if (l.name === name) {\n        l.checked = true;//!l.checked;\n        debugger;\n        for (var prop in this.props.leaflet.map._layers) {\n            console.log(this.props.leaflet.map._layers[prop]);\n        \n        }    \n\n        this.props.leaflet.map.addLayer(layer)\n       \n      }else{\n        l.checked = false;\n        \n        //this.removeLayer(layer)\n      }\n\n    //   l.checked? this.props.leaflet.map.addLayer(layer) &&\n    //                 console.log(name, \"adding this layer\")\n    //     : this.removeLayer(layer);\n\n      return l;\n    });\n\n    this.setState({\n      layers\n    });\n  };\n\n  onCollapseClick = name => {\n    const { menus } = this.state;\n\n    menus.includes(name)\n      ? this.setState({\n          menus: [...this.state.menus.filter(x => x !== name)]\n        })\n      : this.setState({\n          menus: [...menus, name]\n        });\n  };\n\n  isMenuOpen = name => {\n    let open = this.state.menus.includes(name);\n    return open;\n  };\n\n  render() {\n    if (!this.leafletElement || !this.leafletElement.getContainer()) {\n      return null;\n    }\n    // console.log(this.state.baseLayers);\n    return (\n      <React.Fragment>\n        {ReactDOM.createPortal(\n          <Paper\n            onMouseEnter={this.openMenu}\n            onMouseLeave={this.closeMenu}\n            {...this.props}\n          >\n            {this.state.menuOpen && (\n              <div style={{ padding: 10 }}>\n                {Object.keys(this.state.layers).map(g => {\n                  return (\n                    <React.Fragment key={g}>\n                      <ListItem\n                        button\n                        onClick={() => this.onCollapseClick(`${g}`)}\n                      >\n                        <ListItemIcon>{icons[g]}</ListItemIcon>\n                        <ListItemText primary={g} />\n                        {this.isMenuOpen(g) ? <ExpandLess /> : <ExpandMore />}\n                      </ListItem>\n                      <Typography />\n                      <Divider />\n                      <Collapse\n                        in={this.isMenuOpen(g)}\n                        timeout=\"auto\"\n                        unmountOnExit\n                      >\n                        <List>\n                          {this.state.layers[g].map(l => {\n                            return (\n                              <ListItem key={l.name}>\n                                <ListItemIcon>\n                                  <Checkbox\n                                    onClick={() => this.toggleLayer(l)}\n                                    edge=\"start\"\n                                    checked={l.checked}\n                                  />\n                                </ListItemIcon>\n                                <ListItemText primary={l.name} />\n                              </ListItem>\n                            );\n                          })}\n                        </List>\n                      </Collapse>\n                    </React.Fragment>\n                  );\n                })}\n              </div>\n            )}\n            {!this.state.menuOpen && (\n              <IconButton>\n                <LayerIcon />\n              </IconButton>\n            )}\n          </Paper>,\n          this.leafletElement.getContainer()\n        )}\n        {Children.map(this.props.children, child => {\n          return child ? cloneElement(child, this.controlProps) : null;\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withLeaflet(LayerControl);\n","/Users/likhitha/Documents/cms/client/src/components/dashboard/SlickSliderStyle1.js",[],"/Users/likhitha/Documents/cms/client/src/reducers/index.js",[],"/Users/likhitha/Documents/cms/client/src/components/dashboard/Tab.js",[],"/Users/likhitha/Documents/cms/client/src/reducers/errorReducer.js",[],"/Users/likhitha/Documents/cms/client/src/reducers/authReducer.js",[],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/index.js",[],["598","599"],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/serviceWorker.js",[],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/App.js",["600","601","602"],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/store.js",[],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/actions/authActions.js",[],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/utils/setAuthToken.js",[],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/auth/Login.js",[],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/Map1.js",["603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636"],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/ModalTemplate.js",["637","638","639","640","641","642","643"],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/auth/Register.js",[],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/FloorMap.js",["644","645","646","647","648","649","650","651","652","653"],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/private-route/PrivateRoute.js",[],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/ViewBuilding.js",["654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719"],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/EditBuilding.js",["720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772"],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/EditFloormap.js",["773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818"],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/layout/Navbar.js",["819"],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/services.js",["820"],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/actions/types.js",[],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/Tabs.js",[],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/DisplayEntries.js",["821","822","823","824","825","826","827","828","829","830","831"],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/history.js",[],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/Dashboard.js",["832","833","834","835","836"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n//import MapView from \"./MapView.js\";\nimport Map1 from \"./Map1.js\";\nimport { Link } from 'react-router-dom';\n//import {MapContainer,  Marker, Popup,  TileLayer } from \"react-leaflet\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Path } from \"leaflet\";\n\n\n//import { useHistory } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  \n  state = {\n    isButtonDisabled: false\n  }\n  \n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n    \n  };\n  \n  \n  render() {\n    const { user } = this.props.auth;\n\n    return (\n      \n      <div >\n        {/* <span className=\"myClass\" style={{float : 'left', paddingRight : '5px'}} > </span> */}\n        {/* style=\"font-size: 20px; color:#4a54f1; text-align:center; padding-top:100px;\" */}\n       \n               \n                {/* <MapView /> */}\n                \n            <div>\n           { user.name !== null && user.name !== undefined ?\n            <div> <p style={{fontSize: '20px', color: 'white'}}> Hi <i><b>{user.name}</b></i></p>\n            <button\n            \n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\"\n                \n              }}\n              onClick={this.onLogoutClick}\n              \n              className=\"btn btn-primary float-left\"\n            >\n              Logout\n            </button>\n            </div>\n            :\n            null\n  }\n  \n           \n            </div>\n          </div>\n        \n        \n    );\n  }\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Dashboard);\n","/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/SlickSliderStyle1.js",[],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/LayerControl2.js",["837","838"],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/reducers/index.js",[],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/components/dashboard/Tab.js",[],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/reducers/errorReducer.js",[],"/Users/likhitha/Documents/Projrctcms_final/cms/client/src/reducers/authReducer.js",[],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/index.js",[],["839","840"],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/App.js",["841","842","843"],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/serviceWorker.js",[],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/store.js",[],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/actions/authActions.js",[],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/utils/setAuthToken.js",[],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/auth/Register.js",[],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/layout/Navbar.js",["844"],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/ModalTemplate.js",["845","846","847","848","849","850","851"],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/auth/Login.js",[],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/FloorMap.js",["852","853","854","855","856","857","858","859","860","861"],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/Map1.js",["862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895"],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/EditBuilding.js",["896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949"],"import React, { useRef, useEffect, useState, useMap } from \"react\";\nimport service from './services';\nimport { EditControl } from \"react-leaflet-draw\";\nimport LayersControl2, { ControlledLayerItem } from \"./LayerControl2\";\n// import \"./assets/leaflet.css\"\n// import \"./assets/leaflet.draw.css\"\nimport {\n  Map, TileLayer, FeatureGroup, useLeaflet, LayersControl, Marker, Polygon,\n  Popup, LayerGroup, Circle, GeoJSON,CircleMarker\n} from \"react-leaflet\";\nimport Control from 'react-leaflet-control';\n\nimport L, { circleMarker, tooltip } from \"leaflet\";\n\nimport { CardBody, Card, Breadcrumb, BreadcrumbItem, ButtonGroup, ButtonToolbar, Form, FormGroup, Label, Input, ModalHeader, Modal, ModalBody, ModalFooter } from 'reactstrap';\n// Material components\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport { set } from \"mongoose\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {v4 as uuidv4} from 'uuid';\n\nlet addFloorCounter = 0;\n\n\nconst useStyles = makeStyles(theme => ({\n  map: ({\n    height: `calc(90vh - 90px)`,\n    width: '60%',\n    zIndex: 0\n  }),\n  buttonWrapper: {\n    zIndex: 1,\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    marginLeft: \"30%\",\n    marginBottom: \"8%\",\n    transform: \"translateX(-50%)\",\n  },\n  headerWrapper: {\n    zIndex: 1,\n    marginLeft: theme.spacing(3),\n    marginTop: theme.spacing(1),\n  }\n}));\n\nconst modalStyles = {\n  width   :    500,\n  height  :    500\n}\n\n\n\n\nconst EditBuilding = (props) => {\n  const editRef = useRef();\n  const [drawing, setDrawing] = useState(false);\n  const [markers, setMarkers] = useState([])\n  const [details, setDetails] = useState('')\n  const [boundary, setBoundary] = useState([]);\n  const [newPosition, setNewPosition] = useState([])\n\n  const [mapLayers, setMapLayers] = useState('');\n  const [customLayer, setCustomLayer] = useState([]);\n\n  const [activeFloorPolygons, setActiveFloorPolygons] = useState([]);\n  const [activeFloorBoundary, setActiveFloorBoundary] = useState([]);\n  const [activeFloor, setActiveFloor] = useState('');\n  const [newDesc, setNewDesc] = useState('');\n  const [isEdit, setIsEdit] = useState('');\n  const [boundaryid, setBoundaryid] = useState(0);\n  const [selectedFloorGeoData, setselectedFloorGeoData] = useState('');\n  const [blockDescription, setBlockDescription] = useState(false);\n  const [draftBlock, setDraftBlock] = useState('');\n \n  // const [addCounter,setAddCounter] = React.useState(0);\n\n\n  //const purpleOptions = { color: 'purple' }\n  const mapRef = useRef();\n  const fgRef = useRef();\n  const refno = window.location.pathname.replace('/ViewBuilding/', '');\n  const leaflet = useLeaflet();\n  const [blockName, setBlockName] = useState('')\n  const [FloorIdx, setFloorIdx] = useState(0)\n  const [buildingCenter, setBuildingCenter] = useState({lat:null,lng:null})\n\n  let FloorId = uuidv4();\n\n  const polygon = [\n\n  ]\n  const center = [51.505, -0.09]\n  const rectangle = [\n    [51.49, -0.08],\n    [51.5, -0.06],\n  ]\n  const [selectedLayerIndex, setSelectedLayerIndex] = useState(0);\n\n  function Boundary() {\n    const detailLcl = details;\n    if (details !== null && details !== undefined && details !== \"\") {\n      if (details.boundaries !== null && details.boundaries !== undefined\n        && details.boundaries !== \"\") {\n        if (details.boundaries.length > 0) {\n            return(<Polygon positions={details.boundaries}></Polygon>);\n        } else {\n          return (<div></div>)\n        }\n      } else {\n        return (<div></div>)\n      }\n\n    } else {\n      return (<div></div>)\n    }\n\n\n\n  }\n  function EditableLayer(props) {\n    const leaflet = useLeaflet();\n    const editLayerRef = React.useRef();\n    let drawControlRef = React.useRef();\n    let { map } = leaflet;\n\n\n    useEffect(() => {\n\n      if (!props.showDrawControl) {\n        map.removeControl(drawControlRef.current);\n      } else {\n        map.addControl(drawControlRef.current);\n      }\n\n      editLayerRef.current.leafletElement.clearLayers();\n\n      editLayerRef.current.leafletElement.addLayer(props.layer);\n      props.layer.on(\"click\", function (e) {\n        props.onLayerClicked(e, drawControlRef.current);\n      });\n    }, [props, map]);\n\n    function onMounted(ctl) {\n      drawControlRef.current = ctl;\n    }\n\n    function onEditPath(e) {\n\n\n      const layerObj = e.layers._layers;\n\n      const layer = layerObj[Object.keys(layerObj)[0]];\n      const center = [layer._bounds.getCenter()];\n      if (layer !== undefined && layer !== null) {\n        const props = layer.feature.properties;\n        if (props.hasOwnProperty('id') && props.hasOwnProperty('ground')) {\n          const polygonId = props.id;\n          const floorIndex = props.ground;\n          let latlngs = layer.getLatLngs();\n          latlngs = latlngs.length > 0 ? latlngs[0] : latlngs;\n          crupdateLayer2ActiveFloor(latlngs, polygonId, floorIndex,center)\n\n        }\n      }\n\n\n\n    }\n    function onPolygonDeleted(e) {\n      console.log(e);\n\n      const {\n        layers: { _layers },\n      } = e;\n\n      Object.values(_layers).map(({ _leaflet_id }) => {\n        //setMapLayers((layers) => layers.filter((l) => l.id !== _leaflet_id));\n      });\n\n    }\n\n  \n  \n    \n   \n    \n    \n\n  \n    function onPolygonCreated(e) {\n      \n      // toggleBlockDescription();\n      debugger;\n\n      //addFloorCounter++;\n     \n      setDraftBlock(e.layer);\n      toggleBlockDescription();\n\n      // if (addFloorCounter === activeFloor.blocks.length) {\n        \n        debugger;\n      //}\n     \n\n    }\n\n    function onDeleted() {\n\n    }\n    \n\n\n    return (\n      <div>\n        <FeatureGroup ref={editLayerRef}>\n          <EditControl\n            position=\"topright\"\n            onMounted={onMounted}\n            onCreated={onPolygonCreated}\n            onEdited={onEditPath}\n            onDeleted={onPolygonDeleted}\n            draw={{\n              polygon: true,\n              circle: false,\n              polyline: false,\n              marker: false,\n              rectangle: false,\n              circlemarker: false\n            }}\n\n\n            {...props}\n          />\n          {/* <Polygon positions={activeFloorBoundary} onClick={handleLayerClick}> </Polygon> */}\n          <Marker \n                      position={[60.21846434365596, 24.811831922452843]}\n                      \n                    >\n                      {/* <renderPopup item={item}></renderPopup> */}\n\n                     \n\n                    </Marker>\n        </FeatureGroup>\n      </div>\n    );\n  }\n\n  function EditableGroup(props) {\n    const [selectedLayerIndex, setSelectedLayerIndex] = useState(0);\n\n    function handleLayerClick(e, drawControl) {\n      setSelectedLayerIndex(e.target.feature.properties.editLayerId);\n    }\n    debugger;\n    let dataLayer = new L.GeoJSON(props.data);\n    let layers = [];\n    let i = 0;\n    dataLayer.eachLayer((layer) => {\n      layer.feature.properties.editLayerId = i;\n     \n      if(layer.feature.properties.name!==undefined){\n      layer.bindTooltip(layer.feature.properties.name, {permanent: true, opacity: 0.7, direction:\"center\"}).openTooltip();\n    }\n      layers.push(layer);\n      \n      i++;\n    });\n\n    return (\n      <div>\n<div>\n\n        {layers.map((layer, i) => {\n          return (\n            <EditableLayer\n              key={i}\n              layer={layer}\n              showDrawControl={i === selectedLayerIndex}\n              onLayerClicked={handleLayerClick}\n            >\n                  \n\n            </EditableLayer>\n          );\n          \n\n        })}\n        \n      </div>\n\n      <div>\n\n\n      </div>\n      </div>\n    );\n  }\n\n\n\n  const updateFloor = {\n    id:FloorIdx.length+1,\n\n    // floorno: markers.length + 1,\n    description: \"newDesc\",\n    color: '#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6),\n    blocks: [],\n    boundaries: []\n  }\n\n  //const [selectedLayerIndex, setSelectedLayerIndex] = useState(0);\n  const [addFloor, setAddFloor] = useState(false);\n\n  const _onFeatureGroupReady = (ref) => {\n    if (ref !== undefined && ref !== null) {\n      let leafletFG = ref.leafletElement;\n      if (customLayer.length > 0) {\n        customLayer.eachLayer(layer => leafletFG.addLayer(layer));\n      }\n    }\n  }\n  const handleDrawPolygonClick = (e) => {\n    const activeFloorLcl = activeFloor;\n    const polygonType = e.target.value;\n\n    switch (polygonType) {\n      case \"BO\":\n\n        break;\n\n      case \"BL\":\n\n        break;\n\n      default:\n        break;\n    }\n    if (activeFloorLcl !== undefined && activeFloorLcl !== null) {\n      if (activeFloorLcl.boundaries.length > 3) {\n        const { layerType, layer } = e;\n        if (layerType === \"polygon\") {\n          const { _leaflet_id } = layer;\n          setMapLayers((layers) => [\n            ...layers,\n            { id: _leaflet_id, latlngs: layer.getLatLngs()[0] },\n\n            // [ id: _leaflet_id, latlng:layer.getLatLngs()[0] ]  ,\n          ]);\n        }\n        //Edit this method to perform other actions\n\n        if (!drawing) {\n          editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.enable()\n        } else {\n          editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.completeShape()\n          editRef.current.leafletElement._toolbars.draw._modes.polygon.handler.disable()\n        }\n\n        setDrawing(!drawing)\n\n      }\n\n    }\n\n\n\n  }\n  //let dataLayer = new L.GeoJSON(props.data);\n\n\n\n  const onShapeDrawn = (e) => {\n\n    setDrawing(false)\n\n    const { layerType, layer } = e;\n    if (layerType === \"polygon\") {\n      const { _leaflet_id } = layer;\n\n    }\n\n    const mar = markers;\n\n    for (var k = 0; k < mar.length; k++) {\n\n      let boundary_id = boundaryid;\n\n      boundary_id = layer._leaflet_id;\n\n\n      setBoundaryid(boundary_id);\n      console.log(boundaryid);\n\n\n\n    }\n\n\n\n\n\n\n\n    // e.layer.on('click', () => {\n    //     \n    //     setDrawing(layer);\n    //     //setSelectedLayerIndex(e.target.boundaryid);\n    //     console.log(selectedLayerIndex);\n    //     \n    //   editRef.current.leafletElement._toolbars.edit._modes.edit.handler.enable()\n    // })\n    e.layer.on('contextmenu', () => {\n      //do some contextmenu action here\n    })\n    e.layer.bindTooltip(\"Text\",\n      {\n        className: 'leaflet-draw-tooltip:before leaflet-draw-tooltip leaflet-draw-tooltip-visible',\n        sticky: true,\n        direction: 'right'\n      }\n    );\n  }\n  function handleLayerClick(e, drawControl) {\n\n\n    const { layerType, layer } = e;\n    if (layerType === \"polygon\") {\n      const { _leaflet_id } = layer;\n\n    }\n\n    let drawingLcl = drawing;\n    drawingLcl = layer;\n    setDrawing(drawingLcl);\n    //   setSelectedLayerIndex(e.target.boundaryid);\n    //     console.log(selectedLayerIndex);\n\n\n\n\n\n\n    //editRef.current.leafletElement._toolbars.edit._modes.edit.handler.enable()\n\n  }\n\n  //   e.layer.on('click', () => {\n  //     \n  //     setSelectedLayerIndex(e.target.boundaryid);\n  //     console.log(selectedLayerIndex);\n  //     \n  //   editRef.current.leafletElement._toolbars.edit._modes.edit.handler.enable()\n  // })\n  function crupdateLayer2ActiveFloor(latlngs, polygonId, floorIndex,center) {\n  \n    let coordinates = []\n    for (let latlngsIdx = 0; latlngsIdx < latlngs.length; latlngsIdx++) {\n\n      const latlng = latlngs[latlngsIdx];\n      let coor1 = []\n      const lat = latlng.hasOwnProperty('lat') ? latlng.lat : false;\n      const lng = latlng.hasOwnProperty('lng') ? latlng.lng : false;\n\n      if (!(lat === false || lng === false)) {\n\n        coor1.push(lat);\n        coor1.push(lng);\n        coordinates.push(coor1);\n\n      }\n    }\n    debugger;\n    let activeFloor4crup = activeFloor;\n    if (polygonId === null) {\n      toggleBlockDescription();\n      //console.log(blockName);\n      debugger;\n      \n\n      //  toggleBlockDescription()\n      //ask description\n      //const blName = blockName;\n\n      activeFloor4crup.blocks.push({  blockId: new Date().getTime().toString(), text: blockName, bounds: coordinates,centre: center });\n      debugger;\n\n    } else {\n      for (let flindex = 0; flindex < activeFloor4crup.blocks.length; flindex++) {\n        const block = activeFloor4crup.blocks[flindex];\n        if (block.blockId === polygonId) {\n\n          activeFloor4crup.blocks[flindex].bounds = coordinates\n          // toggleBlockDescription()\n        }\n\n      }\n    }\n    updateBuildingFromActiveFloor(floorIndex)\n\n\n  }\n  function updateBuildingFromActiveFloor(floorIndex) {\n\n    let detailsLocal = details;\n    let markerLcl = markers;\n    if (markerLcl !== undefined && markerLcl !== null) {\n      if (markers.length >= 1 && floorIndex >= 0) {\n        markerLcl[floorIndex] = activeFloor;\n        detailsLocal.floors = markerLcl;\n        setDetails(detailsLocal);\n      }\n    }\n\n  }\n  function reverseCoordinate(coor) {\n    let retCoor = [];\n    if (coor !== undefined && coor !== null) {\n      if (coor.length > 0) {\n        for (let coorIdx = 0; coorIdx < coor.length; coorIdx++) {\n          const bound = coor[coorIdx];\n          let row = [];\n          if (bound.length === 2) {\n            row.push(bound[1]);\n            row.push(bound[0]);\n            retCoor.push(row);\n          }\n        }\n\n      }\n    }\n    return retCoor;\n  }\n\n\n  const ondetailChange = (e) => {\n    debugger;\n    let detailLcl = details;\n    const value = e.target.value;\n    const property = e.target.getAttribute('property');\n    if (property !== undefined && property !== null && property !== '') {\n      detailLcl[property] = value;\n      setDetails(detailLcl);\n\n\n    }\n\n\n  }\n  const handleSaveFloor = (e, polygonId) => {\n    debugger;\n    let detailsLocal = details;\n    const markersLocal = markers;\n    details.floors = markersLocal\n\n    service\n      .updateBuilding(details.id, details)\n      window.location.reload();\n\n  }\n  \n  \n  function block2Layer(iBlock, floorIndex, floorColor) {\n\n\n    return {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"id\": iBlock.blockId,\n        \"text\": blockName,\n        \"ground\": floorIndex,\n\n      },\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"color\": floorColor,\n        \"coordinates\": [reverseCoordinate(iBlock.bounds)]\n      }\n    }\n\n\n\n  }\n\n  \n\n  function toggleBlockDescription () {\n    setBlockDescription(!blockDescription)\n  }\n  const onChangeIndex = e => {\n    e.preventDefault();\n    setFloorIdx(e.target.value);\n    \n  };\n  const onChangeName = e => {\n    e.preventDefault();\n    setBlockName(e.target.value);\n    \n  };\n\n  function onFloorSelect(e, data) {\n    debugger;\n   \n    const index = e.target.value;\n    let selectedFloorPolygonLayers = [];\n    let activeFloorSel = markers[index];\n    const floorColor = '#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6);\n\n    for (let blockIdx = 0; blockIdx < activeFloorSel.blocks.length; blockIdx++) {\n      const blockPolygon = activeFloorSel.blocks[blockIdx];\n      //const center = [activeFloorSel.blocks.bounds.getCenter()];\n     \n      const geoJsonObj = block2Layer(blockPolygon, index, floorColor);\n     \n  \n      // blockPolygon.push({centre: center});\n      selectedFloorPolygonLayers.push(geoJsonObj);\n      if(blockPolygon.centre!==undefined){\n        \n        // label = String(feature.properties.name) \n        let pointLayer = { \"type\": \"Feature\", \"properties\": { \"name\": blockPolygon.text  }, \n        \"geometry\": { \"type\": \"Point\", \n        \"coordinates\": [blockPolygon.centre[0].lng ,blockPolygon.centre[0].lat  ] } ,\n        \n        \n      };\n     \n        selectedFloorPolygonLayers.push(pointLayer)\n        \n        \n      }\n      \n      // create layer for marker \n\n    }\n    // var data_points = {\n    //   \"type\": \"FeatureCollection\",\n    //   \"name\": \"test-points-short-named\",\n    //   \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\n    //   \"features\": [\n    //   { \"type\": \"Feature\", \"properties\": { \"name\": \"1\" }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ -135.02507178240552, 60.672508785052223 ] } },\n    //   { \"type\": \"Feature\", \"properties\": { \"name\": \"6\"}, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ -135.02480935075292, 60.672888247036376 ] } },\n    //   { \"type\": \"Feature\", \"properties\": { \"name\": \"12\"}, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ -135.02449372349508, 60.672615176262731 ] } },\n    //   { \"type\": \"Feature\", \"properties\": { \"name\": \"25\"}, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ -135.0240752514004, 60.673313811878423 ] } }\n    //   ]};\n    // var pointLayer = L.geoJSON(null, {\n    //   pointToLayer: function(feature,latlng){\n    //     label = String(feature.properties.name) // Must convert to string, .bindTooltip can't use straight 'feature.properties.attribute'\n    //     return new L.CircleMarker(latlng, {\n    //       radius: 1,\n    //     }).bindTooltip(label, {permanent: true, opacity: 0.7}).openTooltip();\n    //     }\n    //   });\n\n    // pointLayer.addData(data_points);\n    const featureCollection = {\n      \"type\": \"FeatureCollection\",\n      \"name\": \"\",\n      \"crs\": {\n        \"type\": \"name\",\n        \"properties\": {\n          \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\"\n        }\n      },\n      \"features\": selectedFloorPolygonLayers\n    };\n    // const floorLayers = new L.GeoJSON(featureCollection);\n\n\n    // setActiveFloorPolygons(floorLayers.getLayers());\n    setselectedFloorGeoData(featureCollection);\n    setActiveFloorBoundary(activeFloorSel.boundaries);\n    setActiveFloor(activeFloorSel);\n    \n\n  }\n\n\n\n  const addressCardStyle = {\n    backgroundImage: `url(${require('./33.png')})`,\n\n    backgroundSize: 'cover',\n\n    height: \"423px\",\n\n  }\n\n  let floor = {};\n  useEffect(() => {\n \n\n    var refTemp = refno.replace(\"/EditBuilding/\", \"\");\n    service\n      .getBuilding(refTemp)\n      .then(selBuilding => {\n        console.log(\"returning\", selBuilding)\n\n        setMarkers(selBuilding[0].floors);\n        if (selBuilding[0].floors.length > 0) {\n          setActiveFloor(selBuilding[0].floors[0]);\n        } else {\n          setActiveFloor(\n            {\n              \"id\":FloorId,\n              // \"floorno\": \"1\",\n              \"description\": \"\",\n              \"color\": \"#f18d00\",\n              \"blocks\": []\n            }\n\n          );\n        }\n\n\n\n        setDetails(selBuilding[0]);\n        \n       \n        \n        const buildingLatLng = {\n          lat: selBuilding[0].latitude,\n          lng: selBuilding[0].longitude,\n        }\n        setBuildingCenter(buildingLatLng)\n      console.log(buildingCenter)\n\n        //mapRef.current.leafletElement.flyTo([selBuilding[0].latitude, selBuilding[0].longitude], 16)\n\n        // setBoundary(selBuilding[0].boundary.geometry.coordinates[0]);\n\n        let ml = mapLayers;\n\n\n\n\n      })\n\n  }, [])\n\n  function toggle() {\n    setAddFloor(!addFloor);\n  }\n  \n\n  const moveActiveFloor = () => {\n    const markersLcl = markers;\n\n    if (activeFloor !== undefined && activeFloor !== null) {\n      for (let i = 0; i < markersLcl.length; i++) {\n\n        if (activeFloor.id === markersLcl[i].id) {\n          markersLcl[i].description = activeFloor.description;\n          markersLcl[i].blocks = activeFloor.blocks;\n          markersLcl[i].boundaries = activeFloor.boundaries;\n\n        }\n      }\n      setMarkers(markersLcl);\n    }\n\n  }\n  const _onCreate = (e) => {\n    console.log(e);\n\n    const { layerType, layer } = e;\n    if (layerType === \"polygon\") {\n      const { _leaflet_id } = layer;\n\n      setMapLayers((layers) => [\n        ...layers,\n        { id: _leaflet_id, latlngs: layer.getLatLngs()[0] },\n      ]);\n    }\n  };\n\n\n  const _onEdited = (e) => {\n\n    // console.log(e);\n    // const {\n    //   layers: { _layers },\n    // } = e;\n\n    // Object.values(_layers).map(({ _leaflet_id, editing }) => {\n    //   setMapLayers((layers) =>\n    //     layers.map((l) =>\n    //       l.id === _leaflet_id\n    //         ? { ...l, latlngs: { ...editing.latlngs[0] } }\n    //         : l\n    //     )\n    //   );\n    // });\n  };\n\n  const _onDeleted = (e) => {\n    console.log(e);\n    const {\n      layers: { _layers },\n    } = e;\n\n    Object.values(_layers).map(({ _leaflet_id }) => {\n      setMapLayers((layers) => layers.filter((l) => l.id !== _leaflet_id));\n    });\n  };\n\n  // const deleteBuildingConfirm = (e) => {\n\n  //   debugger;\n  //   const bid = delBuildingId;\n  //   service.deletion(bid);\n  //   window.location.reload();\n\n\n  // }\n\n  const deleteActiveFloor = () => {\n    debugger;\n    const activeFloorLocal = activeFloor;\n    const markersL = markers;\n    const markersAfterDeletion = [];\n    for (let j = 0; j < markersL.length; j++) {\n      const marker = markersL[j];\n      if (marker.id !== activeFloorLocal.id) {\n        markersAfterDeletion.push(marker);\n        \n      }\n\n    }\n\n    setMarkers(markersAfterDeletion);\n    // setActiveFloorPolygons(markersAfterDeletion[0].blocks);\n    // setActiveFloorBoundary(markersAfterDeletion[0].boundaries);\n    // setActiveFloor(markersAfterDeletion[0]);\n    // for (let y = 0; y < markersAfterDeletion.length; y++) {\n    if (markersAfterDeletion.length > 0) {\n      setActiveFloor(markersAfterDeletion);\n    } else {\n      setActiveFloor(\n        {\n          \"id\": FloorId,\n          // \"floorno\": \"1\",\n          \"description\": \"\",\n          \"color\": \"#f18d00\",\n          \"blocks\": []\n        }\n\n      );\n    }\n  //}\n  }\n\n  const createBlockWithDesc = () => {\n    \n    const draftBlockLocal = draftBlock;\n    const markersL1 =markers;\n    let floorIndex = null;\n    debugger;\n    for (var x=0; x<markersL1.length; x++){\n      if (activeFloor.id === markersL1[x].id){\n        floorIndex = x;\n        break;\n      }\n    }\n    \n    let latlngs =draftBlockLocal.getLatLngs();\n    let center = [draftBlockLocal._bounds.getCenter()];\n         latlngs = latlngs.length > 0 ? latlngs[0] : latlngs;\n      \n      \n       \n       debugger;\n        crupdateLayer2ActiveFloor(latlngs, null, floorIndex,center)\n\n        \n        \n        updateBuildingFromActiveFloor()\n\n    debugger;\n  }\n\n\n  const handleAddFloor = () => {\n    debugger;\n\n    const newFloor = {\n\"id\":FloorId,\n      // \"floorno\": markers.length + 1,\n      \"description\": newDesc,\n      \"color\": \"#f18d00\",\n      \"blocks\": [[0,0],[0,0],[0,0]]\n     \n    }\n    setActiveFloor(newFloor);\n    setActiveFloorBoundary(newFloor.boundaries);\n    setActiveFloorPolygons(newFloor.blocks);\n    const markersLocal = markers;\n    markersLocal.splice(FloorIdx-1, 0, newFloor )\n  //  markersLocal.push(newFloor);\n    setMarkers(markersLocal);\n\n    setNewDesc(\"\");\n    handleSaveFloor();\n    //window.location.reload();\n  }\n\n\n  const changeHandlerDesc = (event) => setNewDesc(event.target.value);\n  const updateIsEdit = (e, value) => setIsEdit(value);\n\n\n\n  const handleEditPolygonClick = (e) => {\n    const drawingLocal = drawing;\n\n\n  }\n  \n\n\n\n  return (\n    <div>\n      <div class=\"row\">\n        <Breadcrumb class=\"mb-4\">\n          <BreadcrumbItem><a href=\"/map1\"><i\n            className=\"ri-home-4-line mr-1 float-left\" />Home</a></BreadcrumbItem>\n          <BreadcrumbItem active>{details.name}</BreadcrumbItem>\n        </Breadcrumb>\n\n      </div>\n\n      <Card className=\"iq-card\">\n          <CardBody className=\"iq-card-body\">\n\n      <div>\n        \n\n\n\n        <div className=\"row\" style={{ margin: \".6%\" }}>\n\n          <div className=\"col-lg-4\">\n            <div className=\"iq-card iq-card-block iq-card-stretch iq-card-height bg-transparent\">\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                <Input type=\"text\" className=\"form-control\"\n                  defaultValue={details.id} disabled />\n              </FormGroup>\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Building Name</Label>\n                <Input type=\"text\" className=\"form-control\"\n                  defaultValue={details.name} property=\"name\" onChange={ondetailChange} />\n              </FormGroup>\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Street</Label>\n                <Input type=\"text\" className=\"form-control\"\n                  defaultValue={details.street} property=\"street\" onChange={ondetailChange} />\n              </FormGroup>\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Apartment</Label>\n                <Input type=\"text\" className=\"form-control\" property=\"Apartment\" onChange={ondetailChange}\n                  defaultValue={details.Apartment} />\n              </FormGroup>\n\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Doornum</Label>\n                <Input type=\"text\" className=\"form-control\" property=\"doornum\" onChange={ondetailChange}\n                  defaultValue={details.doornum} />\n              </FormGroup>\n\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Region</Label>\n                <Input type=\"text\" className=\"form-control\" property=\"region\" onChange={ondetailChange}\n                  defaultValue={details.region} />\n              </FormGroup>\n\n              <FormGroup className=\"form-group\">\n                <Label htmlFor=\"exampleInputReadonly\">Country</Label>\n                <Input type=\"text\" className=\"form-control\" property=\"country\" onChange={ondetailChange}\n                  defaultValue={details.country} />\n\n              </FormGroup>\n\n              <Button className=\"btn btn-primary\"\n                style={{ \"font-size\": \"1.0rem\", \"margin-left\": \".05rem\", \"margin-right\": \".05rem\" }} color=\"primary\" onClick={handleSaveFloor}> SaveBuilding </Button>\n\n            </div>\n          </div>\n\n\n          <div className=\"col-lg-8\">\n            <div className=\"iq-card overflow-hidden\">\n              <h1 className=\"display-4\">{activeFloor.description}</h1>\n\n              <div id=\"home-chart-02\">\n              {buildingCenter.lat && buildingCenter.lng && <Map center={buildingCenter} zoom={16} ref={mapRef} >\n                {/* <Map center={[details.latitude, details.longitude]} zoom={19} ref={mapRef} > */}\n                  <Control position=\"topright\">\n                    {/* <button class=\"primary\" onClick={handleDrawPolygonClick} value=\"BO\"\n                    style={{ \"font-size\": \"1.5rem\", \"margin-left\": \".05rem\" ,\"margin-right\": \".05rem\" }}>\n                    Add Floor\n                        </button> */}\n\n\n\n                    <Button className=\"btn btn-primary\" color=\"primary\" onClick={() => toggle(\"addFloor\")}> AddFloor </Button>{' '}\n\n\n                    <Modal isOpen={addFloor} toggle={() => toggle(\"addFloor\")} className=\"modal-sm\">\n                      <ModalHeader className=\"btn btn-primary\" toggle={() => toggle(\"addFloor\")}>Add Floor</ModalHeader>\n                      <ModalBody>\n\n\n                        {/* <p>Floor: {markers.length + 1}</p> */}\n                        <p>Index:</p> <input\n            onChange={onChangeIndex}\n            value={FloorIdx}\n            type=\"number\"\n          \n          />\n\n                        <p>Enter Floor Description</p>\n                        <input type=\"text\" onChange={changeHandlerDesc} value={newDesc}\n                          lur={updateIsEdit} />\n\n                      </ModalBody>\n                      <ModalFooter>\n\n                        <Button color=\"btn btn-primary\" onClick={() => {\n                          toggle(\"addFloor\");\n                          // handleAddFloor(); \n                          handleAddFloor();\n\n                        }}>OK</Button>{' '}\n                        <Button color=\"btn btn-primary\" onClick={() => toggle(\"addFloor\")}>Cancel</Button>\n                      </ModalFooter>\n                    </Modal>\n\n                    <Button class=\"btn btn-primary\" color=\"primary\" onClick={deleteActiveFloor} value=\"BO\"\n                    >\n                      Delete Floor\n                        </Button>\n                    {/* <button class=\"btn btn-primary\" onClick={handleDrawPolygonClick} value=\"BO\"\n                    style={{ \"font-size\": \"1.0rem\", \"margin-left\": \".05rem\", \"margin-right\": \".05rem\" }}>\n                    Manage Boundary\n                        </button> */}\n\n                    {/* <button class=\"btn btn-primary\" onClick={handleDrawPolygonClick} value=\"BL\"\n                      style={{ \"font-size\": \"1.0rem\", \"margin-left\": \".05rem\" }}>\n                      AddBlock\n                        </button> */}\n                    {/* \n                  <button class=\"btn btn-primary\" onClick={handleEditPolygonClick}\n                    style={{ \"font-size\": \"1.0rem\", \"margin-left\": \".05rem\" }}>\n                    EditBlock\n                        </button> */}\n                  </Control>\n                  <LayersControl position=\"topright\">\n                    <LayersControl.BaseLayer\n                      checked={false}\n                      name=\"Esri WorldImagery\"\n                      group=\"BaseLayers\"\n                    >\n                      <TileLayer\n                        url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}.png\"\n                        attribution='&copy; <a href=\"Esri &mdash\">Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community</a> contributors'\n                      />\n                    </LayersControl.BaseLayer >\n                    <LayersControl.BaseLayer\n                      checked={true}\n                      name=\"OpenStreetMap\"\n                      group=\"BaseLayers\"\n                    >\n                      <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                      />\n                    </LayersControl.BaseLayer >\n\n                  </LayersControl>\n\n                  <EditableGroup data={selectedFloorGeoData} >\n                    {/* {\n                      markers.map((marker, ind) => (\n                        marker.blocks.map((block, ind) => (\n\n                        <Marker position={block.centre}>\n\n                       \n           <Tooltip permanent direction=\"center\"> {block.text}</Tooltip> </Marker>\n\n)) ))\n                    } */}\n                  \n                  {/* <Tooltip\n                            style={{fontSize:\"20px\"}}\n                         title=   {<h3 style={{ color: \"lightblue\" }}>{mLr.description}</h3>}\n       \n        placement=\"left\"\n      >\n      </Tooltip> */}\n\n                  </EditableGroup>\n\n                  <div>\n                  <Modal isOpen={blockDescription} toggle={() => toggleBlockDescription(\"blockDescription\")} className=\"modal-sm\" style={modalStyles}>\n                  \n                  <ModalHeader className=\"btn btn-primary\" toggle={() => toggleBlockDescription(\"blockDescription\")}>Enter the block details</ModalHeader>\n                  <ModalBody>\n                  <Card className=\"iq-card\">\n              <CardBody className=\"iq-card-body\">\n              <form>\n             \n             \n                    Name: <input\n            onChange={onChangeName}\n            value={blockName}\n            type=\"text\"\n          \n          /><br/>\n                    {/* Description: <input\n            onChange={onChangeDesc}\n            value={blockDesc}\n            type=\"text\"\n          \n          /><br/>\n                    icon: <input\n            onChange={onChangeIcon}\n            value={icon}\n            type=\"url\"\n          \n          /><br/> */}\n                    </form>\n                   \n                    </CardBody>\n                    </Card>\n  \n                  </ModalBody>\n                  <ModalFooter>\n                 {/* <Button color=\"primary\" >submit</Button>  */}\n                  <Button color=\"secondary\" onClick={createBlockWithDesc}>Ok</Button>\n                  </ModalFooter>\n                  \n                  \n                  </Modal>\n                  </div>\n\n\n                  {/* <FeatureGroup>\n                  \n                  {activeFloorPolygons.map((polygonObjLayer,polyIdx)=>(\n                      <div>\n                      <EditControl\n                      layer={polygonObjLayer}\n                      position='topleft'\n                      onCreated={onShapeDrawn}\n                      onEdited = {_onEdited}\n                      onDeleted = {_onDeleted}\n                      \n                      \n                      \n                      //here you can specify your shape options and which handler you want to enable\n                      draw={{\n                        rectangle: false,\n                        polygon: true,\n                        circle: false,\n                        polyline: false,\n                        circlemarker: false,\n                        marker: false\n  \n                      }}\n\n                    >\n  \n  \n  \n  \n                    </EditControl>\n\n                    <Polygon positions={polygonObj.bounds} ></Polygon>\n                    </div>\n                    \n                  ))}*/}\n                  {/* <Polygon positions={activeFloorBoundary} onClick={handleLayerClick}> </Polygon> */}\n\n\n\n                  {/* </FeatureGroup>  */}\n                  {/* import React from \"react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport { Button, Popup } from \"semantic-ui-react\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Popup\n        trigger={<Button>Register</Button>}\n        position=\"top center\"\n      >\n        Tooltip for the register button\n      </Popup>\n    </div>\n  );\n} */}\n\n\n                  <Control position=\"topright\" >\n                    <div>\n                      {\n                        markers.map((mLr, didx) => (\n\n\n\n                          <div>\n                            {/* <Tooltip\n                            style={{fontSize:\"20px\"}}\n                         title=   {<h3 style={{ color: \"lightblue\" }}>{mLr.description}</h3>}\n       \n        placement=\"left\"\n      > */}\n\n                            <button variant=\"contained\" class=\"primary\" value={didx} onClick={onFloorSelect} style={{ \"font-size\": \"1.5rem\", \"margin-left\": \".05rem\" }}>\n                              {mLr.description}\n                            </button>\n                            {/* </Tooltip> */}\n                            {/* <ReactTooltip id=\"registerTip\" place=\"top\" effect=\"solid\">\n        {mLr.description}\n      </ReactTooltip> */}\n\n\n                          </div>\n                        ))\n\n                      }\n\n                    </div>\n                  </Control>\n                  {/* {if(details!==undefined&&details.boundaries.length>0)\n                    <Polygon positions={details.boundaries} ></Polygon>\n                  } */}\n\n                  <Boundary></Boundary>\n\n\n                </Map>}\n              </div>\n            </div>\n          </div>\n          \n        </div>\n        \n\n\n\n\n      </div>\n      \n      </CardBody>\n      </Card>\n      \n    </div>\n  )\n}\n\n\nexport default EditBuilding;","/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/ViewBuilding.js",["950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015"],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/private-route/PrivateRoute.js",[],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/EditFloormap.js",["1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061"],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/services.js",["1062"],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/actions/types.js",[],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/history.js",[],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/Dashboard.js",["1063","1064","1065","1066","1067"],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/SlickSliderStyle1.js",[],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/DisplayEntries.js",["1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078"],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/Tabs.js",[],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/LayerControl2.js",["1079","1080"],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/reducers/index.js",[],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/Tab.js",[],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/reducers/errorReducer.js",[],"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/reducers/authReducer.js",[],{"ruleId":"1081","replacedBy":"1082"},{"ruleId":"1083","replacedBy":"1084"},{"ruleId":"1085","severity":1,"message":"1086","line":3,"column":10,"nodeType":"1087","messageId":"1088","endLine":3,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1089","line":29,"column":8,"nodeType":"1087","messageId":"1088","endLine":29,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1091","line":53,"column":3,"nodeType":"1092","messageId":"1093","endLine":55,"endColumn":4},{"ruleId":"1085","severity":1,"message":"1094","line":3,"column":21,"nodeType":"1087","messageId":"1088","endLine":3,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1095","line":3,"column":44,"nodeType":"1087","messageId":"1088","endLine":3,"endColumn":53},{"ruleId":"1085","severity":1,"message":"1096","line":6,"column":8,"nodeType":"1087","messageId":"1088","endLine":6,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1097","line":11,"column":26,"nodeType":"1087","messageId":"1088","endLine":11,"endColumn":35},{"ruleId":"1085","severity":1,"message":"1098","line":17,"column":8,"nodeType":"1087","messageId":"1088","endLine":17,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1099","line":18,"column":8,"nodeType":"1087","messageId":"1088","endLine":18,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1100","line":19,"column":8,"nodeType":"1087","messageId":"1088","endLine":19,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1101","line":21,"column":10,"nodeType":"1087","messageId":"1088","endLine":21,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1102","line":21,"column":16,"nodeType":"1087","messageId":"1088","endLine":21,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1103","line":22,"column":10,"nodeType":"1087","messageId":"1088","endLine":22,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1104","line":24,"column":8,"nodeType":"1087","messageId":"1088","endLine":24,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1105","line":66,"column":33,"nodeType":"1087","messageId":"1088","endLine":66,"endColumn":57},{"ruleId":"1085","severity":1,"message":"1106","line":70,"column":10,"nodeType":"1087","messageId":"1088","endLine":70,"endColumn":19},{"ruleId":"1085","severity":1,"message":"1107","line":71,"column":9,"nodeType":"1087","messageId":"1088","endLine":71,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1108","line":82,"column":9,"nodeType":"1087","messageId":"1088","endLine":82,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1109","line":84,"column":9,"nodeType":"1087","messageId":"1088","endLine":84,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1110","line":91,"column":9,"nodeType":"1087","messageId":"1088","endLine":91,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1111","line":130,"column":17,"nodeType":"1087","messageId":"1088","endLine":130,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1112","line":168,"column":10,"nodeType":"1087","messageId":"1088","endLine":168,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1113","line":186,"column":10,"nodeType":"1087","messageId":"1088","endLine":186,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1114","line":229,"column":10,"nodeType":"1087","messageId":"1088","endLine":229,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1115","line":341,"column":9,"nodeType":"1087","messageId":"1088","endLine":341,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1116","line":349,"column":9,"nodeType":"1087","messageId":"1088","endLine":349,"endColumn":21},{"ruleId":"1117","severity":1,"message":"1118","line":379,"column":6,"nodeType":"1119","endLine":379,"endColumn":18,"suggestions":"1120"},{"ruleId":"1085","severity":1,"message":"1121","line":389,"column":7,"nodeType":"1087","messageId":"1088","endLine":389,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1122","line":407,"column":9,"nodeType":"1087","messageId":"1088","endLine":407,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1123","line":422,"column":9,"nodeType":"1087","messageId":"1088","endLine":422,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1124","line":442,"column":9,"nodeType":"1087","messageId":"1088","endLine":442,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1125","line":453,"column":9,"nodeType":"1087","messageId":"1088","endLine":453,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1126","line":460,"column":9,"nodeType":"1087","messageId":"1088","endLine":460,"endColumn":25},{"ruleId":"1085","severity":1,"message":"1127","line":464,"column":9,"nodeType":"1087","messageId":"1088","endLine":464,"endColumn":18},{"ruleId":"1128","severity":1,"message":"1129","line":485,"column":59,"nodeType":"1130","messageId":"1131","endLine":485,"endColumn":61},{"ruleId":"1132","severity":1,"message":"1133","line":738,"column":37,"nodeType":"1134","endLine":738,"endColumn":94},{"ruleId":"1132","severity":1,"message":"1133","line":742,"column":37,"nodeType":"1134","endLine":743,"endColumn":72},{"ruleId":"1085","severity":1,"message":"1135","line":4,"column":25,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":36},{"ruleId":"1085","severity":1,"message":"1136","line":4,"column":38,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":44},{"ruleId":"1085","severity":1,"message":"1137","line":4,"column":45,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":58},{"ruleId":"1085","severity":1,"message":"1138","line":4,"column":60,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":65},{"ruleId":"1085","severity":1,"message":"1139","line":7,"column":10,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1097","line":7,"column":35,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":44},{"ruleId":"1085","severity":1,"message":"1140","line":9,"column":8,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1141","line":10,"column":10,"nodeType":"1087","messageId":"1088","endLine":10,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1142","line":11,"column":8,"nodeType":"1087","messageId":"1088","endLine":11,"endColumn":25},{"ruleId":"1085","severity":1,"message":"1124","line":34,"column":12,"nodeType":"1087","messageId":"1088","endLine":34,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1143","line":2,"column":10,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":13},{"ruleId":"1085","severity":1,"message":"1144","line":2,"column":15,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1145","line":2,"column":20,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1146","line":2,"column":26,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1095","line":2,"column":31,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":40},{"ruleId":"1085","severity":1,"message":"1147","line":2,"column":42,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":50},{"ruleId":"1085","severity":1,"message":"1148","line":2,"column":52,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":72},{"ruleId":"1085","severity":1,"message":"1149","line":1,"column":46,"nodeType":"1087","messageId":"1088","endLine":1,"endColumn":52},{"ruleId":"1085","severity":1,"message":"1150","line":4,"column":8,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1151","line":4,"column":26,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":45},{"ruleId":"1085","severity":1,"message":"1152","line":8,"column":60,"nodeType":"1087","messageId":"1088","endLine":8,"endColumn":66},{"ruleId":"1085","severity":1,"message":"1153","line":9,"column":3,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":8},{"ruleId":"1085","severity":1,"message":"1154","line":9,"column":10,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1155","line":9,"column":22,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1156","line":9,"column":30,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1135","line":15,"column":53,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":64},{"ruleId":"1085","severity":1,"message":"1137","line":15,"column":66,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":79},{"ruleId":"1085","severity":1,"message":"1157","line":15,"column":81,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":85},{"ruleId":"1085","severity":1,"message":"1158","line":15,"column":87,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":96},{"ruleId":"1085","severity":1,"message":"1138","line":15,"column":98,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":103},{"ruleId":"1085","severity":1,"message":"1159","line":15,"column":105,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":110},{"ruleId":"1085","severity":1,"message":"1160","line":15,"column":112,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":123},{"ruleId":"1085","severity":1,"message":"1161","line":15,"column":125,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":130},{"ruleId":"1085","severity":1,"message":"1162","line":15,"column":132,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":141},{"ruleId":"1085","severity":1,"message":"1163","line":15,"column":143,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":154},{"ruleId":"1085","severity":1,"message":"1136","line":17,"column":22,"nodeType":"1087","messageId":"1088","endLine":17,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1164","line":18,"column":10,"nodeType":"1087","messageId":"1088","endLine":18,"endColumn":13},{"ruleId":"1085","severity":1,"message":"1139","line":19,"column":8,"nodeType":"1087","messageId":"1088","endLine":19,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1165","line":20,"column":8,"nodeType":"1087","messageId":"1088","endLine":20,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1166","line":24,"column":7,"nodeType":"1087","messageId":"1088","endLine":24,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1167","line":86,"column":10,"nodeType":"1087","messageId":"1088","endLine":86,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1168","line":125,"column":10,"nodeType":"1087","messageId":"1088","endLine":125,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1169","line":125,"column":20,"nodeType":"1087","messageId":"1088","endLine":125,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1170","line":126,"column":10,"nodeType":"1087","messageId":"1088","endLine":126,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1171","line":126,"column":23,"nodeType":"1087","messageId":"1088","endLine":126,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1172","line":129,"column":23,"nodeType":"1087","messageId":"1088","endLine":129,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1173","line":131,"column":10,"nodeType":"1087","messageId":"1088","endLine":131,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1174","line":132,"column":10,"nodeType":"1087","messageId":"1088","endLine":132,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1175","line":135,"column":10,"nodeType":"1087","messageId":"1088","endLine":135,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1176","line":142,"column":9,"nodeType":"1087","messageId":"1088","endLine":142,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1177","line":144,"column":9,"nodeType":"1087","messageId":"1088","endLine":144,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1178","line":150,"column":9,"nodeType":"1087","messageId":"1088","endLine":150,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1179","line":153,"column":9,"nodeType":"1087","messageId":"1088","endLine":153,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1180","line":154,"column":9,"nodeType":"1087","messageId":"1088","endLine":154,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1167","line":158,"column":10,"nodeType":"1087","messageId":"1088","endLine":158,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1181","line":158,"column":30,"nodeType":"1087","messageId":"1088","endLine":158,"endColumn":51},{"ruleId":"1085","severity":1,"message":"1182","line":164,"column":9,"nodeType":"1087","messageId":"1088","endLine":164,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1183","line":176,"column":9,"nodeType":"1087","messageId":"1088","endLine":176,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1184","line":184,"column":9,"nodeType":"1087","messageId":"1088","endLine":184,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1185","line":234,"column":9,"nodeType":"1087","messageId":"1088","endLine":234,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1111","line":239,"column":15,"nodeType":"1087","messageId":"1088","endLine":239,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1186","line":285,"column":12,"nodeType":"1087","messageId":"1088","endLine":285,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1111","line":290,"column":15,"nodeType":"1087","messageId":"1088","endLine":290,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1187","line":317,"column":12,"nodeType":"1087","messageId":"1088","endLine":317,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1188","line":320,"column":12,"nodeType":"1087","messageId":"1088","endLine":320,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1189","line":324,"column":12,"nodeType":"1087","messageId":"1088","endLine":324,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1190","line":427,"column":7,"nodeType":"1087","messageId":"1088","endLine":427,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1191","line":467,"column":13,"nodeType":"1087","messageId":"1088","endLine":467,"endColumn":15},{"ruleId":"1117","severity":1,"message":"1192","line":474,"column":6,"nodeType":"1119","endLine":474,"endColumn":8,"suggestions":"1193"},{"ruleId":"1085","severity":1,"message":"1194","line":476,"column":12,"nodeType":"1087","messageId":"1088","endLine":476,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1195","line":480,"column":9,"nodeType":"1087","messageId":"1088","endLine":480,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1127","line":497,"column":9,"nodeType":"1087","messageId":"1088","endLine":497,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1196","line":512,"column":11,"nodeType":"1087","messageId":"1088","endLine":512,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1197","line":533,"column":9,"nodeType":"1087","messageId":"1088","endLine":533,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1198","line":551,"column":9,"nodeType":"1087","messageId":"1088","endLine":551,"endColumn":19},{"ruleId":"1128","severity":1,"message":"1129","line":557,"column":50,"nodeType":"1130","messageId":"1131","endLine":557,"endColumn":52},{"ruleId":"1085","severity":1,"message":"1199","line":562,"column":9,"nodeType":"1087","messageId":"1088","endLine":562,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1200","line":582,"column":9,"nodeType":"1087","messageId":"1088","endLine":582,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1201","line":602,"column":9,"nodeType":"1087","messageId":"1088","endLine":602,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1202","line":603,"column":9,"nodeType":"1087","messageId":"1088","endLine":603,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1203","line":605,"column":9,"nodeType":"1087","messageId":"1088","endLine":605,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1204","line":614,"column":9,"nodeType":"1087","messageId":"1088","endLine":614,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1205","line":615,"column":11,"nodeType":"1087","messageId":"1088","endLine":615,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1141","line":2,"column":10,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1149","line":1,"column":46,"nodeType":"1087","messageId":"1088","endLine":1,"endColumn":52},{"ruleId":"1085","severity":1,"message":"1150","line":4,"column":8,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1151","line":4,"column":26,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":45},{"ruleId":"1085","severity":1,"message":"1153","line":9,"column":3,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":8},{"ruleId":"1085","severity":1,"message":"1154","line":9,"column":10,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1155","line":9,"column":22,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1156","line":9,"column":30,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1206","line":9,"column":38,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":50},{"ruleId":"1085","severity":1,"message":"1207","line":13,"column":13,"nodeType":"1087","messageId":"1088","endLine":13,"endColumn":25},{"ruleId":"1085","severity":1,"message":"1208","line":13,"column":27,"nodeType":"1087","messageId":"1088","endLine":13,"endColumn":34},{"ruleId":"1085","severity":1,"message":"1135","line":15,"column":54,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":65},{"ruleId":"1085","severity":1,"message":"1137","line":15,"column":67,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":80},{"ruleId":"1085","severity":1,"message":"1157","line":15,"column":82,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":86},{"ruleId":"1085","severity":1,"message":"1164","line":18,"column":10,"nodeType":"1087","messageId":"1088","endLine":18,"endColumn":13},{"ruleId":"1085","severity":1,"message":"1139","line":20,"column":8,"nodeType":"1087","messageId":"1088","endLine":20,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1209","line":23,"column":5,"nodeType":"1087","messageId":"1088","endLine":23,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1166","line":26,"column":7,"nodeType":"1087","messageId":"1088","endLine":26,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1168","line":60,"column":10,"nodeType":"1087","messageId":"1088","endLine":60,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1169","line":60,"column":20,"nodeType":"1087","messageId":"1088","endLine":60,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1170","line":61,"column":10,"nodeType":"1087","messageId":"1088","endLine":61,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1171","line":61,"column":23,"nodeType":"1087","messageId":"1088","endLine":61,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1172","line":64,"column":23,"nodeType":"1087","messageId":"1088","endLine":64,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1173","line":66,"column":10,"nodeType":"1087","messageId":"1088","endLine":66,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1174","line":67,"column":10,"nodeType":"1087","messageId":"1088","endLine":67,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1175","line":70,"column":10,"nodeType":"1087","messageId":"1088","endLine":70,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1176","line":81,"column":9,"nodeType":"1087","messageId":"1088","endLine":81,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1177","line":83,"column":9,"nodeType":"1087","messageId":"1088","endLine":83,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1178","line":90,"column":9,"nodeType":"1087","messageId":"1088","endLine":90,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1179","line":93,"column":9,"nodeType":"1087","messageId":"1088","endLine":93,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1180","line":94,"column":9,"nodeType":"1087","messageId":"1088","endLine":94,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1167","line":98,"column":10,"nodeType":"1087","messageId":"1088","endLine":98,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1181","line":98,"column":30,"nodeType":"1087","messageId":"1088","endLine":98,"endColumn":51},{"ruleId":"1085","severity":1,"message":"1196","line":101,"column":11,"nodeType":"1087","messageId":"1088","endLine":101,"endColumn":20},{"ruleId":"1128","severity":1,"message":"1129","line":177,"column":52,"nodeType":"1130","messageId":"1131","endLine":177,"endColumn":54},{"ruleId":"1085","severity":1,"message":"1189","line":209,"column":14,"nodeType":"1087","messageId":"1088","endLine":209,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1182","line":304,"column":9,"nodeType":"1087","messageId":"1088","endLine":304,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1183","line":317,"column":9,"nodeType":"1087","messageId":"1088","endLine":317,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1185","line":375,"column":9,"nodeType":"1087","messageId":"1088","endLine":375,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1111","line":381,"column":15,"nodeType":"1087","messageId":"1088","endLine":381,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1186","line":426,"column":12,"nodeType":"1087","messageId":"1088","endLine":426,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1111","line":431,"column":15,"nodeType":"1087","messageId":"1088","endLine":431,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1210","line":554,"column":9,"nodeType":"1087","messageId":"1088","endLine":554,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1211","line":682,"column":9,"nodeType":"1087","messageId":"1088","endLine":682,"endColumn":25},{"ruleId":"1085","severity":1,"message":"1190","line":691,"column":7,"nodeType":"1087","messageId":"1088","endLine":691,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1191","line":734,"column":13,"nodeType":"1087","messageId":"1088","endLine":734,"endColumn":15},{"ruleId":"1117","severity":1,"message":"1212","line":741,"column":6,"nodeType":"1119","endLine":741,"endColumn":8,"suggestions":"1213"},{"ruleId":"1085","severity":1,"message":"1195","line":748,"column":9,"nodeType":"1087","messageId":"1088","endLine":748,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1127","line":765,"column":9,"nodeType":"1087","messageId":"1088","endLine":765,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1197","line":780,"column":9,"nodeType":"1087","messageId":"1088","endLine":780,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1198","line":798,"column":9,"nodeType":"1087","messageId":"1088","endLine":798,"endColumn":19},{"ruleId":"1128","severity":1,"message":"1129","line":804,"column":50,"nodeType":"1130","messageId":"1131","endLine":804,"endColumn":52},{"ruleId":"1085","severity":1,"message":"1204","line":915,"column":9,"nodeType":"1087","messageId":"1088","endLine":915,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1205","line":916,"column":11,"nodeType":"1087","messageId":"1088","endLine":916,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1137","line":1,"column":37,"nodeType":"1087","messageId":"1088","endLine":1,"endColumn":50},{"ruleId":"1085","severity":1,"message":"1157","line":1,"column":51,"nodeType":"1087","messageId":"1088","endLine":1,"endColumn":55},{"ruleId":"1085","severity":1,"message":"1152","line":7,"column":41,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":47},{"ruleId":"1085","severity":1,"message":"1214","line":7,"column":48,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":56},{"ruleId":"1085","severity":1,"message":"1097","line":7,"column":83,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":92},{"ruleId":"1085","severity":1,"message":"1215","line":7,"column":121,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":133},{"ruleId":"1085","severity":1,"message":"1216","line":10,"column":10,"nodeType":"1087","messageId":"1088","endLine":10,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1217","line":11,"column":10,"nodeType":"1087","messageId":"1088","endLine":11,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1218","line":12,"column":10,"nodeType":"1087","messageId":"1088","endLine":12,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1219","line":13,"column":10,"nodeType":"1087","messageId":"1088","endLine":13,"endColumn":30},{"ruleId":"1085","severity":1,"message":"1170","line":54,"column":10,"nodeType":"1087","messageId":"1088","endLine":54,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1171","line":54,"column":23,"nodeType":"1087","messageId":"1088","endLine":54,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1220","line":56,"column":10,"nodeType":"1087","messageId":"1088","endLine":56,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1221","line":56,"column":20,"nodeType":"1087","messageId":"1088","endLine":56,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1175","line":59,"column":10,"nodeType":"1087","messageId":"1088","endLine":59,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1222","line":60,"column":10,"nodeType":"1087","messageId":"1088","endLine":60,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1223","line":60,"column":18,"nodeType":"1087","messageId":"1088","endLine":60,"endColumn":27},{"ruleId":"1085","severity":1,"message":"1224","line":61,"column":10,"nodeType":"1087","messageId":"1088","endLine":61,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1225","line":61,"column":18,"nodeType":"1087","messageId":"1088","endLine":61,"endColumn":27},{"ruleId":"1085","severity":1,"message":"1226","line":62,"column":10,"nodeType":"1087","messageId":"1088","endLine":62,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1227","line":64,"column":10,"nodeType":"1087","messageId":"1088","endLine":64,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1228","line":64,"column":25,"nodeType":"1087","messageId":"1088","endLine":64,"endColumn":41},{"ruleId":"1085","severity":1,"message":"1229","line":77,"column":10,"nodeType":"1087","messageId":"1088","endLine":77,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1230","line":77,"column":23,"nodeType":"1087","messageId":"1088","endLine":77,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1167","line":78,"column":10,"nodeType":"1087","messageId":"1088","endLine":78,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1231","line":82,"column":9,"nodeType":"1087","messageId":"1088","endLine":82,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1232","line":84,"column":8,"nodeType":"1087","messageId":"1088","endLine":84,"endColumn":11},{"ruleId":"1085","severity":1,"message":"1233","line":166,"column":7,"nodeType":"1087","messageId":"1088","endLine":166,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1234","line":169,"column":11,"nodeType":"1087","messageId":"1088","endLine":169,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1235","line":169,"column":22,"nodeType":"1087","messageId":"1088","endLine":169,"endColumn":27},{"ruleId":"1085","severity":1,"message":"1124","line":333,"column":9,"nodeType":"1087","messageId":"1088","endLine":333,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1200","line":347,"column":7,"nodeType":"1087","messageId":"1088","endLine":347,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1236","line":369,"column":7,"nodeType":"1087","messageId":"1088","endLine":369,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1111","line":374,"column":13,"nodeType":"1087","messageId":"1088","endLine":374,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1237","line":432,"column":7,"nodeType":"1087","messageId":"1088","endLine":432,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1111","line":437,"column":13,"nodeType":"1087","messageId":"1088","endLine":437,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1186","line":453,"column":10,"nodeType":"1087","messageId":"1088","endLine":453,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1234","line":465,"column":11,"nodeType":"1087","messageId":"1088","endLine":465,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1235","line":465,"column":22,"nodeType":"1087","messageId":"1088","endLine":465,"endColumn":27},{"ruleId":"1085","severity":1,"message":"1111","line":514,"column":13,"nodeType":"1087","messageId":"1088","endLine":514,"endColumn":24},{"ruleId":"1117","severity":1,"message":"1238","line":634,"column":5,"nodeType":"1119","endLine":634,"endColumn":7,"suggestions":"1239"},{"ruleId":"1240","severity":1,"message":"1241","line":652,"column":12,"nodeType":"1087","messageId":"1242","endLine":652,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1127","line":656,"column":7,"nodeType":"1087","messageId":"1088","endLine":656,"endColumn":16},{"ruleId":"1128","severity":1,"message":"1129","line":677,"column":57,"nodeType":"1130","messageId":"1131","endLine":677,"endColumn":59},{"ruleId":"1128","severity":1,"message":"1129","line":694,"column":48,"nodeType":"1130","messageId":"1131","endLine":694,"endColumn":50},{"ruleId":"1085","severity":1,"message":"1243","line":701,"column":7,"nodeType":"1087","messageId":"1088","endLine":701,"endColumn":24},{"ruleId":"1244","severity":1,"message":"1245","line":40,"column":1,"nodeType":"1246","endLine":40,"endColumn":82},{"ruleId":"1085","severity":1,"message":"1143","line":26,"column":9,"nodeType":"1087","messageId":"1088","endLine":26,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1144","line":26,"column":14,"nodeType":"1087","messageId":"1088","endLine":26,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1145","line":26,"column":26,"nodeType":"1087","messageId":"1088","endLine":26,"endColumn":30},{"ruleId":"1085","severity":1,"message":"1147","line":26,"column":32,"nodeType":"1087","messageId":"1088","endLine":26,"endColumn":40},{"ruleId":"1085","severity":1,"message":"1247","line":27,"column":10,"nodeType":"1087","messageId":"1088","endLine":27,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1248","line":27,"column":17,"nodeType":"1087","messageId":"1088","endLine":27,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1249","line":27,"column":33,"nodeType":"1087","messageId":"1088","endLine":27,"endColumn":48},{"ruleId":"1085","severity":1,"message":"1250","line":27,"column":50,"nodeType":"1087","messageId":"1088","endLine":27,"endColumn":72},{"ruleId":"1085","severity":1,"message":"1251","line":29,"column":7,"nodeType":"1087","messageId":"1088","endLine":29,"endColumn":15},{"ruleId":"1252","severity":1,"message":"1253","line":96,"column":75,"nodeType":"1254","messageId":"1255","endLine":96,"endColumn":76,"suggestions":"1256"},{"ruleId":"1117","severity":1,"message":"1257","line":118,"column":5,"nodeType":"1119","endLine":118,"endColumn":7,"suggestions":"1258"},{"ruleId":"1085","severity":1,"message":"1140","line":6,"column":8,"nodeType":"1087","messageId":"1088","endLine":6,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1141","line":7,"column":10,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1259","line":9,"column":27,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":33},{"ruleId":"1085","severity":1,"message":"1260","line":9,"column":35,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":40},{"ruleId":"1085","severity":1,"message":"1261","line":10,"column":10,"nodeType":"1087","messageId":"1088","endLine":10,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1262","line":1,"column":52,"nodeType":"1087","messageId":"1088","endLine":1,"endColumn":60},{"ruleId":"1085","severity":1,"message":"1263","line":12,"column":28,"nodeType":"1087","messageId":"1088","endLine":12,"endColumn":36},{"ruleId":"1081","replacedBy":"1264"},{"ruleId":"1083","replacedBy":"1265"},{"ruleId":"1085","severity":1,"message":"1086","line":3,"column":10,"nodeType":"1087","messageId":"1088","endLine":3,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1089","line":29,"column":8,"nodeType":"1087","messageId":"1088","endLine":29,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1091","line":53,"column":3,"nodeType":"1092","messageId":"1093","endLine":55,"endColumn":4},{"ruleId":"1085","severity":1,"message":"1094","line":3,"column":21,"nodeType":"1087","messageId":"1088","endLine":3,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1095","line":3,"column":44,"nodeType":"1087","messageId":"1088","endLine":3,"endColumn":53},{"ruleId":"1085","severity":1,"message":"1096","line":6,"column":8,"nodeType":"1087","messageId":"1088","endLine":6,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1097","line":11,"column":26,"nodeType":"1087","messageId":"1088","endLine":11,"endColumn":35},{"ruleId":"1085","severity":1,"message":"1098","line":17,"column":8,"nodeType":"1087","messageId":"1088","endLine":17,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1099","line":18,"column":8,"nodeType":"1087","messageId":"1088","endLine":18,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1100","line":19,"column":8,"nodeType":"1087","messageId":"1088","endLine":19,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1101","line":21,"column":10,"nodeType":"1087","messageId":"1088","endLine":21,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1102","line":21,"column":16,"nodeType":"1087","messageId":"1088","endLine":21,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1103","line":22,"column":10,"nodeType":"1087","messageId":"1088","endLine":22,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1104","line":24,"column":8,"nodeType":"1087","messageId":"1088","endLine":24,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1105","line":66,"column":33,"nodeType":"1087","messageId":"1088","endLine":66,"endColumn":57},{"ruleId":"1085","severity":1,"message":"1106","line":70,"column":10,"nodeType":"1087","messageId":"1088","endLine":70,"endColumn":19},{"ruleId":"1085","severity":1,"message":"1107","line":71,"column":9,"nodeType":"1087","messageId":"1088","endLine":71,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1108","line":82,"column":9,"nodeType":"1087","messageId":"1088","endLine":82,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1109","line":84,"column":9,"nodeType":"1087","messageId":"1088","endLine":84,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1110","line":91,"column":9,"nodeType":"1087","messageId":"1088","endLine":91,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1111","line":130,"column":17,"nodeType":"1087","messageId":"1088","endLine":130,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1112","line":168,"column":10,"nodeType":"1087","messageId":"1088","endLine":168,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1113","line":186,"column":10,"nodeType":"1087","messageId":"1088","endLine":186,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1114","line":229,"column":10,"nodeType":"1087","messageId":"1088","endLine":229,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1115","line":341,"column":9,"nodeType":"1087","messageId":"1088","endLine":341,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1116","line":349,"column":9,"nodeType":"1087","messageId":"1088","endLine":349,"endColumn":21},{"ruleId":"1117","severity":1,"message":"1118","line":379,"column":6,"nodeType":"1119","endLine":379,"endColumn":18,"suggestions":"1266"},{"ruleId":"1085","severity":1,"message":"1121","line":389,"column":7,"nodeType":"1087","messageId":"1088","endLine":389,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1122","line":407,"column":9,"nodeType":"1087","messageId":"1088","endLine":407,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1123","line":422,"column":9,"nodeType":"1087","messageId":"1088","endLine":422,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1124","line":442,"column":9,"nodeType":"1087","messageId":"1088","endLine":442,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1125","line":453,"column":9,"nodeType":"1087","messageId":"1088","endLine":453,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1126","line":460,"column":9,"nodeType":"1087","messageId":"1088","endLine":460,"endColumn":25},{"ruleId":"1085","severity":1,"message":"1127","line":464,"column":9,"nodeType":"1087","messageId":"1088","endLine":464,"endColumn":18},{"ruleId":"1128","severity":1,"message":"1129","line":485,"column":59,"nodeType":"1130","messageId":"1131","endLine":485,"endColumn":61},{"ruleId":"1132","severity":1,"message":"1133","line":738,"column":37,"nodeType":"1134","endLine":738,"endColumn":94},{"ruleId":"1132","severity":1,"message":"1133","line":742,"column":37,"nodeType":"1134","endLine":743,"endColumn":72},{"ruleId":"1085","severity":1,"message":"1143","line":2,"column":10,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":13},{"ruleId":"1085","severity":1,"message":"1144","line":2,"column":15,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1145","line":2,"column":20,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1146","line":2,"column":26,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1095","line":2,"column":31,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":40},{"ruleId":"1085","severity":1,"message":"1147","line":2,"column":42,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":50},{"ruleId":"1085","severity":1,"message":"1148","line":2,"column":52,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":72},{"ruleId":"1085","severity":1,"message":"1135","line":4,"column":25,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":36},{"ruleId":"1085","severity":1,"message":"1136","line":4,"column":38,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":44},{"ruleId":"1085","severity":1,"message":"1137","line":4,"column":45,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":58},{"ruleId":"1085","severity":1,"message":"1138","line":4,"column":60,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":65},{"ruleId":"1085","severity":1,"message":"1139","line":7,"column":10,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1097","line":7,"column":35,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":44},{"ruleId":"1085","severity":1,"message":"1140","line":9,"column":8,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1141","line":10,"column":10,"nodeType":"1087","messageId":"1088","endLine":10,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1142","line":11,"column":8,"nodeType":"1087","messageId":"1088","endLine":11,"endColumn":25},{"ruleId":"1085","severity":1,"message":"1124","line":34,"column":12,"nodeType":"1087","messageId":"1088","endLine":34,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1149","line":1,"column":46,"nodeType":"1087","messageId":"1088","endLine":1,"endColumn":52},{"ruleId":"1085","severity":1,"message":"1150","line":4,"column":8,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1151","line":4,"column":26,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":45},{"ruleId":"1085","severity":1,"message":"1152","line":8,"column":60,"nodeType":"1087","messageId":"1088","endLine":8,"endColumn":66},{"ruleId":"1085","severity":1,"message":"1153","line":9,"column":3,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":8},{"ruleId":"1085","severity":1,"message":"1154","line":9,"column":10,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1155","line":9,"column":22,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1156","line":9,"column":30,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1135","line":15,"column":53,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":64},{"ruleId":"1085","severity":1,"message":"1137","line":15,"column":66,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":79},{"ruleId":"1085","severity":1,"message":"1157","line":15,"column":81,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":85},{"ruleId":"1085","severity":1,"message":"1158","line":15,"column":87,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":96},{"ruleId":"1085","severity":1,"message":"1138","line":15,"column":98,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":103},{"ruleId":"1085","severity":1,"message":"1159","line":15,"column":105,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":110},{"ruleId":"1085","severity":1,"message":"1160","line":15,"column":112,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":123},{"ruleId":"1085","severity":1,"message":"1161","line":15,"column":125,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":130},{"ruleId":"1085","severity":1,"message":"1162","line":15,"column":132,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":141},{"ruleId":"1085","severity":1,"message":"1163","line":15,"column":143,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":154},{"ruleId":"1085","severity":1,"message":"1136","line":17,"column":22,"nodeType":"1087","messageId":"1088","endLine":17,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1164","line":18,"column":10,"nodeType":"1087","messageId":"1088","endLine":18,"endColumn":13},{"ruleId":"1085","severity":1,"message":"1139","line":19,"column":8,"nodeType":"1087","messageId":"1088","endLine":19,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1165","line":20,"column":8,"nodeType":"1087","messageId":"1088","endLine":20,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1166","line":24,"column":7,"nodeType":"1087","messageId":"1088","endLine":24,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1167","line":86,"column":10,"nodeType":"1087","messageId":"1088","endLine":86,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1168","line":125,"column":10,"nodeType":"1087","messageId":"1088","endLine":125,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1169","line":125,"column":20,"nodeType":"1087","messageId":"1088","endLine":125,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1170","line":126,"column":10,"nodeType":"1087","messageId":"1088","endLine":126,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1171","line":126,"column":23,"nodeType":"1087","messageId":"1088","endLine":126,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1172","line":129,"column":23,"nodeType":"1087","messageId":"1088","endLine":129,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1173","line":131,"column":10,"nodeType":"1087","messageId":"1088","endLine":131,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1174","line":132,"column":10,"nodeType":"1087","messageId":"1088","endLine":132,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1175","line":135,"column":10,"nodeType":"1087","messageId":"1088","endLine":135,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1176","line":142,"column":9,"nodeType":"1087","messageId":"1088","endLine":142,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1177","line":144,"column":9,"nodeType":"1087","messageId":"1088","endLine":144,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1178","line":150,"column":9,"nodeType":"1087","messageId":"1088","endLine":150,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1179","line":153,"column":9,"nodeType":"1087","messageId":"1088","endLine":153,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1180","line":154,"column":9,"nodeType":"1087","messageId":"1088","endLine":154,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1167","line":158,"column":10,"nodeType":"1087","messageId":"1088","endLine":158,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1181","line":158,"column":30,"nodeType":"1087","messageId":"1088","endLine":158,"endColumn":51},{"ruleId":"1085","severity":1,"message":"1182","line":164,"column":9,"nodeType":"1087","messageId":"1088","endLine":164,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1183","line":176,"column":9,"nodeType":"1087","messageId":"1088","endLine":176,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1184","line":184,"column":9,"nodeType":"1087","messageId":"1088","endLine":184,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1185","line":234,"column":9,"nodeType":"1087","messageId":"1088","endLine":234,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1111","line":239,"column":15,"nodeType":"1087","messageId":"1088","endLine":239,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1186","line":285,"column":12,"nodeType":"1087","messageId":"1088","endLine":285,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1111","line":290,"column":15,"nodeType":"1087","messageId":"1088","endLine":290,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1187","line":317,"column":12,"nodeType":"1087","messageId":"1088","endLine":317,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1188","line":320,"column":12,"nodeType":"1087","messageId":"1088","endLine":320,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1189","line":324,"column":12,"nodeType":"1087","messageId":"1088","endLine":324,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1190","line":427,"column":7,"nodeType":"1087","messageId":"1088","endLine":427,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1191","line":467,"column":13,"nodeType":"1087","messageId":"1088","endLine":467,"endColumn":15},{"ruleId":"1117","severity":1,"message":"1192","line":474,"column":6,"nodeType":"1119","endLine":474,"endColumn":8,"suggestions":"1267"},{"ruleId":"1085","severity":1,"message":"1194","line":476,"column":12,"nodeType":"1087","messageId":"1088","endLine":476,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1195","line":480,"column":9,"nodeType":"1087","messageId":"1088","endLine":480,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1127","line":497,"column":9,"nodeType":"1087","messageId":"1088","endLine":497,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1196","line":512,"column":11,"nodeType":"1087","messageId":"1088","endLine":512,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1197","line":533,"column":9,"nodeType":"1087","messageId":"1088","endLine":533,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1198","line":551,"column":9,"nodeType":"1087","messageId":"1088","endLine":551,"endColumn":19},{"ruleId":"1128","severity":1,"message":"1129","line":557,"column":50,"nodeType":"1130","messageId":"1131","endLine":557,"endColumn":52},{"ruleId":"1085","severity":1,"message":"1199","line":562,"column":9,"nodeType":"1087","messageId":"1088","endLine":562,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1200","line":582,"column":9,"nodeType":"1087","messageId":"1088","endLine":582,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1201","line":602,"column":9,"nodeType":"1087","messageId":"1088","endLine":602,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1202","line":603,"column":9,"nodeType":"1087","messageId":"1088","endLine":603,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1203","line":605,"column":9,"nodeType":"1087","messageId":"1088","endLine":605,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1204","line":614,"column":9,"nodeType":"1087","messageId":"1088","endLine":614,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1205","line":615,"column":11,"nodeType":"1087","messageId":"1088","endLine":615,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1149","line":1,"column":46,"nodeType":"1087","messageId":"1088","endLine":1,"endColumn":52},{"ruleId":"1085","severity":1,"message":"1150","line":4,"column":8,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1151","line":4,"column":26,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":45},{"ruleId":"1085","severity":1,"message":"1153","line":9,"column":3,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":8},{"ruleId":"1085","severity":1,"message":"1154","line":9,"column":10,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1155","line":9,"column":22,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1156","line":9,"column":30,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1206","line":9,"column":38,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":50},{"ruleId":"1085","severity":1,"message":"1207","line":13,"column":13,"nodeType":"1087","messageId":"1088","endLine":13,"endColumn":25},{"ruleId":"1085","severity":1,"message":"1208","line":13,"column":27,"nodeType":"1087","messageId":"1088","endLine":13,"endColumn":34},{"ruleId":"1085","severity":1,"message":"1135","line":15,"column":54,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":65},{"ruleId":"1085","severity":1,"message":"1137","line":15,"column":67,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":80},{"ruleId":"1085","severity":1,"message":"1157","line":15,"column":82,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":86},{"ruleId":"1085","severity":1,"message":"1164","line":18,"column":10,"nodeType":"1087","messageId":"1088","endLine":18,"endColumn":13},{"ruleId":"1085","severity":1,"message":"1139","line":20,"column":8,"nodeType":"1087","messageId":"1088","endLine":20,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1209","line":23,"column":5,"nodeType":"1087","messageId":"1088","endLine":23,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1166","line":26,"column":7,"nodeType":"1087","messageId":"1088","endLine":26,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1168","line":60,"column":10,"nodeType":"1087","messageId":"1088","endLine":60,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1169","line":60,"column":20,"nodeType":"1087","messageId":"1088","endLine":60,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1170","line":61,"column":10,"nodeType":"1087","messageId":"1088","endLine":61,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1171","line":61,"column":23,"nodeType":"1087","messageId":"1088","endLine":61,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1172","line":64,"column":23,"nodeType":"1087","messageId":"1088","endLine":64,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1173","line":66,"column":10,"nodeType":"1087","messageId":"1088","endLine":66,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1174","line":67,"column":10,"nodeType":"1087","messageId":"1088","endLine":67,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1175","line":70,"column":10,"nodeType":"1087","messageId":"1088","endLine":70,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1176","line":81,"column":9,"nodeType":"1087","messageId":"1088","endLine":81,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1177","line":83,"column":9,"nodeType":"1087","messageId":"1088","endLine":83,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1178","line":90,"column":9,"nodeType":"1087","messageId":"1088","endLine":90,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1179","line":93,"column":9,"nodeType":"1087","messageId":"1088","endLine":93,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1180","line":94,"column":9,"nodeType":"1087","messageId":"1088","endLine":94,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1167","line":98,"column":10,"nodeType":"1087","messageId":"1088","endLine":98,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1181","line":98,"column":30,"nodeType":"1087","messageId":"1088","endLine":98,"endColumn":51},{"ruleId":"1085","severity":1,"message":"1196","line":101,"column":11,"nodeType":"1087","messageId":"1088","endLine":101,"endColumn":20},{"ruleId":"1128","severity":1,"message":"1129","line":177,"column":52,"nodeType":"1130","messageId":"1131","endLine":177,"endColumn":54},{"ruleId":"1085","severity":1,"message":"1189","line":209,"column":14,"nodeType":"1087","messageId":"1088","endLine":209,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1182","line":304,"column":9,"nodeType":"1087","messageId":"1088","endLine":304,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1183","line":317,"column":9,"nodeType":"1087","messageId":"1088","endLine":317,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1185","line":375,"column":9,"nodeType":"1087","messageId":"1088","endLine":375,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1111","line":381,"column":15,"nodeType":"1087","messageId":"1088","endLine":381,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1186","line":426,"column":12,"nodeType":"1087","messageId":"1088","endLine":426,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1111","line":431,"column":15,"nodeType":"1087","messageId":"1088","endLine":431,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1210","line":554,"column":9,"nodeType":"1087","messageId":"1088","endLine":554,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1211","line":682,"column":9,"nodeType":"1087","messageId":"1088","endLine":682,"endColumn":25},{"ruleId":"1085","severity":1,"message":"1190","line":691,"column":7,"nodeType":"1087","messageId":"1088","endLine":691,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1191","line":734,"column":13,"nodeType":"1087","messageId":"1088","endLine":734,"endColumn":15},{"ruleId":"1117","severity":1,"message":"1212","line":741,"column":6,"nodeType":"1119","endLine":741,"endColumn":8,"suggestions":"1268"},{"ruleId":"1085","severity":1,"message":"1195","line":748,"column":9,"nodeType":"1087","messageId":"1088","endLine":748,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1127","line":765,"column":9,"nodeType":"1087","messageId":"1088","endLine":765,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1197","line":780,"column":9,"nodeType":"1087","messageId":"1088","endLine":780,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1198","line":798,"column":9,"nodeType":"1087","messageId":"1088","endLine":798,"endColumn":19},{"ruleId":"1128","severity":1,"message":"1129","line":804,"column":50,"nodeType":"1130","messageId":"1131","endLine":804,"endColumn":52},{"ruleId":"1085","severity":1,"message":"1204","line":915,"column":9,"nodeType":"1087","messageId":"1088","endLine":915,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1205","line":916,"column":11,"nodeType":"1087","messageId":"1088","endLine":916,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1137","line":1,"column":37,"nodeType":"1087","messageId":"1088","endLine":1,"endColumn":50},{"ruleId":"1085","severity":1,"message":"1157","line":1,"column":51,"nodeType":"1087","messageId":"1088","endLine":1,"endColumn":55},{"ruleId":"1085","severity":1,"message":"1152","line":7,"column":41,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":47},{"ruleId":"1085","severity":1,"message":"1214","line":7,"column":48,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":56},{"ruleId":"1085","severity":1,"message":"1097","line":7,"column":83,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":92},{"ruleId":"1085","severity":1,"message":"1215","line":7,"column":121,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":133},{"ruleId":"1085","severity":1,"message":"1216","line":10,"column":10,"nodeType":"1087","messageId":"1088","endLine":10,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1217","line":11,"column":10,"nodeType":"1087","messageId":"1088","endLine":11,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1218","line":12,"column":10,"nodeType":"1087","messageId":"1088","endLine":12,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1219","line":13,"column":10,"nodeType":"1087","messageId":"1088","endLine":13,"endColumn":30},{"ruleId":"1085","severity":1,"message":"1170","line":54,"column":10,"nodeType":"1087","messageId":"1088","endLine":54,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1171","line":54,"column":23,"nodeType":"1087","messageId":"1088","endLine":54,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1220","line":56,"column":10,"nodeType":"1087","messageId":"1088","endLine":56,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1221","line":56,"column":20,"nodeType":"1087","messageId":"1088","endLine":56,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1175","line":59,"column":10,"nodeType":"1087","messageId":"1088","endLine":59,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1222","line":60,"column":10,"nodeType":"1087","messageId":"1088","endLine":60,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1223","line":60,"column":18,"nodeType":"1087","messageId":"1088","endLine":60,"endColumn":27},{"ruleId":"1085","severity":1,"message":"1224","line":61,"column":10,"nodeType":"1087","messageId":"1088","endLine":61,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1225","line":61,"column":18,"nodeType":"1087","messageId":"1088","endLine":61,"endColumn":27},{"ruleId":"1085","severity":1,"message":"1226","line":62,"column":10,"nodeType":"1087","messageId":"1088","endLine":62,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1227","line":64,"column":10,"nodeType":"1087","messageId":"1088","endLine":64,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1228","line":64,"column":25,"nodeType":"1087","messageId":"1088","endLine":64,"endColumn":41},{"ruleId":"1085","severity":1,"message":"1229","line":77,"column":10,"nodeType":"1087","messageId":"1088","endLine":77,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1230","line":77,"column":23,"nodeType":"1087","messageId":"1088","endLine":77,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1167","line":78,"column":10,"nodeType":"1087","messageId":"1088","endLine":78,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1231","line":82,"column":9,"nodeType":"1087","messageId":"1088","endLine":82,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1232","line":84,"column":8,"nodeType":"1087","messageId":"1088","endLine":84,"endColumn":11},{"ruleId":"1085","severity":1,"message":"1233","line":166,"column":7,"nodeType":"1087","messageId":"1088","endLine":166,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1234","line":169,"column":11,"nodeType":"1087","messageId":"1088","endLine":169,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1235","line":169,"column":22,"nodeType":"1087","messageId":"1088","endLine":169,"endColumn":27},{"ruleId":"1085","severity":1,"message":"1124","line":333,"column":9,"nodeType":"1087","messageId":"1088","endLine":333,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1200","line":347,"column":7,"nodeType":"1087","messageId":"1088","endLine":347,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1236","line":369,"column":7,"nodeType":"1087","messageId":"1088","endLine":369,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1111","line":374,"column":13,"nodeType":"1087","messageId":"1088","endLine":374,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1237","line":432,"column":7,"nodeType":"1087","messageId":"1088","endLine":432,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1111","line":437,"column":13,"nodeType":"1087","messageId":"1088","endLine":437,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1186","line":453,"column":10,"nodeType":"1087","messageId":"1088","endLine":453,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1234","line":465,"column":11,"nodeType":"1087","messageId":"1088","endLine":465,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1235","line":465,"column":22,"nodeType":"1087","messageId":"1088","endLine":465,"endColumn":27},{"ruleId":"1085","severity":1,"message":"1111","line":514,"column":13,"nodeType":"1087","messageId":"1088","endLine":514,"endColumn":24},{"ruleId":"1117","severity":1,"message":"1238","line":634,"column":5,"nodeType":"1119","endLine":634,"endColumn":7,"suggestions":"1269"},{"ruleId":"1240","severity":1,"message":"1241","line":652,"column":12,"nodeType":"1087","messageId":"1242","endLine":652,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1127","line":656,"column":7,"nodeType":"1087","messageId":"1088","endLine":656,"endColumn":16},{"ruleId":"1128","severity":1,"message":"1129","line":677,"column":57,"nodeType":"1130","messageId":"1131","endLine":677,"endColumn":59},{"ruleId":"1128","severity":1,"message":"1129","line":694,"column":48,"nodeType":"1130","messageId":"1131","endLine":694,"endColumn":50},{"ruleId":"1085","severity":1,"message":"1243","line":701,"column":7,"nodeType":"1087","messageId":"1088","endLine":701,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1141","line":2,"column":10,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":14},{"ruleId":"1244","severity":1,"message":"1245","line":40,"column":1,"nodeType":"1246","endLine":40,"endColumn":82},{"ruleId":"1085","severity":1,"message":"1143","line":26,"column":9,"nodeType":"1087","messageId":"1088","endLine":26,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1144","line":26,"column":14,"nodeType":"1087","messageId":"1088","endLine":26,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1145","line":26,"column":26,"nodeType":"1087","messageId":"1088","endLine":26,"endColumn":30},{"ruleId":"1085","severity":1,"message":"1147","line":26,"column":32,"nodeType":"1087","messageId":"1088","endLine":26,"endColumn":40},{"ruleId":"1085","severity":1,"message":"1247","line":27,"column":10,"nodeType":"1087","messageId":"1088","endLine":27,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1248","line":27,"column":17,"nodeType":"1087","messageId":"1088","endLine":27,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1249","line":27,"column":33,"nodeType":"1087","messageId":"1088","endLine":27,"endColumn":48},{"ruleId":"1085","severity":1,"message":"1250","line":27,"column":50,"nodeType":"1087","messageId":"1088","endLine":27,"endColumn":72},{"ruleId":"1085","severity":1,"message":"1251","line":29,"column":7,"nodeType":"1087","messageId":"1088","endLine":29,"endColumn":15},{"ruleId":"1252","severity":1,"message":"1253","line":96,"column":75,"nodeType":"1254","messageId":"1255","endLine":96,"endColumn":76,"suggestions":"1270"},{"ruleId":"1117","severity":1,"message":"1257","line":118,"column":5,"nodeType":"1119","endLine":118,"endColumn":7,"suggestions":"1271"},{"ruleId":"1085","severity":1,"message":"1140","line":6,"column":8,"nodeType":"1087","messageId":"1088","endLine":6,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1141","line":7,"column":10,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1259","line":9,"column":27,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":33},{"ruleId":"1085","severity":1,"message":"1260","line":9,"column":35,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":40},{"ruleId":"1085","severity":1,"message":"1261","line":10,"column":10,"nodeType":"1087","messageId":"1088","endLine":10,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1262","line":1,"column":52,"nodeType":"1087","messageId":"1088","endLine":1,"endColumn":60},{"ruleId":"1085","severity":1,"message":"1263","line":12,"column":28,"nodeType":"1087","messageId":"1088","endLine":12,"endColumn":36},{"ruleId":"1081","replacedBy":"1272"},{"ruleId":"1083","replacedBy":"1273"},{"ruleId":"1085","severity":1,"message":"1086","line":3,"column":10,"nodeType":"1087","messageId":"1088","endLine":3,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1089","line":29,"column":8,"nodeType":"1087","messageId":"1088","endLine":29,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1091","line":53,"column":3,"nodeType":"1092","messageId":"1093","endLine":55,"endColumn":4},{"ruleId":"1085","severity":1,"message":"1141","line":2,"column":10,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1143","line":2,"column":10,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":13},{"ruleId":"1085","severity":1,"message":"1144","line":2,"column":15,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1145","line":2,"column":20,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1146","line":2,"column":26,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1095","line":2,"column":31,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":40},{"ruleId":"1085","severity":1,"message":"1147","line":2,"column":42,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":50},{"ruleId":"1085","severity":1,"message":"1148","line":2,"column":52,"nodeType":"1087","messageId":"1088","endLine":2,"endColumn":72},{"ruleId":"1085","severity":1,"message":"1135","line":4,"column":25,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":36},{"ruleId":"1085","severity":1,"message":"1136","line":4,"column":38,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":44},{"ruleId":"1085","severity":1,"message":"1137","line":4,"column":45,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":58},{"ruleId":"1085","severity":1,"message":"1138","line":4,"column":60,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":65},{"ruleId":"1085","severity":1,"message":"1139","line":7,"column":10,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1097","line":7,"column":35,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":44},{"ruleId":"1085","severity":1,"message":"1140","line":9,"column":8,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1141","line":10,"column":10,"nodeType":"1087","messageId":"1088","endLine":10,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1142","line":11,"column":8,"nodeType":"1087","messageId":"1088","endLine":11,"endColumn":25},{"ruleId":"1085","severity":1,"message":"1124","line":34,"column":12,"nodeType":"1087","messageId":"1088","endLine":34,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1094","line":3,"column":21,"nodeType":"1087","messageId":"1088","endLine":3,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1095","line":3,"column":44,"nodeType":"1087","messageId":"1088","endLine":3,"endColumn":53},{"ruleId":"1085","severity":1,"message":"1096","line":6,"column":8,"nodeType":"1087","messageId":"1088","endLine":6,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1097","line":11,"column":26,"nodeType":"1087","messageId":"1088","endLine":11,"endColumn":35},{"ruleId":"1085","severity":1,"message":"1098","line":17,"column":8,"nodeType":"1087","messageId":"1088","endLine":17,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1099","line":18,"column":8,"nodeType":"1087","messageId":"1088","endLine":18,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1100","line":19,"column":8,"nodeType":"1087","messageId":"1088","endLine":19,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1101","line":21,"column":10,"nodeType":"1087","messageId":"1088","endLine":21,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1102","line":21,"column":16,"nodeType":"1087","messageId":"1088","endLine":21,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1103","line":22,"column":10,"nodeType":"1087","messageId":"1088","endLine":22,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1104","line":24,"column":8,"nodeType":"1087","messageId":"1088","endLine":24,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1105","line":66,"column":33,"nodeType":"1087","messageId":"1088","endLine":66,"endColumn":57},{"ruleId":"1085","severity":1,"message":"1106","line":70,"column":10,"nodeType":"1087","messageId":"1088","endLine":70,"endColumn":19},{"ruleId":"1085","severity":1,"message":"1107","line":71,"column":9,"nodeType":"1087","messageId":"1088","endLine":71,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1108","line":82,"column":9,"nodeType":"1087","messageId":"1088","endLine":82,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1109","line":84,"column":9,"nodeType":"1087","messageId":"1088","endLine":84,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1110","line":91,"column":9,"nodeType":"1087","messageId":"1088","endLine":91,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1111","line":130,"column":17,"nodeType":"1087","messageId":"1088","endLine":130,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1112","line":168,"column":10,"nodeType":"1087","messageId":"1088","endLine":168,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1113","line":186,"column":10,"nodeType":"1087","messageId":"1088","endLine":186,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1114","line":229,"column":10,"nodeType":"1087","messageId":"1088","endLine":229,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1115","line":341,"column":9,"nodeType":"1087","messageId":"1088","endLine":341,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1116","line":349,"column":9,"nodeType":"1087","messageId":"1088","endLine":349,"endColumn":21},{"ruleId":"1117","severity":1,"message":"1118","line":379,"column":6,"nodeType":"1119","endLine":379,"endColumn":18,"suggestions":"1274"},{"ruleId":"1085","severity":1,"message":"1121","line":389,"column":7,"nodeType":"1087","messageId":"1088","endLine":389,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1122","line":407,"column":9,"nodeType":"1087","messageId":"1088","endLine":407,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1123","line":422,"column":9,"nodeType":"1087","messageId":"1088","endLine":422,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1124","line":442,"column":9,"nodeType":"1087","messageId":"1088","endLine":442,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1125","line":453,"column":9,"nodeType":"1087","messageId":"1088","endLine":453,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1126","line":460,"column":9,"nodeType":"1087","messageId":"1088","endLine":460,"endColumn":25},{"ruleId":"1085","severity":1,"message":"1127","line":464,"column":9,"nodeType":"1087","messageId":"1088","endLine":464,"endColumn":18},{"ruleId":"1128","severity":1,"message":"1129","line":485,"column":59,"nodeType":"1130","messageId":"1131","endLine":485,"endColumn":61},{"ruleId":"1132","severity":1,"message":"1133","line":738,"column":37,"nodeType":"1134","endLine":738,"endColumn":94},{"ruleId":"1132","severity":1,"message":"1133","line":742,"column":37,"nodeType":"1134","endLine":743,"endColumn":72},{"ruleId":"1085","severity":1,"message":"1149","line":1,"column":46,"nodeType":"1087","messageId":"1088","endLine":1,"endColumn":52},{"ruleId":"1085","severity":1,"message":"1150","line":4,"column":8,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1151","line":4,"column":26,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":45},{"ruleId":"1085","severity":1,"message":"1153","line":9,"column":3,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":8},{"ruleId":"1085","severity":1,"message":"1154","line":9,"column":10,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1155","line":9,"column":22,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1156","line":9,"column":30,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1206","line":9,"column":38,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":50},{"ruleId":"1085","severity":1,"message":"1207","line":13,"column":13,"nodeType":"1087","messageId":"1088","endLine":13,"endColumn":25},{"ruleId":"1085","severity":1,"message":"1208","line":13,"column":27,"nodeType":"1087","messageId":"1088","endLine":13,"endColumn":34},{"ruleId":"1085","severity":1,"message":"1135","line":15,"column":54,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":65},{"ruleId":"1085","severity":1,"message":"1137","line":15,"column":67,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":80},{"ruleId":"1085","severity":1,"message":"1157","line":15,"column":82,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":86},{"ruleId":"1085","severity":1,"message":"1164","line":18,"column":10,"nodeType":"1087","messageId":"1088","endLine":18,"endColumn":13},{"ruleId":"1085","severity":1,"message":"1139","line":20,"column":8,"nodeType":"1087","messageId":"1088","endLine":20,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1209","line":23,"column":5,"nodeType":"1087","messageId":"1088","endLine":23,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1166","line":26,"column":7,"nodeType":"1087","messageId":"1088","endLine":26,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1168","line":60,"column":10,"nodeType":"1087","messageId":"1088","endLine":60,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1169","line":60,"column":20,"nodeType":"1087","messageId":"1088","endLine":60,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1170","line":61,"column":10,"nodeType":"1087","messageId":"1088","endLine":61,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1171","line":61,"column":23,"nodeType":"1087","messageId":"1088","endLine":61,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1172","line":64,"column":23,"nodeType":"1087","messageId":"1088","endLine":64,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1173","line":66,"column":10,"nodeType":"1087","messageId":"1088","endLine":66,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1174","line":67,"column":10,"nodeType":"1087","messageId":"1088","endLine":67,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1175","line":70,"column":10,"nodeType":"1087","messageId":"1088","endLine":70,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1176","line":81,"column":9,"nodeType":"1087","messageId":"1088","endLine":81,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1177","line":83,"column":9,"nodeType":"1087","messageId":"1088","endLine":83,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1178","line":90,"column":9,"nodeType":"1087","messageId":"1088","endLine":90,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1179","line":93,"column":9,"nodeType":"1087","messageId":"1088","endLine":93,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1180","line":94,"column":9,"nodeType":"1087","messageId":"1088","endLine":94,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1167","line":98,"column":10,"nodeType":"1087","messageId":"1088","endLine":98,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1181","line":98,"column":30,"nodeType":"1087","messageId":"1088","endLine":98,"endColumn":51},{"ruleId":"1085","severity":1,"message":"1196","line":101,"column":11,"nodeType":"1087","messageId":"1088","endLine":101,"endColumn":20},{"ruleId":"1128","severity":1,"message":"1129","line":177,"column":52,"nodeType":"1130","messageId":"1131","endLine":177,"endColumn":54},{"ruleId":"1085","severity":1,"message":"1189","line":209,"column":14,"nodeType":"1087","messageId":"1088","endLine":209,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1182","line":304,"column":9,"nodeType":"1087","messageId":"1088","endLine":304,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1183","line":317,"column":9,"nodeType":"1087","messageId":"1088","endLine":317,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1184","line":325,"column":9,"nodeType":"1087","messageId":"1088","endLine":325,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1185","line":375,"column":9,"nodeType":"1087","messageId":"1088","endLine":375,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1111","line":381,"column":15,"nodeType":"1087","messageId":"1088","endLine":381,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1186","line":426,"column":12,"nodeType":"1087","messageId":"1088","endLine":426,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1111","line":431,"column":15,"nodeType":"1087","messageId":"1088","endLine":431,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1210","line":554,"column":9,"nodeType":"1087","messageId":"1088","endLine":554,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1211","line":682,"column":9,"nodeType":"1087","messageId":"1088","endLine":682,"endColumn":25},{"ruleId":"1085","severity":1,"message":"1190","line":691,"column":7,"nodeType":"1087","messageId":"1088","endLine":691,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1191","line":734,"column":13,"nodeType":"1087","messageId":"1088","endLine":734,"endColumn":15},{"ruleId":"1117","severity":1,"message":"1212","line":741,"column":6,"nodeType":"1119","endLine":741,"endColumn":8,"suggestions":"1275"},{"ruleId":"1085","severity":1,"message":"1195","line":748,"column":9,"nodeType":"1087","messageId":"1088","endLine":748,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1127","line":765,"column":9,"nodeType":"1087","messageId":"1088","endLine":765,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1197","line":780,"column":9,"nodeType":"1087","messageId":"1088","endLine":780,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1198","line":798,"column":9,"nodeType":"1087","messageId":"1088","endLine":798,"endColumn":19},{"ruleId":"1128","severity":1,"message":"1129","line":804,"column":50,"nodeType":"1130","messageId":"1131","endLine":804,"endColumn":52},{"ruleId":"1085","severity":1,"message":"1204","line":915,"column":9,"nodeType":"1087","messageId":"1088","endLine":915,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1205","line":916,"column":11,"nodeType":"1087","messageId":"1088","endLine":916,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1149","line":1,"column":46,"nodeType":"1087","messageId":"1088","endLine":1,"endColumn":52},{"ruleId":"1085","severity":1,"message":"1150","line":4,"column":8,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1151","line":4,"column":26,"nodeType":"1087","messageId":"1088","endLine":4,"endColumn":45},{"ruleId":"1085","severity":1,"message":"1152","line":8,"column":60,"nodeType":"1087","messageId":"1088","endLine":8,"endColumn":66},{"ruleId":"1085","severity":1,"message":"1153","line":9,"column":3,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":8},{"ruleId":"1085","severity":1,"message":"1154","line":9,"column":10,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1155","line":9,"column":22,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1156","line":9,"column":30,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1135","line":15,"column":53,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":64},{"ruleId":"1085","severity":1,"message":"1137","line":15,"column":66,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":79},{"ruleId":"1085","severity":1,"message":"1157","line":15,"column":81,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":85},{"ruleId":"1085","severity":1,"message":"1158","line":15,"column":87,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":96},{"ruleId":"1085","severity":1,"message":"1138","line":15,"column":98,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":103},{"ruleId":"1085","severity":1,"message":"1159","line":15,"column":105,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":110},{"ruleId":"1085","severity":1,"message":"1160","line":15,"column":112,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":123},{"ruleId":"1085","severity":1,"message":"1161","line":15,"column":125,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":130},{"ruleId":"1085","severity":1,"message":"1162","line":15,"column":132,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":141},{"ruleId":"1085","severity":1,"message":"1163","line":15,"column":143,"nodeType":"1087","messageId":"1088","endLine":15,"endColumn":154},{"ruleId":"1085","severity":1,"message":"1136","line":17,"column":22,"nodeType":"1087","messageId":"1088","endLine":17,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1164","line":18,"column":10,"nodeType":"1087","messageId":"1088","endLine":18,"endColumn":13},{"ruleId":"1085","severity":1,"message":"1139","line":19,"column":8,"nodeType":"1087","messageId":"1088","endLine":19,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1165","line":20,"column":8,"nodeType":"1087","messageId":"1088","endLine":20,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1166","line":24,"column":7,"nodeType":"1087","messageId":"1088","endLine":24,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1167","line":86,"column":10,"nodeType":"1087","messageId":"1088","endLine":86,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1168","line":125,"column":10,"nodeType":"1087","messageId":"1088","endLine":125,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1169","line":125,"column":20,"nodeType":"1087","messageId":"1088","endLine":125,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1170","line":126,"column":10,"nodeType":"1087","messageId":"1088","endLine":126,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1171","line":126,"column":23,"nodeType":"1087","messageId":"1088","endLine":126,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1172","line":129,"column":23,"nodeType":"1087","messageId":"1088","endLine":129,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1173","line":131,"column":10,"nodeType":"1087","messageId":"1088","endLine":131,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1174","line":132,"column":10,"nodeType":"1087","messageId":"1088","endLine":132,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1175","line":135,"column":10,"nodeType":"1087","messageId":"1088","endLine":135,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1176","line":142,"column":9,"nodeType":"1087","messageId":"1088","endLine":142,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1177","line":144,"column":9,"nodeType":"1087","messageId":"1088","endLine":144,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1178","line":150,"column":9,"nodeType":"1087","messageId":"1088","endLine":150,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1179","line":153,"column":9,"nodeType":"1087","messageId":"1088","endLine":153,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1180","line":154,"column":9,"nodeType":"1087","messageId":"1088","endLine":154,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1167","line":158,"column":10,"nodeType":"1087","messageId":"1088","endLine":158,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1181","line":158,"column":30,"nodeType":"1087","messageId":"1088","endLine":158,"endColumn":51},{"ruleId":"1085","severity":1,"message":"1182","line":164,"column":9,"nodeType":"1087","messageId":"1088","endLine":164,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1183","line":176,"column":9,"nodeType":"1087","messageId":"1088","endLine":176,"endColumn":29},{"ruleId":"1085","severity":1,"message":"1184","line":184,"column":9,"nodeType":"1087","messageId":"1088","endLine":184,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1185","line":234,"column":9,"nodeType":"1087","messageId":"1088","endLine":234,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1111","line":239,"column":15,"nodeType":"1087","messageId":"1088","endLine":239,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1186","line":285,"column":12,"nodeType":"1087","messageId":"1088","endLine":285,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1111","line":290,"column":15,"nodeType":"1087","messageId":"1088","endLine":290,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1187","line":317,"column":12,"nodeType":"1087","messageId":"1088","endLine":317,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1188","line":320,"column":12,"nodeType":"1087","messageId":"1088","endLine":320,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1189","line":324,"column":12,"nodeType":"1087","messageId":"1088","endLine":324,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1190","line":427,"column":7,"nodeType":"1087","messageId":"1088","endLine":427,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1191","line":467,"column":13,"nodeType":"1087","messageId":"1088","endLine":467,"endColumn":15},{"ruleId":"1117","severity":1,"message":"1192","line":474,"column":6,"nodeType":"1119","endLine":474,"endColumn":8,"suggestions":"1276"},{"ruleId":"1085","severity":1,"message":"1194","line":476,"column":12,"nodeType":"1087","messageId":"1088","endLine":476,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1195","line":480,"column":9,"nodeType":"1087","messageId":"1088","endLine":480,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1127","line":497,"column":9,"nodeType":"1087","messageId":"1088","endLine":497,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1196","line":512,"column":11,"nodeType":"1087","messageId":"1088","endLine":512,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1197","line":533,"column":9,"nodeType":"1087","messageId":"1088","endLine":533,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1198","line":551,"column":9,"nodeType":"1087","messageId":"1088","endLine":551,"endColumn":19},{"ruleId":"1128","severity":1,"message":"1129","line":557,"column":50,"nodeType":"1130","messageId":"1131","endLine":557,"endColumn":52},{"ruleId":"1085","severity":1,"message":"1199","line":562,"column":9,"nodeType":"1087","messageId":"1088","endLine":562,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1200","line":582,"column":9,"nodeType":"1087","messageId":"1088","endLine":582,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1201","line":602,"column":9,"nodeType":"1087","messageId":"1088","endLine":602,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1202","line":603,"column":9,"nodeType":"1087","messageId":"1088","endLine":603,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1203","line":605,"column":9,"nodeType":"1087","messageId":"1088","endLine":605,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1204","line":614,"column":9,"nodeType":"1087","messageId":"1088","endLine":614,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1205","line":615,"column":11,"nodeType":"1087","messageId":"1088","endLine":615,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1137","line":1,"column":37,"nodeType":"1087","messageId":"1088","endLine":1,"endColumn":50},{"ruleId":"1085","severity":1,"message":"1157","line":1,"column":51,"nodeType":"1087","messageId":"1088","endLine":1,"endColumn":55},{"ruleId":"1085","severity":1,"message":"1152","line":7,"column":41,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":47},{"ruleId":"1085","severity":1,"message":"1214","line":7,"column":48,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":56},{"ruleId":"1085","severity":1,"message":"1097","line":7,"column":83,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":92},{"ruleId":"1085","severity":1,"message":"1215","line":7,"column":121,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":133},{"ruleId":"1085","severity":1,"message":"1216","line":10,"column":10,"nodeType":"1087","messageId":"1088","endLine":10,"endColumn":15},{"ruleId":"1085","severity":1,"message":"1217","line":11,"column":10,"nodeType":"1087","messageId":"1088","endLine":11,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1218","line":12,"column":10,"nodeType":"1087","messageId":"1088","endLine":12,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1219","line":13,"column":10,"nodeType":"1087","messageId":"1088","endLine":13,"endColumn":30},{"ruleId":"1085","severity":1,"message":"1170","line":54,"column":10,"nodeType":"1087","messageId":"1088","endLine":54,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1171","line":54,"column":23,"nodeType":"1087","messageId":"1088","endLine":54,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1220","line":56,"column":10,"nodeType":"1087","messageId":"1088","endLine":56,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1221","line":56,"column":20,"nodeType":"1087","messageId":"1088","endLine":56,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1175","line":59,"column":10,"nodeType":"1087","messageId":"1088","endLine":59,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1222","line":60,"column":10,"nodeType":"1087","messageId":"1088","endLine":60,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1223","line":60,"column":18,"nodeType":"1087","messageId":"1088","endLine":60,"endColumn":27},{"ruleId":"1085","severity":1,"message":"1224","line":61,"column":10,"nodeType":"1087","messageId":"1088","endLine":61,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1225","line":61,"column":18,"nodeType":"1087","messageId":"1088","endLine":61,"endColumn":27},{"ruleId":"1085","severity":1,"message":"1226","line":62,"column":10,"nodeType":"1087","messageId":"1088","endLine":62,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1227","line":64,"column":10,"nodeType":"1087","messageId":"1088","endLine":64,"endColumn":23},{"ruleId":"1085","severity":1,"message":"1228","line":64,"column":25,"nodeType":"1087","messageId":"1088","endLine":64,"endColumn":41},{"ruleId":"1085","severity":1,"message":"1229","line":77,"column":10,"nodeType":"1087","messageId":"1088","endLine":77,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1230","line":77,"column":23,"nodeType":"1087","messageId":"1088","endLine":77,"endColumn":37},{"ruleId":"1085","severity":1,"message":"1167","line":78,"column":10,"nodeType":"1087","messageId":"1088","endLine":78,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1231","line":82,"column":9,"nodeType":"1087","messageId":"1088","endLine":82,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1232","line":84,"column":8,"nodeType":"1087","messageId":"1088","endLine":84,"endColumn":11},{"ruleId":"1085","severity":1,"message":"1233","line":166,"column":7,"nodeType":"1087","messageId":"1088","endLine":166,"endColumn":22},{"ruleId":"1085","severity":1,"message":"1234","line":169,"column":11,"nodeType":"1087","messageId":"1088","endLine":169,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1235","line":169,"column":22,"nodeType":"1087","messageId":"1088","endLine":169,"endColumn":27},{"ruleId":"1085","severity":1,"message":"1124","line":333,"column":9,"nodeType":"1087","messageId":"1088","endLine":333,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1200","line":347,"column":7,"nodeType":"1087","messageId":"1088","endLine":347,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1236","line":369,"column":7,"nodeType":"1087","messageId":"1088","endLine":369,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1111","line":374,"column":13,"nodeType":"1087","messageId":"1088","endLine":374,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1237","line":432,"column":7,"nodeType":"1087","messageId":"1088","endLine":432,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1111","line":437,"column":13,"nodeType":"1087","messageId":"1088","endLine":437,"endColumn":24},{"ruleId":"1085","severity":1,"message":"1186","line":453,"column":10,"nodeType":"1087","messageId":"1088","endLine":453,"endColumn":26},{"ruleId":"1085","severity":1,"message":"1234","line":465,"column":11,"nodeType":"1087","messageId":"1088","endLine":465,"endColumn":20},{"ruleId":"1085","severity":1,"message":"1235","line":465,"column":22,"nodeType":"1087","messageId":"1088","endLine":465,"endColumn":27},{"ruleId":"1085","severity":1,"message":"1111","line":514,"column":13,"nodeType":"1087","messageId":"1088","endLine":514,"endColumn":24},{"ruleId":"1117","severity":1,"message":"1238","line":634,"column":5,"nodeType":"1119","endLine":634,"endColumn":7,"suggestions":"1277"},{"ruleId":"1240","severity":1,"message":"1241","line":652,"column":12,"nodeType":"1087","messageId":"1242","endLine":652,"endColumn":28},{"ruleId":"1085","severity":1,"message":"1127","line":656,"column":7,"nodeType":"1087","messageId":"1088","endLine":656,"endColumn":16},{"ruleId":"1128","severity":1,"message":"1129","line":677,"column":57,"nodeType":"1130","messageId":"1131","endLine":677,"endColumn":59},{"ruleId":"1128","severity":1,"message":"1129","line":694,"column":48,"nodeType":"1130","messageId":"1131","endLine":694,"endColumn":50},{"ruleId":"1085","severity":1,"message":"1243","line":701,"column":7,"nodeType":"1087","messageId":"1088","endLine":701,"endColumn":24},{"ruleId":"1244","severity":1,"message":"1245","line":40,"column":1,"nodeType":"1246","endLine":40,"endColumn":82},{"ruleId":"1085","severity":1,"message":"1140","line":6,"column":8,"nodeType":"1087","messageId":"1088","endLine":6,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1141","line":7,"column":10,"nodeType":"1087","messageId":"1088","endLine":7,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1259","line":9,"column":27,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":33},{"ruleId":"1085","severity":1,"message":"1260","line":9,"column":35,"nodeType":"1087","messageId":"1088","endLine":9,"endColumn":40},{"ruleId":"1085","severity":1,"message":"1261","line":10,"column":10,"nodeType":"1087","messageId":"1088","endLine":10,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1143","line":26,"column":9,"nodeType":"1087","messageId":"1088","endLine":26,"endColumn":12},{"ruleId":"1085","severity":1,"message":"1144","line":26,"column":14,"nodeType":"1087","messageId":"1088","endLine":26,"endColumn":17},{"ruleId":"1085","severity":1,"message":"1145","line":26,"column":26,"nodeType":"1087","messageId":"1088","endLine":26,"endColumn":30},{"ruleId":"1085","severity":1,"message":"1147","line":26,"column":32,"nodeType":"1087","messageId":"1088","endLine":26,"endColumn":40},{"ruleId":"1085","severity":1,"message":"1247","line":27,"column":10,"nodeType":"1087","messageId":"1088","endLine":27,"endColumn":14},{"ruleId":"1085","severity":1,"message":"1248","line":27,"column":17,"nodeType":"1087","messageId":"1088","endLine":27,"endColumn":31},{"ruleId":"1085","severity":1,"message":"1249","line":27,"column":33,"nodeType":"1087","messageId":"1088","endLine":27,"endColumn":48},{"ruleId":"1085","severity":1,"message":"1250","line":27,"column":50,"nodeType":"1087","messageId":"1088","endLine":27,"endColumn":72},{"ruleId":"1085","severity":1,"message":"1251","line":29,"column":7,"nodeType":"1087","messageId":"1088","endLine":29,"endColumn":15},{"ruleId":"1252","severity":1,"message":"1253","line":96,"column":75,"nodeType":"1254","messageId":"1255","endLine":96,"endColumn":76,"suggestions":"1278"},{"ruleId":"1117","severity":1,"message":"1257","line":118,"column":5,"nodeType":"1119","endLine":118,"endColumn":7,"suggestions":"1279"},{"ruleId":"1085","severity":1,"message":"1262","line":1,"column":52,"nodeType":"1087","messageId":"1088","endLine":1,"endColumn":60},{"ruleId":"1085","severity":1,"message":"1263","line":12,"column":28,"nodeType":"1087","messageId":"1088","endLine":12,"endColumn":36},"no-native-reassign",["1280"],"no-negated-in-lhs",["1281"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'EditFloormap' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Table' is defined but never used.","'CardTitle' is defined but never used.","'DisplayEntries' is defined but never used.","'Rectangle' is defined but never used.","'Tabs' is defined but never used.","'PropTypes' is defined but never used.","'DashBoard' is defined but never used.","'Icon' is defined but never used.","'marker' is defined but never used.","'SelectionState' is defined but never used.","'history' is defined but never used.","'setdisplayPolygonControl' is assigned a value but never used.","'mapLayers' is assigned a value but never used.","'myIcon' is assigned a value but never used.","'classes' is assigned a value but never used.","'editRefPoly' is assigned a value but never used.","'handleBoundary' is assigned a value but never used.","'_leaflet_id' is assigned a value but never used.","'defaultBoard' is assigned a value but never used.","'boards' is assigned a value but never used.","'colors' is assigned a value but never used.","'position1' is assigned a value but never used.","'handleChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'markers'. Either include it or remove the dependency array.","ArrayExpression",["1282"],"'DefaultIcon' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'handleUpdate' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'togglePopup' is assigned a value but never used.","'customMarkerIcon' is assigned a value but never used.","'_onCreate' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ButtonGroup' is defined but never used.","'Button' is defined but never used.","'ButtonToolbar' is defined but never used.","'Label' is defined but never used.","'Tooltip' is defined but never used.","'Map1' is defined but never used.","'Link' is defined but never used.","'SlickSliderStyle1' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'div' is defined but never used.","'CardBody' is defined but never used.","'UncontrolledCollapse' is defined but never used.","'useMap' is defined but never used.","'LayersControl2' is defined but never used.","'ControlledLayerItem' is defined but never used.","'Marker' is defined but never used.","'Popup' is defined but never used.","'LayerGroup' is defined but never used.","'Circle' is defined but never used.","'GeoJSON' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'ModalHeader' is defined but never used.","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'set' is defined but never used.","'ReactTooltip' is defined but never used.","'useStyles' is assigned a value but never used.","'selectedLayerIndex' is assigned a value but never used.","'boundary' is assigned a value but never used.","'setBoundary' is assigned a value but never used.","'newPosition' is assigned a value but never used.","'setNewPosition' is assigned a value but never used.","'setCustomLayer' is assigned a value but never used.","'activeFloorPolygons' is assigned a value but never used.","'activeFloorBoundary' is assigned a value but never used.","'isEdit' is assigned a value but never used.","'fgRef' is assigned a value but never used.","'leaflet' is assigned a value but never used.","'polygon' is assigned a value but never used.","'center' is assigned a value but never used.","'rectangle' is assigned a value but never used.","'setSelectedLayerIndex' is assigned a value but never used.","'updateFloor' is assigned a value but never used.","'_onFeatureGroupReady' is assigned a value but never used.","'handleDrawPolygonClick' is assigned a value but never used.","'onShapeDrawn' is assigned a value but never used.","'handleLayerClick' is defined but never used.","'onEditPath' is defined but never used.","'onCreate' is defined but never used.","'onDeleted' is defined but never used.","'floor' is assigned a value but never used.","'ml' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'mapLayers' and 'refno'. Either include them or remove the dependency array.",["1283"],"'toggle' is defined but never used.","'moveActiveFloor' is assigned a value but never used.","'detailLcl' is assigned a value but never used.","'_onEdited' is assigned a value but never used.","'_onDeleted' is assigned a value but never used.","'deleteActiveFloor' is assigned a value but never used.","'handleAddFloor' is assigned a value but never used.","'changeHandlerDesc' is assigned a value but never used.","'updateIsEdit' is assigned a value but never used.","'handleSaveFloor' is assigned a value but never used.","'handleEditPolygonClick' is assigned a value but never used.","'drawingLocal' is assigned a value but never used.","'CircleMarker' is defined but never used.","'circleMarker' is defined but never used.","'tooltip' is defined but never used.","'addFloorCounter' is assigned a value but never used.","'detailsLocal' is assigned a value but never used.","'addressCardStyle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'FloorId', 'buildingCenter', 'mapLayers', and 'refno'. Either include them or remove the dependency array.",["1284"],"'Polyline' is defined but never used.","'useMapEvents' is defined but never used.","'popup' is defined but never used.","'text' is defined but never used.","'divIcon' is defined but never used.","'renderToStaticMarkup' is defined but never used.","'position' is assigned a value but never used.","'setPosition' is assigned a value but never used.","'floors' is assigned a value but never used.","'setFloors' is assigned a value but never used.","'blocks' is assigned a value but never used.","'setBlocks' is assigned a value but never used.","'newText' is assigned a value but never used.","'showDrawBlock' is assigned a value but never used.","'setShowDrawBlock' is assigned a value but never used.","'activeLayer' is assigned a value but never used.","'setActiveLayer' is assigned a value but never used.","'editLayerRef' is assigned a value but never used.","'map' is assigned a value but never used.","'handleEditFloor' is assigned a value but never used.","'layerType' is assigned a value but never used.","'layer' is assigned a value but never used.","'addBoundaries' is assigned a value but never used.","'addPolygon' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'mapLayers', 'refno', and 'updateFloor'. Either include them or remove the dependency array.",["1285"],"no-redeclare","'handleLayerClick' is already defined.","redeclared","'changeHandlerText' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Grid' is defined but never used.","'TableHeaderRow' is defined but never used.","'TableEditColumn' is defined but never used.","'TableInlineCellEditing' is defined but never used.","'getRowId' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\'.","TemplateElement","unnecessaryEscape",["1286","1287"],"React Hook useEffect has missing dependencies: 'deleteHandler' and 'id'. Either include them or remove the dependency array. If 'setButtonVal' needs the current value of 'id', you can also switch to useReducer instead of useState and read 'id' in the reducer.",["1288"],"'Router' is defined but never used.","'Route' is defined but never used.","'Path' is defined but never used.","'useState' is defined but never used.","'DomEvent' is defined but never used.",["1280"],["1281"],["1289"],["1290"],["1291"],["1292"],["1293","1294"],["1295"],["1280"],["1281"],["1296"],["1297"],["1298"],["1299"],["1300","1301"],["1302"],"no-global-assign","no-unsafe-negation",{"desc":"1303","fix":"1304"},{"desc":"1305","fix":"1306"},{"desc":"1307","fix":"1308"},{"desc":"1309","fix":"1310"},{"messageId":"1311","fix":"1312","desc":"1313"},{"messageId":"1314","fix":"1315","desc":"1316"},{"desc":"1317","fix":"1318"},{"desc":"1303","fix":"1319"},{"desc":"1305","fix":"1320"},{"desc":"1307","fix":"1321"},{"desc":"1309","fix":"1322"},{"messageId":"1311","fix":"1323","desc":"1313"},{"messageId":"1314","fix":"1324","desc":"1316"},{"desc":"1317","fix":"1325"},{"desc":"1303","fix":"1326"},{"desc":"1307","fix":"1327"},{"desc":"1305","fix":"1328"},{"desc":"1309","fix":"1329"},{"messageId":"1311","fix":"1330","desc":"1313"},{"messageId":"1314","fix":"1331","desc":"1316"},{"desc":"1317","fix":"1332"},"Update the dependencies array to be: [markers, searchTerm]",{"range":"1333","text":"1334"},"Update the dependencies array to be: [mapLayers, refno]",{"range":"1335","text":"1336"},"Update the dependencies array to be: [FloorId, buildingCenter, mapLayers, refno]",{"range":"1337","text":"1338"},"Update the dependencies array to be: [mapLayers, refno, updateFloor]",{"range":"1339","text":"1340"},"removeEscape",{"range":"1341","text":"1342"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1343","text":"1344"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [deleteHandler, id]",{"range":"1345","text":"1346"},{"range":"1347","text":"1334"},{"range":"1348","text":"1336"},{"range":"1349","text":"1338"},{"range":"1350","text":"1340"},{"range":"1351","text":"1342"},{"range":"1352","text":"1344"},{"range":"1353","text":"1346"},{"range":"1354","text":"1334"},{"range":"1355","text":"1338"},{"range":"1356","text":"1336"},{"range":"1357","text":"1340"},{"range":"1358","text":"1342"},{"range":"1359","text":"1344"},{"range":"1360","text":"1346"},[10637,10649],"[markers, searchTerm]",[11743,11745],"[mapLayers, refno]",[18660,18662],"[FloorId, buildingCenter, mapLayers, refno]",[16035,16037],"[mapLayers, refno, updateFloor]",[2874,2875],"",[2874,2874],"\\",[3371,3373],"[deleteHandler, id]",[10637,10649],[11743,11745],[18660,18662],[16035,16037],[2874,2875],[2874,2874],[3371,3373],[10637,10649],[18660,18662],[11743,11745],[16035,16037],[2874,2875],[2874,2874],[3371,3373]]