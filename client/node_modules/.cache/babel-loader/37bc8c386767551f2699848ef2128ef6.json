{"ast":null,"code":"import _toConsumableArray from \"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _get from \"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _objectSpread from \"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _assertThisInitialized from \"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/LayerControl2.js\";\nimport React, { Children, cloneElement, Component, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Control, DomUtil, DomEvent } from \"leaflet\";\nimport { withLeaflet, MapControl, LeafletProvider } from \"react-leaflet\";\nimport { IconButton } from \"@material-ui/core\";\nimport LayerIcon from \"@material-ui/icons/Layers\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport TerrainIcon from \"@material-ui/icons/Terrain\";\nimport RecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar icons = {\n  BaseLayers: /*#__PURE__*/_jsxDEV(TerrainIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 15\n  }, this),\n  Rectangles: /*#__PURE__*/_jsxDEV(StopIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 15\n  }, this),\n  Circles: /*#__PURE__*/_jsxDEV(RecordIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this)\n};\nexport var ControlledLayer = /*#__PURE__*/function (_Component) {\n  _inherits(ControlledLayer, _Component);\n\n  var _super = _createSuper(ControlledLayer);\n\n  function ControlledLayer() {\n    _classCallCheck(this, ControlledLayer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ControlledLayer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_ref) {\n      var checked = _ref.checked;\n\n      if (this.props.leaflet.map == null) {\n        return;\n      } // Handle dynamically (un)checking the layer => adding/removing from the map\n\n\n      if (this.props.checked === true && (checked == null || checked === false)) {\n        this.props.leaflet.map.addLayer(this.layer);\n      } else if (checked === true && (this.props.checked == null || this.props.checked === false)) {\n        this.props.leaflet.map.removeLayer(this.layer);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removeLayerControl(this.layer);\n    }\n  }, {\n    key: \"addLayer\",\n    value: function addLayer() {\n      throw new Error(\"Must be implemented in extending class\");\n    }\n  }, {\n    key: \"removeLayer\",\n    value: function removeLayer(layer) {\n      this.props.removeLayer(layer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children ? /*#__PURE__*/_jsxDEV(LeafletProvider, {\n        value: this.contextValue,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this) : null;\n    }\n  }]);\n\n  return ControlledLayer;\n}(Component);\nexport var ControlledLayerItem = /*#__PURE__*/function (_ControlledLayer) {\n  _inherits(ControlledLayerItem, _ControlledLayer);\n\n  var _super2 = _createSuper(ControlledLayerItem);\n\n  function ControlledLayerItem(props) {\n    var _this;\n\n    _classCallCheck(this, ControlledLayerItem);\n\n    _this = _super2.call(this, props);\n    _this.backUpLayer = {};\n\n    _this.addLayer = function (layer) {\n      _this.layer = layer; // Keep layer reference to handle dynamic changes of props\n\n      var _this$props = _this.props,\n          addGroupedLayer = _this$props.addGroupedLayer,\n          checked = _this$props.checked,\n          name = _this$props.name,\n          group = _this$props.group;\n      addGroupedLayer(layer, name, checked, group);\n    };\n\n    _this.contextValue = _objectSpread(_objectSpread({}, props.leaflet), {}, {\n      layerContainer: {\n        addLayer: _this.addLayer.bind(_assertThisInitialized(_this)),\n        removeLayer: _this.removeLayer.bind(_assertThisInitialized(_this))\n      }\n    });\n    return _this;\n  }\n\n  return ControlledLayerItem;\n}(ControlledLayer);\n\nvar LayerControl = /*#__PURE__*/function (_MapControl) {\n  _inherits(LayerControl, _MapControl);\n\n  var _super3 = _createSuper(LayerControl);\n\n  function LayerControl(props, context) {\n    var _this2;\n\n    _classCallCheck(this, LayerControl);\n\n    _this2 = _super3.call(this, props);\n\n    _this2.openMenu = function () {\n      _this2.setState({\n        menuOpen: true\n      });\n    };\n\n    _this2.closeMenu = function () {\n      _this2.setState({\n        menuOpen: false\n      });\n    };\n\n    _this2.addGroupedLayer = function (layer, name, checked, group) {\n      if (checked && _this2.props.leaflet.map != null) {\n        _this2.props.leaflet.map.addLayer(layer);\n      }\n\n      _this2.setState(function (prevState, props) {\n        var currentLayers = _objectSpread({}, prevState.layers);\n\n        var currentGroup = currentLayers[group];\n        currentGroup = currentGroup ? [].concat(_toConsumableArray(currentGroup.filter(function (x) {\n          return x.name !== name;\n        })), [{\n          layer: layer,\n          name: name,\n          checked: checked,\n          group: group\n        }]) : [{\n          layer: layer,\n          name: name,\n          checked: checked,\n          group: group\n        }];\n        currentLayers[group] = currentGroup;\n        return {\n          layers: currentLayers\n        };\n      }); // bad implementation\n\n\n      var currentGroup = _this2._layers[group];\n      currentGroup = currentGroup ? [].concat(_toConsumableArray(currentGroup.filter(function (x) {\n        return x.name !== name;\n      })), [{\n        layer: layer,\n        name: name,\n        checked: checked,\n        group: group\n      }]) : [{\n        layer: layer,\n        name: name,\n        checked: checked,\n        group: group\n      }];\n\n      var layers = _objectSpread({}, _this2._layers);\n\n      layers[group] = currentGroup;\n      _this2._layers = layers;\n    };\n\n    _this2.toggleLayer = function (layerInput) {\n      var layer = layerInput.layer,\n          name = layerInput.name,\n          checked = layerInput.checked,\n          group = layerInput.group;\n      console.log(layer, name, checked, group);\n\n      var layers = _objectSpread({}, _this2.state.layers);\n\n      layers[group] = layers[group].map(function (l) {\n        if (l.name === name) {\n          l.checked = true; //!l.checked;\n\n          debugger;\n\n          for (var prop in _this2.props.leaflet.map._layers) {\n            console.log(_this2.props.leaflet.map._layers[prop]);\n          }\n\n          _this2.props.leaflet.map.addLayer(layer);\n        } else {\n          l.checked = false; //this.removeLayer(layer)\n        } //   l.checked? this.props.leaflet.map.addLayer(layer) &&\n        //                 console.log(name, \"adding this layer\")\n        //     : this.removeLayer(layer);\n\n\n        return l;\n      });\n\n      _this2.setState({\n        layers: layers\n      });\n    };\n\n    _this2.onCollapseClick = function (name) {\n      var menus = _this2.state.menus;\n      menus.includes(name) ? _this2.setState({\n        menus: _toConsumableArray(_this2.state.menus.filter(function (x) {\n          return x !== name;\n        }))\n      }) : _this2.setState({\n        menus: [].concat(_toConsumableArray(menus), [name])\n      });\n    };\n\n    _this2.isMenuOpen = function (name) {\n      var open = _this2.state.menus.includes(name);\n\n      return open;\n    };\n\n    _this2.controlProps = {\n      addGroupedLayer: _this2.addGroupedLayer.bind(_assertThisInitialized(_this2)),\n      removeLayer: _this2.removeLayer.bind(_assertThisInitialized(_this2)),\n      leaflet: props.leaflet\n    };\n    _this2._layers = {};\n    _this2.state = {\n      menuOpen: false,\n      layers: {},\n      menus: []\n    };\n    return _this2;\n  }\n\n  _createClass(LayerControl, [{\n    key: \"removeLayer\",\n    value: function removeLayer(layer) {\n      if (this.props.leaflet.map != null) {\n        this.props.leaflet.map.removeLayer(layer);\n      }\n    } //create and return a leaflet object you want to extend\n\n  }, {\n    key: \"createLeafletElement\",\n    value: function createLeafletElement(props) {\n      var _this3 = this;\n\n      // extend control from leaflet\n      var MyControl = Control.extend({\n        // there are only two options we can have here for extending a control\n        // https://leafletjs.com/reference-1.5.0.html#control\n        // Should return the container DOM element for the control and add listeners on relevant map events\n        onAdd: function onAdd(map) {\n          _this3.container = DomUtil.create(\"div\");\n          _this3.map = map;\n          return _this3.container;\n        },\n        // this one is optional\n        onRemove: function onRemove(map) {}\n      }); // return new instance of our control and pass it all the props\n\n      return new MyControl(props);\n    }\n  }, {\n    key: \"updateLeafletElement\",\n    value: function updateLeafletElement(fromProps, toProps) {\n      _get(_getPrototypeOf(LayerControl.prototype), \"updateLeafletElement\", this).call(this, fromProps, toProps);\n\n      console.log(fromProps, toProps); // this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount(props) {\n      _get(_getPrototypeOf(LayerControl.prototype), \"componentDidMount\", this).call(this);\n\n      this.forceUpdate(); // render react component\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      if (!this.leafletElement || !this.leafletElement.getContainer()) {\n        return null;\n      } // console.log(this.state.baseLayers);\n\n\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Paper, _objectSpread(_objectSpread({\n          onMouseEnter: this.openMenu,\n          onMouseLeave: this.closeMenu\n        }, this.props), {}, {\n          children: [this.state.menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: 10\n            },\n            children: Object.keys(this.state.layers).map(function (g) {\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  onClick: function onClick() {\n                    return _this4.onCollapseClick(\"\".concat(g));\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: icons[g]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 25\n                  }, _this4), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: g\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 25\n                  }, _this4), _this4.isMenuOpen(g) ? /*#__PURE__*/_jsxDEV(ExpandLess, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 47\n                  }, _this4) : /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 64\n                  }, _this4)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, _this4), /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, _this4), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, _this4), /*#__PURE__*/_jsxDEV(Collapse, {\n                  in: _this4.isMenuOpen(g),\n                  timeout: \"auto\",\n                  unmountOnExit: true,\n                  children: /*#__PURE__*/_jsxDEV(List, {\n                    children: _this4.state.layers[g].map(function (l) {\n                      return /*#__PURE__*/_jsxDEV(ListItem, {\n                        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                            onClick: function onClick() {\n                              return _this4.toggleLayer(l);\n                            },\n                            edge: \"start\",\n                            checked: l.checked\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 275,\n                            columnNumber: 35\n                          }, _this4)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 274,\n                          columnNumber: 33\n                        }, _this4), /*#__PURE__*/_jsxDEV(ListItemText, {\n                          primary: l.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 281,\n                          columnNumber: 33\n                        }, _this4)]\n                      }, l.name, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 273,\n                        columnNumber: 31\n                      }, _this4);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 25\n                  }, _this4)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 23\n                }, _this4)]\n              }, g, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, _this4);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), !this.state.menuOpen && /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(LayerIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), this.leafletElement.getContainer()), Children.map(this.props.children, function (child) {\n          return child ? /*#__PURE__*/cloneElement(child, _this4.controlProps) : null;\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return LayerControl;\n}(MapControl);\n\nexport default _c = withLeaflet(LayerControl);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/likhitha/Documents/Projrctcms_final/CMSIndoor_Final_660039/client/src/components/dashboard/LayerControl2.js"],"names":["React","Children","cloneElement","Component","useState","ReactDOM","Paper","Typography","ListItemText","List","ListItem","Divider","ListItemIcon","Collapse","Checkbox","Control","DomUtil","DomEvent","withLeaflet","MapControl","LeafletProvider","IconButton","LayerIcon","ExpandLess","ExpandMore","TerrainIcon","RecordIcon","StopIcon","icons","BaseLayers","Rectangles","Circles","ControlledLayer","checked","props","leaflet","map","addLayer","layer","removeLayer","removeLayerControl","Error","children","contextValue","ControlledLayerItem","backUpLayer","addGroupedLayer","name","group","layerContainer","bind","LayerControl","context","openMenu","setState","menuOpen","closeMenu","prevState","currentLayers","layers","currentGroup","filter","x","_layers","toggleLayer","layerInput","console","log","state","l","prop","onCollapseClick","menus","includes","isMenuOpen","open","controlProps","MyControl","extend","onAdd","container","create","onRemove","fromProps","toProps","forceUpdate","leafletElement","getContainer","createPortal","padding","Object","keys","g","child"],"mappings":"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","sourcesContent":["import React, { Children, cloneElement, Component, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Control, DomUtil, DomEvent } from \"leaflet\";\nimport { withLeaflet, MapControl, LeafletProvider } from \"react-leaflet\";\nimport { IconButton } from \"@material-ui/core\";\nimport LayerIcon from \"@material-ui/icons/Layers\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport TerrainIcon from \"@material-ui/icons/Terrain\";\nimport RecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nconst icons = {\n  BaseLayers: <TerrainIcon />,\n  Rectangles: <StopIcon />,\n  Circles: <RecordIcon />\n};\n\nexport class ControlledLayer extends Component {\n  componentDidUpdate({ checked }) {\n    if (this.props.leaflet.map == null) {\n      return;\n    }\n    // Handle dynamically (un)checking the layer => adding/removing from the map\n    if (this.props.checked === true && (checked == null || checked === false)) {\n      this.props.leaflet.map.addLayer(this.layer);\n    } else if (\n      checked === true &&\n      (this.props.checked == null || this.props.checked === false)\n    ) {\n      this.props.leaflet.map.removeLayer(this.layer);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeLayerControl(this.layer);\n  }\n\n  addLayer() {\n    throw new Error(\"Must be implemented in extending class\");\n  }\n\n  removeLayer(layer) {\n    this.props.removeLayer(layer);\n  }\n\n  render() {\n    const { children } = this.props;\n    return children ? (\n      <LeafletProvider value={this.contextValue}>{children}</LeafletProvider>\n    ) : null;\n  }\n}\n\nexport class ControlledLayerItem extends ControlledLayer {\n  constructor(props) {\n\n    \n    super(props);\n    this.contextValue = {\n      ...props.leaflet,\n      layerContainer: {\n        addLayer: this.addLayer.bind(this),\n        removeLayer: this.removeLayer.bind(this)\n      }\n    };\n  }\nbackUpLayer = {};\n  addLayer = layer => {\n    this.layer = layer; // Keep layer reference to handle dynamic changes of props\n    const { addGroupedLayer, checked, name, group } = this.props;\n    addGroupedLayer(layer, name, checked, group);\n  };\n}\n\nclass LayerControl extends MapControl {\n  constructor(props, context) {\n    super(props);\n    this.controlProps = {\n      addGroupedLayer: this.addGroupedLayer.bind(this),\n      removeLayer: this.removeLayer.bind(this),\n      leaflet: props.leaflet\n    };\n    this._layers = {};\n\n    this.state = {\n      menuOpen: false,\n      layers: {},\n      menus: []\n    };\n  }\n\n  openMenu = () => {\n    this.setState({ menuOpen: true });\n  };\n  closeMenu = () => {\n    this.setState({ menuOpen: false });\n  };\n\n  addGroupedLayer = (layer, name, checked, group) => {\n    if (checked && this.props.leaflet.map != null) {\n      this.props.leaflet.map.addLayer(layer);\n    }\n\n    this.setState((prevState, props) => {\n      let currentLayers = { ...prevState.layers };\n      let currentGroup = currentLayers[group];\n\n      currentGroup = currentGroup\n        ? [\n            ...currentGroup.filter(x => x.name !== name),\n            { layer, name, checked, group }\n          ]\n        : [{ layer, name, checked, group }];\n      currentLayers[group] = currentGroup;\n      return {\n        layers: currentLayers\n      };\n    });\n\n    // bad implementation\n\n    let currentGroup = this._layers[group];\n\n    currentGroup = currentGroup\n      ? [\n          ...currentGroup.filter(x => x.name !== name),\n          { layer, name, checked, group }\n        ]\n      : [{ layer, name, checked, group }];\n\n    let layers = { ...this._layers };\n    layers[group] = currentGroup;\n\n    this._layers = layers;\n  };\n\n  removeLayer(layer) {\n    if (this.props.leaflet.map != null) {\n      this.props.leaflet.map.removeLayer(layer);\n    }\n  }\n  //create and return a leaflet object you want to extend\n  createLeafletElement(props) {\n    // extend control from leaflet\n    const MyControl = Control.extend({\n      // there are only two options we can have here for extending a control\n      // https://leafletjs.com/reference-1.5.0.html#control\n\n      // Should return the container DOM element for the control and add listeners on relevant map events\n      onAdd: map => {\n        this.container = DomUtil.create(\"div\");\n        this.map = map;\n        return this.container;\n      },\n      // this one is optional\n      onRemove: map => {}\n    });\n\n    // return new instance of our control and pass it all the props\n    return new MyControl(props);\n  }\n\n  updateLeafletElement(fromProps, toProps) {\n      \n    super.updateLeafletElement(fromProps, toProps);\n    console.log(fromProps, toProps);\n    // this.forceUpdate();\n  }\n\n  componentDidMount(props) {\n    super.componentDidMount();\n    this.forceUpdate();\n    // render react component\n  }\n\n  toggleLayer = layerInput => {\n    const { layer, name, checked, group } = layerInput;\n    console.log(layer, name, checked, group);\n    let layers = { ...this.state.layers };\n\n    layers[group] = layers[group].map(l => {\n    \n        if (l.name === name) {\n        l.checked = true;//!l.checked;\n        debugger;\n        for (var prop in this.props.leaflet.map._layers) {\n            console.log(this.props.leaflet.map._layers[prop]);\n        \n        }    \n\n        this.props.leaflet.map.addLayer(layer)\n       \n      }else{\n        l.checked = false;\n        \n        //this.removeLayer(layer)\n      }\n\n    //   l.checked? this.props.leaflet.map.addLayer(layer) &&\n    //                 console.log(name, \"adding this layer\")\n    //     : this.removeLayer(layer);\n\n      return l;\n    });\n\n    this.setState({\n      layers\n    });\n  };\n\n  onCollapseClick = name => {\n    const { menus } = this.state;\n\n    menus.includes(name)\n      ? this.setState({\n          menus: [...this.state.menus.filter(x => x !== name)]\n        })\n      : this.setState({\n          menus: [...menus, name]\n        });\n  };\n\n  isMenuOpen = name => {\n    let open = this.state.menus.includes(name);\n    return open;\n  };\n\n  render() {\n    if (!this.leafletElement || !this.leafletElement.getContainer()) {\n      return null;\n    }\n    // console.log(this.state.baseLayers);\n    return (\n      <React.Fragment>\n        {ReactDOM.createPortal(\n          <Paper\n            onMouseEnter={this.openMenu}\n            onMouseLeave={this.closeMenu}\n            {...this.props}\n          >\n            {this.state.menuOpen && (\n              <div style={{ padding: 10 }}>\n                {Object.keys(this.state.layers).map(g => {\n                  return (\n                    <React.Fragment key={g}>\n                      <ListItem\n                        button\n                        onClick={() => this.onCollapseClick(`${g}`)}\n                      >\n                        <ListItemIcon>{icons[g]}</ListItemIcon>\n                        <ListItemText primary={g} />\n                        {this.isMenuOpen(g) ? <ExpandLess /> : <ExpandMore />}\n                      </ListItem>\n                      <Typography />\n                      <Divider />\n                      <Collapse\n                        in={this.isMenuOpen(g)}\n                        timeout=\"auto\"\n                        unmountOnExit\n                      >\n                        <List>\n                          {this.state.layers[g].map(l => {\n                            return (\n                              <ListItem key={l.name}>\n                                <ListItemIcon>\n                                  <Checkbox\n                                    onClick={() => this.toggleLayer(l)}\n                                    edge=\"start\"\n                                    checked={l.checked}\n                                  />\n                                </ListItemIcon>\n                                <ListItemText primary={l.name} />\n                              </ListItem>\n                            );\n                          })}\n                        </List>\n                      </Collapse>\n                    </React.Fragment>\n                  );\n                })}\n              </div>\n            )}\n            {!this.state.menuOpen && (\n              <IconButton>\n                <LayerIcon />\n              </IconButton>\n            )}\n          </Paper>,\n          this.leafletElement.getContainer()\n        )}\n        {Children.map(this.props.children, child => {\n          return child ? cloneElement(child, this.controlProps) : null;\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withLeaflet(LayerControl);\n"]},"metadata":{},"sourceType":"module"}